/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from "axios";
import { Configuration } from "../configuration";
import { RequestArgs, BaseAPI } from "../base";
import { BankAccount } from "../models";
import { BankAccountDeletion } from "../models";
import { BankAccountList } from "../models";
import { BankAccountVerify } from "../models";
import { BankAccountWritable } from "../models";
/**
 * BankAccountsApi - axios parameter creator
 * @export
 */
export declare const BankAccountsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Creates a new bank account with the provided properties. Bank accounts created in live mode will need to be verified via micro deposits before being able to send live checks. The deposits will appear in the bank account in 2-3 business days and have the description \"VERIFICATION\".
     * @summary create
     * @param {BankAccountWritable} bankAccountWritable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountCreate: (bankAccountWritable: BankAccountWritable, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Permanently deletes a bank account. It cannot be undone.
     * @summary delete
     * @param {string} bankId id of the bank account
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountDelete: (bankId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieves the details of an existing bank account. You need only supply the unique bank account identifier that was returned upon bank account creation.
     * @summary get
     * @param {string} bankId id of the bank account
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountRetrieve: (bankId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Verify a bank account in order to create a check.
     * @summary verify
     * @param {string} bankId id of the bank account to be verified
     * @param {BankAccountVerify} bankAccountVerify
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountVerify: (bankId: string, bankAccountVerify: BankAccountVerify, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of your bank accounts. The bank accounts are returned sorted by creation date, with the most recently created bank accounts appearing first.
     * @summary list
     * @param {number} [limit] How many results to return.
     * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
     * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
     * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
     * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
     * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsList: (limit?: number | undefined, before?: string | undefined, after?: string | undefined, include?: string[] | undefined, dateCreated?: {
        [key: string]: string;
    } | undefined, metadata?: {
        [key: string]: string;
    } | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BankAccountsApi - functional programming interface
 * @export
 */
export declare const BankAccountsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Creates a new bank account with the provided properties. Bank accounts created in live mode will need to be verified via micro deposits before being able to send live checks. The deposits will appear in the bank account in 2-3 business days and have the description \"VERIFICATION\".
     * @summary create
     * @param {BankAccountWritable} bankAccountWritable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountCreate(bankAccountWritable: BankAccountWritable, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<BankAccount>>;
    /**
     * Permanently deletes a bank account. It cannot be undone.
     * @summary delete
     * @param {string} bankId id of the bank account
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountDelete(bankId: string, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<BankAccountDeletion>>;
    /**
     * Retrieves the details of an existing bank account. You need only supply the unique bank account identifier that was returned upon bank account creation.
     * @summary get
     * @param {string} bankId id of the bank account
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountRetrieve(bankId: string, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<BankAccount>>;
    /**
     * Verify a bank account in order to create a check.
     * @summary verify
     * @param {string} bankId id of the bank account to be verified
     * @param {BankAccountVerify} bankAccountVerify
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountVerify(bankId: string, bankAccountVerify: BankAccountVerify, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<BankAccount>>;
    /**
     * Returns a list of your bank accounts. The bank accounts are returned sorted by creation date, with the most recently created bank accounts appearing first.
     * @summary list
     * @param {number} [limit] How many results to return.
     * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
     * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
     * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
     * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
     * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsList(limit?: number | undefined, before?: string | undefined, after?: string | undefined, include?: string[] | undefined, dateCreated?: {
        [key: string]: string;
    } | undefined, metadata?: {
        [key: string]: string;
    } | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<BankAccountList>>;
};
/**
 * BankAccountsApi - object-oriented interface
 * @export
 * @class BankAccountsApi
 * @extends {BaseAPI}
 */
export declare class BankAccountsApi extends BaseAPI {
    /**
     * Creates a new bank account with the provided properties. Bank accounts created in live mode will need to be verified via micro deposits before being able to send live checks. The deposits will appear in the bank account in 2-3 business days and have the description \"VERIFICATION\".
     * @summary create
     * @param {BankAccountWritable} bankAccountWritable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    create(bankAccountWritable: BankAccountWritable, options?: AxiosRequestConfig): Promise<BankAccount>;
    /**
     * Permanently deletes a bank account. It cannot be undone.
     * @summary delete
     * @param {string} bankId id of the bank account
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    delete(bankId: string, options?: AxiosRequestConfig): Promise<BankAccountDeletion>;
    /**
     * Retrieves the details of an existing bank account. You need only supply the unique bank account identifier that was returned upon bank account creation.
     * @summary get
     * @param {string} bankId id of the bank account
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    get(bankId: string, options?: AxiosRequestConfig): Promise<BankAccount>;
    /**
     * Verify a bank account in order to create a check.
     * @summary verify
     * @param {string} bankId id of the bank account to be verified
     * @param {BankAccountVerify} bankAccountVerify
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    verify(bankId: string, bankAccountVerify: BankAccountVerify, options?: AxiosRequestConfig): Promise<BankAccount>;
    /**
     * Returns a list of your bank accounts. The bank accounts are returned sorted by creation date, with the most recently created bank accounts appearing first.
     * @summary list
     * @param {number} [limit] How many results to return.
     * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
     * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
     * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
     * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
     * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    list(limit?: number, before?: string, after?: string, include?: Array<string>, dateCreated?: {
        [key: string]: string;
    }, metadata?: {
        [key: string]: string;
    }, options?: AxiosRequestConfig): Promise<BankAccountList>;
}
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
