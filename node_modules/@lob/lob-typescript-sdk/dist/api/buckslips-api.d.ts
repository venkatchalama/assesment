/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from "axios";
import { Configuration } from "../configuration";
import { RequestArgs, BaseAPI } from "../base";
import { Buckslip } from "../models";
import { BuckslipDeletion } from "../models";
import { BuckslipEditable } from "../models";
import { BuckslipUpdatable } from "../models";
import { BuckslipsList } from "../models";
/**
 * BuckslipsApi - axios parameter creator
 * @export
 */
export declare const BuckslipsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Creates a new buckslip given information
     * @summary create
     * @param {BuckslipEditable} buckslipEditable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    buckslipCreate: (buckslipEditable: BuckslipEditable, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete an existing buckslip. You need only supply the unique identifier that was returned upon buckslip creation.
     * @summary delete
     * @param {string} buckslipId id of the buckslip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    buckslipDelete: (buckslipId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieves the details of an existing buckslip. You need only supply the unique customer identifier that was returned upon buckslip creation.
     * @summary get
     * @param {string} buckslipId id of the buckslip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    buckslipRetrieve: (buckslipId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update the details of an existing buckslip. You need only supply the unique identifier that was returned upon buckslip creation.
     * @summary update
     * @param {string} buckslipId id of the buckslip
     * @param {BuckslipUpdatable} buckslipUpdatable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    buckslipUpdate: (buckslipId: string, buckslipUpdatable: BuckslipUpdatable, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of your buckslips. The buckslips are returned sorted by creation date, with the most recently created buckslips appearing first.
     * @summary List
     * @param {number} [limit] How many results to return.
     * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
     * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
     * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    buckslipsList: (limit?: number | undefined, before?: string | undefined, after?: string | undefined, include?: string[] | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BuckslipsApi - functional programming interface
 * @export
 */
export declare const BuckslipsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Creates a new buckslip given information
     * @summary create
     * @param {BuckslipEditable} buckslipEditable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    buckslipCreate(buckslipEditable: BuckslipEditable, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Buckslip>>;
    /**
     * Delete an existing buckslip. You need only supply the unique identifier that was returned upon buckslip creation.
     * @summary delete
     * @param {string} buckslipId id of the buckslip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    buckslipDelete(buckslipId: string, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<BuckslipDeletion>>;
    /**
     * Retrieves the details of an existing buckslip. You need only supply the unique customer identifier that was returned upon buckslip creation.
     * @summary get
     * @param {string} buckslipId id of the buckslip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    buckslipRetrieve(buckslipId: string, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Buckslip>>;
    /**
     * Update the details of an existing buckslip. You need only supply the unique identifier that was returned upon buckslip creation.
     * @summary update
     * @param {string} buckslipId id of the buckslip
     * @param {BuckslipUpdatable} buckslipUpdatable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    buckslipUpdate(buckslipId: string, buckslipUpdatable: BuckslipUpdatable, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Buckslip>>;
    /**
     * Returns a list of your buckslips. The buckslips are returned sorted by creation date, with the most recently created buckslips appearing first.
     * @summary List
     * @param {number} [limit] How many results to return.
     * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
     * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
     * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    buckslipsList(limit?: number | undefined, before?: string | undefined, after?: string | undefined, include?: string[] | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<BuckslipsList>>;
};
/**
 * BuckslipsApi - object-oriented interface
 * @export
 * @class BuckslipsApi
 * @extends {BaseAPI}
 */
export declare class BuckslipsApi extends BaseAPI {
    /**
     * Creates a new buckslip given information
     * @summary create
     * @param {BuckslipEditable} buckslipEditable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BuckslipsApi
     */
    create(buckslipEditable: BuckslipEditable, options?: AxiosRequestConfig): Promise<Buckslip>;
    /**
     * Delete an existing buckslip. You need only supply the unique identifier that was returned upon buckslip creation.
     * @summary delete
     * @param {string} buckslipId id of the buckslip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BuckslipsApi
     */
    delete(buckslipId: string, options?: AxiosRequestConfig): Promise<BuckslipDeletion>;
    /**
     * Retrieves the details of an existing buckslip. You need only supply the unique customer identifier that was returned upon buckslip creation.
     * @summary get
     * @param {string} buckslipId id of the buckslip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BuckslipsApi
     */
    get(buckslipId: string, options?: AxiosRequestConfig): Promise<Buckslip>;
    /**
     * Update the details of an existing buckslip. You need only supply the unique identifier that was returned upon buckslip creation.
     * @summary update
     * @param {string} buckslipId id of the buckslip
     * @param {BuckslipUpdatable} buckslipUpdatable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BuckslipsApi
     */
    update(buckslipId: string, buckslipUpdatable: BuckslipUpdatable, options?: AxiosRequestConfig): Promise<Buckslip>;
    /**
     * Returns a list of your buckslips. The buckslips are returned sorted by creation date, with the most recently created buckslips appearing first.
     * @summary List
     * @param {number} [limit] How many results to return.
     * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
     * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
     * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BuckslipsApi
     */
    List(limit?: number, before?: string, after?: string, include?: Array<string>, options?: AxiosRequestConfig): Promise<BuckslipsList>;
}
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
