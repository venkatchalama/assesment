/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from "axios";
import { Configuration } from "../configuration";
import { RequestArgs, BaseAPI } from "../base";
import { CardOrder } from "../models";
import { CardOrderEditable } from "../models";
import { CardOrderList } from "../models";
/**
 * CardOrdersApi - axios parameter creator
 * @export
 */
export declare const CardOrdersApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Creates a new card order given information
     * @summary create
     * @param {string} cardId The ID of the card to which the card orders belong.
     * @param {CardOrderEditable} cardOrderEditable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardOrderCreate: (cardId: string, cardOrderEditable: CardOrderEditable, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieves the card orders associated with the given card id.
     * @summary get
     * @param {string} cardId The ID of the card to which the card orders belong.
     * @param {number} [limit] How many results to return.
     * @param {number} [offset] An integer that designates the offset at which to begin returning results. Defaults to 0.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardOrdersRetrieve: (cardId: string, limit?: number | undefined, offset?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CardOrdersApi - functional programming interface
 * @export
 */
export declare const CardOrdersApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Creates a new card order given information
     * @summary create
     * @param {string} cardId The ID of the card to which the card orders belong.
     * @param {CardOrderEditable} cardOrderEditable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardOrderCreate(cardId: string, cardOrderEditable: CardOrderEditable, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<CardOrder>>;
    /**
     * Retrieves the card orders associated with the given card id.
     * @summary get
     * @param {string} cardId The ID of the card to which the card orders belong.
     * @param {number} [limit] How many results to return.
     * @param {number} [offset] An integer that designates the offset at which to begin returning results. Defaults to 0.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardOrdersRetrieve(cardId: string, limit?: number | undefined, offset?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<CardOrderList>>;
};
/**
 * CardOrdersApi - object-oriented interface
 * @export
 * @class CardOrdersApi
 * @extends {BaseAPI}
 */
export declare class CardOrdersApi extends BaseAPI {
    /**
     * Creates a new card order given information
     * @summary create
     * @param {string} cardId The ID of the card to which the card orders belong.
     * @param {CardOrderEditable} cardOrderEditable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardOrdersApi
     */
    create(cardId: string, cardOrderEditable: CardOrderEditable, options?: AxiosRequestConfig): Promise<CardOrder>;
    /**
     * Retrieves the card orders associated with the given card id.
     * @summary get
     * @param {string} cardId The ID of the card to which the card orders belong.
     * @param {number} [limit] How many results to return.
     * @param {number} [offset] An integer that designates the offset at which to begin returning results. Defaults to 0.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardOrdersApi
     */
    get(cardId: string, limit?: number, offset?: number, options?: AxiosRequestConfig): Promise<CardOrderList>;
}
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
