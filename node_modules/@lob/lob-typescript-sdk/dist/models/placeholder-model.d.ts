/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AddressDomestic } from "./address-domestic";
import { LetterDetailsReturned } from "./letter-details-returned";
import { LetterDetailsWritable } from "./letter-details-writable";
import { PostcardDetailsReturned } from "./postcard-details-returned";
import { PostcardDetailsWritable } from "./postcard-details-writable";
import { ReturnEnvelope } from "./return-envelope";
/**
 *
 * @export
 * @class PlaceholderModel
 */
export declare class PlaceholderModel {
    constructor(input?: any);
    /**
     *
     * @type {ReturnEnvelope}
     * @memberof PlaceholderModel
     */
    "return_envelope"?: ReturnEnvelope;
    /**
     *
     * @type {AddressDomestic}
     * @memberof PlaceholderModel
     */
    "address_domestic"?: AddressDomestic;
    /**
     *
     * @type {LetterDetailsWritable}
     * @memberof PlaceholderModel
     */
    "letter_details_writable"?: LetterDetailsWritable;
    /**
     *
     * @type {PostcardDetailsWritable}
     * @memberof PlaceholderModel
     */
    "postcard_details_writable"?: PostcardDetailsWritable;
    /**
     *
     * @type {LetterDetailsReturned}
     * @memberof PlaceholderModel
     */
    "letter_details_returned"?: LetterDetailsReturned;
    /**
     *
     * @type {PostcardDetailsReturned}
     * @memberof PlaceholderModel
     */
    "postcard_details_returned"?: PostcardDetailsReturned;
    toJSON(): {};
}
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
