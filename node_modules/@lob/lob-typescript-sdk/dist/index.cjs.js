
  /**
   * @license
   * author: Lob <support@lob.com> (https://lob.com/)
   * Lob Typescript SDK v1.3.2
   */

'use strict';

var require$$0 = require('tslib');
var require$$1 = require('axios');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var require$$0__default = /*#__PURE__*/_interopDefaultLegacy(require$$0);
var require$$1__default = /*#__PURE__*/_interopDefaultLegacy(require$$1);

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

var lobTypescriptSdk = {};

var api = {};

var addressesApi = {};

var common = {};

var base = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequiredError = exports.BaseAPI = exports.COLLECTION_FORMATS = exports.BASE_PATH = void 0;
var tslib_1 = require$$0__default["default"];
// Some imports not used depending on template conditions
// @ts-ignore
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
exports.BASE_PATH = "https://api.lob.com/v1".replace(/\/+$/, "");
/**
 *
 * @export
 */
exports.COLLECTION_FORMATS = {
    csv: ",",
    ssv: " ",
    tsv: "\t",
    pipes: "|",
};
/**
 *
 * @export
 * @class BaseAPI
 */
var BaseAPI = /** @class */ (function () {
    function BaseAPI(configuration, basePath, axios) {
        if (basePath === void 0) { basePath = exports.BASE_PATH; }
        if (axios === void 0) { axios = axios_1.default; }
        this.basePath = basePath;
        this.axios = axios;
        if (configuration) {
            this.configuration = configuration;
            this.basePath = configuration.basePath || this.basePath;
        }
    }
    return BaseAPI;
}());
exports.BaseAPI = BaseAPI;
/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
var RequiredError = /** @class */ (function (_super) {
    tslib_1.__extends(RequiredError, _super);
    function RequiredError(field, msg) {
        var _this = _super.call(this, msg) || this;
        _this.field = field;
        _this.name = "RequiredError";
        return _this;
    }
    return RequiredError;
}(Error));
exports.RequiredError = RequiredError;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(base));

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(common, "__esModule", { value: true });
common.valueToString = common.createRequestFunction = common.toPathString = common.serializeDataIfNeeded = common.setSearchParams = common.setOAuthToObject = common.setBearerAuthToObject = common.setBasicAuthToObject = common.setApiKeyToObject = common.assertParamExists = common.DUMMY_BASE_URL = void 0;
var tslib_1$1 = require$$0__default["default"];
var base_1 = base;
/**
 *
 * @export
 */
common.DUMMY_BASE_URL = "https://example.com";
/**
 *
 * @throws {RequiredError}
 * @export
 */
var assertParamExists = function (functionName, paramName, paramValue) {
    if (paramValue === null || paramValue === undefined) {
        throw new base_1.RequiredError(paramName, "Required parameter ".concat(paramName, " was null or undefined when calling ").concat(functionName, "."));
    }
};
common.assertParamExists = assertParamExists;
/**
 *
 * @export
 */
var setApiKeyToObject = function (object, keyParamName, configuration) {
    return tslib_1$1.__awaiter(this, void 0, void 0, function () {
        var localVarApiKeyValue, _a;
        return tslib_1$1.__generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    if (!(configuration && configuration.apiKey)) return [3 /*break*/, 5];
                    if (!(typeof configuration.apiKey === "function")) return [3 /*break*/, 2];
                    return [4 /*yield*/, configuration.apiKey(keyParamName)];
                case 1:
                    _a = _b.sent();
                    return [3 /*break*/, 4];
                case 2: return [4 /*yield*/, configuration.apiKey];
                case 3:
                    _a = _b.sent();
                    _b.label = 4;
                case 4:
                    localVarApiKeyValue = _a;
                    object[keyParamName] = localVarApiKeyValue;
                    _b.label = 5;
                case 5: return [2 /*return*/];
            }
        });
    });
};
common.setApiKeyToObject = setApiKeyToObject;
/**
 *
 * @export
 */
var setBasicAuthToObject = function (object, configuration) {
    if (configuration && (configuration.username || configuration.password)) {
        object["auth"] = {
            username: configuration.username,
            password: configuration.password,
        };
    }
};
common.setBasicAuthToObject = setBasicAuthToObject;
/**
 *
 * @export
 */
var setBearerAuthToObject = function (object, configuration) {
    return tslib_1$1.__awaiter(this, void 0, void 0, function () {
        var accessToken, _a;
        return tslib_1$1.__generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    if (!(configuration && configuration.accessToken)) return [3 /*break*/, 5];
                    if (!(typeof configuration.accessToken === "function")) return [3 /*break*/, 2];
                    return [4 /*yield*/, configuration.accessToken()];
                case 1:
                    _a = _b.sent();
                    return [3 /*break*/, 4];
                case 2: return [4 /*yield*/, configuration.accessToken];
                case 3:
                    _a = _b.sent();
                    _b.label = 4;
                case 4:
                    accessToken = _a;
                    object["Authorization"] = "Bearer " + accessToken;
                    _b.label = 5;
                case 5: return [2 /*return*/];
            }
        });
    });
};
common.setBearerAuthToObject = setBearerAuthToObject;
/**
 *
 * @export
 */
var setOAuthToObject = function (object, name, scopes, configuration) {
    return tslib_1$1.__awaiter(this, void 0, void 0, function () {
        var localVarAccessTokenValue, _a;
        return tslib_1$1.__generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    if (!(configuration && configuration.accessToken)) return [3 /*break*/, 5];
                    if (!(typeof configuration.accessToken === "function")) return [3 /*break*/, 2];
                    return [4 /*yield*/, configuration.accessToken(name, scopes)];
                case 1:
                    _a = _b.sent();
                    return [3 /*break*/, 4];
                case 2: return [4 /*yield*/, configuration.accessToken];
                case 3:
                    _a = _b.sent();
                    _b.label = 4;
                case 4:
                    localVarAccessTokenValue = _a;
                    object["Authorization"] = "Bearer " + localVarAccessTokenValue;
                    _b.label = 5;
                case 5: return [2 /*return*/];
            }
        });
    });
};
common.setOAuthToObject = setOAuthToObject;
/**
 *
 * @export
 */
var setSearchParams = function (url) {
    var objects = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        objects[_i - 1] = arguments[_i];
    }
    var searchParams = new URLSearchParams(url.search);
    for (var _a = 0, objects_1 = objects; _a < objects_1.length; _a++) {
        var object = objects_1[_a];
        for (var key in object) {
            if (Array.isArray(object[key])) {
                searchParams.delete(key);
                for (var _b = 0, _c = object[key]; _b < _c.length; _b++) {
                    var item = _c[_b];
                    searchParams.append(key, item);
                }
            }
            else {
                searchParams.set(key, object[key]);
            }
        }
    }
    url.search = searchParams.toString();
};
common.setSearchParams = setSearchParams;
/**
 *
 * @export
 */
var serializeDataIfNeeded = function (value, requestOptions, configuration) {
    var nonString = typeof value !== "string";
    var needsSerialization = nonString && configuration && configuration.isJsonMime
        ? configuration.isJsonMime(requestOptions.headers["Content-Type"])
        : nonString;
    return needsSerialization
        ? JSON.stringify(value !== undefined ? value : {})
        : value || "";
};
common.serializeDataIfNeeded = serializeDataIfNeeded;
/**
 *
 * @export
 */
var toPathString = function (url) {
    return url.pathname + url.search + url.hash;
};
common.toPathString = toPathString;
/**
 *
 * @export
 */
var createRequestFunction = function (axiosArgs, globalAxios, BASE_PATH, configuration) {
    return function (axios, basePath) {
        if (axios === void 0) { axios = globalAxios; }
        if (basePath === void 0) { basePath = BASE_PATH; }
        axiosArgs.options = tslib_1$1.__assign(tslib_1$1.__assign({}, axiosArgs.options), {
            options: {
                "User-Agent": "".concat(process.env.npm_package_name, "/").concat(process.env.npm_package_version),
            },
        });
        var axiosRequestArgs = tslib_1$1.__assign(tslib_1$1.__assign({}, axiosArgs.options), { url: ((configuration === null || configuration === void 0 ? void 0 : configuration.basePath) || basePath) + axiosArgs.url });
        return axios.request(axiosRequestArgs);
    };
};
common.createRequestFunction = createRequestFunction;
/**
 * Converts an input value to a string. When the input value is an object, it is converted to a JSON string.
 * @export
 */
var valueToString = function valueToString(value) {
    var out;
    switch (typeof value) {
        case "object":
            out = JSON.stringify(value);
            break;
        default:
            out = String(value);
            break;
    }
    return out;
};
common.valueToString = valueToString;

var models = {};

var address = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressObjectEnum = exports.Address = void 0;
/**
 *
 * @export
 * @class Address
 */
var Address = /** @class */ (function () {
    function Address(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.name) !== "undefined") {
            this.name = input.name;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.company) !== "undefined") {
            this.company = input.company;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.phone) !== "undefined") {
            this.phone = input.phone;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.email) !== "undefined") {
            this.email = input.email;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_line1) !== "undefined") {
            this.address_line1 = input.address_line1;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_line2) !== "undefined") {
            this.address_line2 = input.address_line2;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_city) !== "undefined") {
            this.address_city = input.address_city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_state) !== "undefined") {
            this.address_state = input.address_state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_zip) !== "undefined") {
            this.address_zip = input.address_zip;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_country) !== "undefined") {
            this.address_country = input.address_country;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.recipient_moved) !== "undefined") {
            this.recipient_moved = input.recipient_moved;
        }
    }
    Object.defineProperty(Address.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^adr_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Address.prototype, "address_state", {
        get: function () {
            return (this._address_state || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^[a-zA-Z]{2}$/.test(newValue)) {
                throw new Error("Invalid address_state provided");
            }
            this._address_state = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Address.prototype, "address_zip", {
        get: function () {
            return (this._address_zip || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^\d{5}(-\d{4})?$/.test(newValue)) {
                throw new Error("Invalid address_zip provided");
            }
            this._address_zip = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Address.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return Address;
}());
exports.Address = Address;
(function (AddressObjectEnum) {
    AddressObjectEnum["Address"] = "address";
})(exports.AddressObjectEnum || (exports.AddressObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(address));

var addressDeletion = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressDeletionObjectEnum = exports.AddressDeletion = void 0;
/**
 * Object returned upon deleting an address
 * @export
 * @class AddressDeletion
 */
var AddressDeletion = /** @class */ (function () {
    function AddressDeletion(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(AddressDeletion.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^adr_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    AddressDeletion.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return AddressDeletion;
}());
exports.AddressDeletion = AddressDeletion;
(function (AddressDeletionObjectEnum) {
    AddressDeletionObjectEnum["AddressDeleted"] = "address_deleted";
})(exports.AddressDeletionObjectEnum || (exports.AddressDeletionObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(addressDeletion));

var addressDomestic = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(addressDomestic, "__esModule", { value: true });
addressDomestic.AddressDomestic = void 0;
/**
 *
 * @export
 * @class AddressDomestic
 */
var AddressDomestic = /** @class */ (function () {
    function AddressDomestic(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.address_line1) !== "undefined") {
            this.address_line1 = input.address_line1;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_line2) !== "undefined") {
            this.address_line2 = input.address_line2;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_city) !== "undefined") {
            this.address_city = input.address_city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_state) !== "undefined") {
            this.address_state = input.address_state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_zip) !== "undefined") {
            this.address_zip = input.address_zip;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.name) !== "undefined") {
            this.name = input.name;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.company) !== "undefined") {
            this.company = input.company;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.phone) !== "undefined") {
            this.phone = input.phone;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.email) !== "undefined") {
            this.email = input.email;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_country) !== "undefined") {
            this.address_country = input.address_country;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
    }
    Object.defineProperty(AddressDomestic.prototype, "address_country", {
        get: function () {
            return (this._address_country || null || undefined);
        },
        set: function (newValue) {
            if (newValue && !/US/.test(newValue)) {
                throw new Error("Invalid address_country provided");
            }
            this._address_country = newValue;
        },
        enumerable: false,
        configurable: true
    });
    AddressDomestic.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return AddressDomestic;
}());
addressDomestic.AddressDomestic = AddressDomestic;

var addressDomesticExpanded = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(addressDomesticExpanded, "__esModule", { value: true });
addressDomesticExpanded.AddressDomesticExpanded = void 0;
/**
 *
 * @export
 * @class AddressDomesticExpanded
 */
var AddressDomesticExpanded = /** @class */ (function () {
    function AddressDomesticExpanded(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.address_line1) !== "undefined") {
            this.address_line1 = input.address_line1;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_line2) !== "undefined") {
            this.address_line2 = input.address_line2;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_city) !== "undefined") {
            this.address_city = input.address_city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_state) !== "undefined") {
            this.address_state = input.address_state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_zip) !== "undefined") {
            this.address_zip = input.address_zip;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.name) !== "undefined") {
            this.name = input.name;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.company) !== "undefined") {
            this.company = input.company;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.phone) !== "undefined") {
            this.phone = input.phone;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.email) !== "undefined") {
            this.email = input.email;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_country) !== "undefined") {
            this.address_country = input.address_country;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
    }
    Object.defineProperty(AddressDomesticExpanded.prototype, "address_country", {
        get: function () {
            return (this._address_country || undefined);
        },
        set: function (newValue) {
            if (newValue && !/UNITED STATES/.test(newValue)) {
                throw new Error("Invalid address_country provided");
            }
            this._address_country = newValue;
        },
        enumerable: false,
        configurable: true
    });
    AddressDomesticExpanded.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return AddressDomesticExpanded;
}());
addressDomesticExpanded.AddressDomesticExpanded = AddressDomesticExpanded;

var addressEditable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(addressEditable, "__esModule", { value: true });
addressEditable.AddressEditable = void 0;
/**
 *
 * @export
 * @class AddressEditable
 */
var AddressEditable = /** @class */ (function () {
    function AddressEditable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.address_line1) !== "undefined") {
            this.address_line1 = input.address_line1;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_line2) !== "undefined") {
            this.address_line2 = input.address_line2;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_city) !== "undefined") {
            this.address_city = input.address_city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_state) !== "undefined") {
            this.address_state = input.address_state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_zip) !== "undefined") {
            this.address_zip = input.address_zip;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_country) !== "undefined") {
            this.address_country = input.address_country;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.name) !== "undefined") {
            this.name = input.name;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.company) !== "undefined") {
            this.company = input.company;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.phone) !== "undefined") {
            this.phone = input.phone;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.email) !== "undefined") {
            this.email = input.email;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
    }
    AddressEditable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return AddressEditable;
}());
addressEditable.AddressEditable = AddressEditable;

var addressList = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(addressList, "__esModule", { value: true });
addressList.AddressList = void 0;
/**
 *
 * @export
 * @class AddressList
 */
var AddressList = /** @class */ (function () {
    function AddressList(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.data) !== "undefined") {
            this.data = input.data;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.next_url) !== "undefined") {
            this.next_url = input.next_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.previous_url) !== "undefined") {
            this.previous_url = input.previous_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.count) !== "undefined") {
            this.count = input.count;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.total_count) !== "undefined") {
            this.total_count = input.total_count;
        }
    }
    Object.defineProperty(AddressList.prototype, "nextPageToken", {
        get: function () {
            var _a;
            if (!this.next_url) {
                return undefined;
            }
            return (_a = this.next_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("after="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AddressList.prototype, "previousPageToken", {
        get: function () {
            var _a;
            if (!this.previous_url) {
                return undefined;
            }
            return (_a = this.previous_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("before="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    AddressList.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return AddressList;
}());
addressList.AddressList = AddressList;

var bankAccount = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BankAccountObjectEnum = exports.BankAccountAccountTypeEnum = exports.BankAccount = void 0;
/**
 *
 * @export
 * @class BankAccount
 */
var BankAccount = /** @class */ (function () {
    function BankAccount(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.routing_number) !== "undefined") {
            this.routing_number = input.routing_number;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.account_number) !== "undefined") {
            this.account_number = input.account_number;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.account_type) !== "undefined") {
            this.account_type = input.account_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.signatory) !== "undefined") {
            this.signatory = input.signatory;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.signature_url) !== "undefined") {
            this.signature_url = input.signature_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.bank_name) !== "undefined") {
            this.bank_name = input.bank_name;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.verified) !== "undefined") {
            this.verified = input.verified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(BankAccount.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (newValue) {
            if (newValue && !/^bank_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BankAccount.prototype, "signature_url", {
        get: function () {
            return (this._signature_url || null || undefined);
        },
        set: function (newValue) {
            if (newValue &&
                !/^https:\/\/lob-assets\.com\/(letters|postcards|bank-accounts|checks|self-mailers|cards)\/[a-z]{3,4}_[a-z0-9]{15,16}(\.pdf|_thumb_[a-z]+_[0-9]+\.png)\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$/.test(newValue)) {
                throw new Error("Invalid signature_url provided");
            }
            this._signature_url = newValue;
        },
        enumerable: false,
        configurable: true
    });
    BankAccount.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BankAccount;
}());
exports.BankAccount = BankAccount;
(function (BankAccountAccountTypeEnum) {
    BankAccountAccountTypeEnum["Company"] = "company";
    BankAccountAccountTypeEnum["Individual"] = "individual";
})(exports.BankAccountAccountTypeEnum || (exports.BankAccountAccountTypeEnum = {}));
(function (BankAccountObjectEnum) {
    BankAccountObjectEnum["BankAccount"] = "bank_account";
})(exports.BankAccountObjectEnum || (exports.BankAccountObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(bankAccount));

var bankAccountDeletion = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BankAccountDeletionObjectEnum = exports.BankAccountDeletion = void 0;
/**
 * Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob\'s end.
 * @export
 * @class BankAccountDeletion
 */
var BankAccountDeletion = /** @class */ (function () {
    function BankAccountDeletion(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(BankAccountDeletion.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^bank_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    BankAccountDeletion.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BankAccountDeletion;
}());
exports.BankAccountDeletion = BankAccountDeletion;
(function (BankAccountDeletionObjectEnum) {
    BankAccountDeletionObjectEnum["BankAccountDeleted"] = "bank_account_deleted";
})(exports.BankAccountDeletionObjectEnum || (exports.BankAccountDeletionObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(bankAccountDeletion));

var bankAccountList = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(bankAccountList, "__esModule", { value: true });
bankAccountList.BankAccountList = void 0;
/**
 *
 * @export
 * @class BankAccountList
 */
var BankAccountList = /** @class */ (function () {
    function BankAccountList(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.data) !== "undefined") {
            this.data = input.data;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.next_url) !== "undefined") {
            this.next_url = input.next_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.previous_url) !== "undefined") {
            this.previous_url = input.previous_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.count) !== "undefined") {
            this.count = input.count;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.total_count) !== "undefined") {
            this.total_count = input.total_count;
        }
    }
    Object.defineProperty(BankAccountList.prototype, "nextPageToken", {
        get: function () {
            var _a;
            if (!this.next_url) {
                return undefined;
            }
            return (_a = this.next_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("after="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BankAccountList.prototype, "previousPageToken", {
        get: function () {
            var _a;
            if (!this.previous_url) {
                return undefined;
            }
            return (_a = this.previous_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("before="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    BankAccountList.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BankAccountList;
}());
bankAccountList.BankAccountList = BankAccountList;

var bankAccountVerify = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(bankAccountVerify, "__esModule", { value: true });
bankAccountVerify.BankAccountVerify = void 0;
/**
 *
 * @export
 * @class BankAccountVerify
 */
var BankAccountVerify = /** @class */ (function () {
    function BankAccountVerify(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.amounts) !== "undefined") {
            this.amounts = input.amounts;
        }
    }
    BankAccountVerify.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BankAccountVerify;
}());
bankAccountVerify.BankAccountVerify = BankAccountVerify;

var bankAccountWritable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(bankAccountWritable, "__esModule", { value: true });
bankAccountWritable.BankAccountWritable = void 0;
/**
 *
 * @export
 * @class BankAccountWritable
 */
var BankAccountWritable = /** @class */ (function () {
    function BankAccountWritable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.routing_number) !== "undefined") {
            this.routing_number = input.routing_number;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.account_number) !== "undefined") {
            this.account_number = input.account_number;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.account_type) !== "undefined") {
            this.account_type = input.account_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.signatory) !== "undefined") {
            this.signatory = input.signatory;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
    }
    BankAccountWritable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BankAccountWritable;
}());
bankAccountWritable.BankAccountWritable = BankAccountWritable;

var bankTypeEnum = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BankTypeEnum = void 0;
(function (BankTypeEnum) {
    BankTypeEnum["Company"] = "company";
    BankTypeEnum["Individual"] = "individual";
})(exports.BankTypeEnum || (exports.BankTypeEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(bankTypeEnum));

var billingGroup = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BillingGroupObjectEnum = exports.BillingGroup = void 0;
/**
 *
 * @export
 * @class BillingGroup
 */
var BillingGroup = /** @class */ (function () {
    function BillingGroup(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.name) !== "undefined") {
            this.name = input.name;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(BillingGroup.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (newValue) {
            if (newValue && !/^bg_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    BillingGroup.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BillingGroup;
}());
exports.BillingGroup = BillingGroup;
(function (BillingGroupObjectEnum) {
    BillingGroupObjectEnum["BillingGroup"] = "billing_group";
})(exports.BillingGroupObjectEnum || (exports.BillingGroupObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(billingGroup));

var billingGroupEditable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(billingGroupEditable, "__esModule", { value: true });
billingGroupEditable.BillingGroupEditable = void 0;
/**
 *
 * @export
 * @class BillingGroupEditable
 */
var BillingGroupEditable = /** @class */ (function () {
    function BillingGroupEditable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.name) !== "undefined") {
            this.name = input.name;
        }
    }
    BillingGroupEditable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BillingGroupEditable;
}());
billingGroupEditable.BillingGroupEditable = BillingGroupEditable;

var billingGroupList = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(billingGroupList, "__esModule", { value: true });
billingGroupList.BillingGroupList = void 0;
/**
 *
 * @export
 * @class BillingGroupList
 */
var BillingGroupList = /** @class */ (function () {
    function BillingGroupList(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.data) !== "undefined") {
            this.data = input.data;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.next_url) !== "undefined") {
            this.next_url = input.next_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.previous_url) !== "undefined") {
            this.previous_url = input.previous_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.count) !== "undefined") {
            this.count = input.count;
        }
    }
    Object.defineProperty(BillingGroupList.prototype, "nextPageToken", {
        get: function () {
            var _a;
            if (!this.next_url) {
                return undefined;
            }
            return (_a = this.next_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("after="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BillingGroupList.prototype, "previousPageToken", {
        get: function () {
            var _a;
            if (!this.previous_url) {
                return undefined;
            }
            return (_a = this.previous_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("before="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    BillingGroupList.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BillingGroupList;
}());
billingGroupList.BillingGroupList = BillingGroupList;

var buckslip = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BuckslipSizeEnum = exports.BuckslipObjectEnum = exports.BuckslipStatusEnum = exports.BuckslipFinishEnum = exports.BuckslipWeightEnum = exports.BuckslipStockEnum = exports.Buckslip = void 0;
/**
 *
 * @export
 * @class Buckslip
 */
var Buckslip = /** @class */ (function () {
    function Buckslip(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.auto_reorder) !== "undefined") {
            this.auto_reorder = input.auto_reorder;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.reorder_quantity) !== "undefined") {
            this.reorder_quantity = input.reorder_quantity;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.threshold_amount) !== "undefined") {
            this.threshold_amount = input.threshold_amount;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.url) !== "undefined") {
            this.url = input.url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.raw_url) !== "undefined") {
            this.raw_url = input.raw_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.front_original_url) !== "undefined") {
            this.front_original_url = input.front_original_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.back_original_url) !== "undefined") {
            this.back_original_url = input.back_original_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.thumbnails) !== "undefined") {
            this.thumbnails = input.thumbnails;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.available_quantity) !== "undefined") {
            this.available_quantity = input.available_quantity;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.allocated_quantity) !== "undefined") {
            this.allocated_quantity = input.allocated_quantity;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.onhand_quantity) !== "undefined") {
            this.onhand_quantity = input.onhand_quantity;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.pending_quantity) !== "undefined") {
            this.pending_quantity = input.pending_quantity;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.projected_quantity) !== "undefined") {
            this.projected_quantity = input.projected_quantity;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.buckslip_orders) !== "undefined") {
            this.buckslip_orders = input.buckslip_orders;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.stock) !== "undefined") {
            this.stock = input.stock;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.weight) !== "undefined") {
            this.weight = input.weight;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.finish) !== "undefined") {
            this.finish = input.finish;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.status) !== "undefined") {
            this.status = input.status;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.size) !== "undefined") {
            this.size = input.size;
        }
    }
    Object.defineProperty(Buckslip.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (newValue) {
            if (newValue && !/^bck_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Buckslip.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return Buckslip;
}());
exports.Buckslip = Buckslip;
(function (BuckslipStockEnum) {
    BuckslipStockEnum["Text"] = "text";
    BuckslipStockEnum["Cover"] = "cover";
})(exports.BuckslipStockEnum || (exports.BuckslipStockEnum = {}));
(function (BuckslipWeightEnum) {
    BuckslipWeightEnum["_80"] = "80#";
})(exports.BuckslipWeightEnum || (exports.BuckslipWeightEnum = {}));
(function (BuckslipFinishEnum) {
    BuckslipFinishEnum["Gloss"] = "gloss";
    BuckslipFinishEnum["Matte"] = "matte";
})(exports.BuckslipFinishEnum || (exports.BuckslipFinishEnum = {}));
(function (BuckslipStatusEnum) {
    BuckslipStatusEnum["Processed"] = "processed";
    BuckslipStatusEnum["Rendered"] = "rendered";
})(exports.BuckslipStatusEnum || (exports.BuckslipStatusEnum = {}));
(function (BuckslipObjectEnum) {
    BuckslipObjectEnum["Buckslip"] = "buckslip";
})(exports.BuckslipObjectEnum || (exports.BuckslipObjectEnum = {}));
(function (BuckslipSizeEnum) {
    BuckslipSizeEnum["_875x375"] = "8.75x3.75";
})(exports.BuckslipSizeEnum || (exports.BuckslipSizeEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(buckslip));

var buckslipDeletion = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(buckslipDeletion, "__esModule", { value: true });
buckslipDeletion.BuckslipDeletion = void 0;
/**
 * Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob\'s end.
 * @export
 * @class BuckslipDeletion
 */
var BuckslipDeletion = /** @class */ (function () {
    function BuckslipDeletion(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
    }
    Object.defineProperty(BuckslipDeletion.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^bck_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    BuckslipDeletion.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BuckslipDeletion;
}());
buckslipDeletion.BuckslipDeletion = BuckslipDeletion;

var buckslipEditable = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BuckslipEditableSizeEnum = exports.BuckslipEditable = void 0;
/**
 *
 * @export
 * @class BuckslipEditable
 */
var BuckslipEditable = /** @class */ (function () {
    function BuckslipEditable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.front) !== "undefined") {
            this.front = input.front;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.back) !== "undefined") {
            this.back = input.back;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.size) !== "undefined") {
            this.size = input.size;
        }
    }
    BuckslipEditable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BuckslipEditable;
}());
exports.BuckslipEditable = BuckslipEditable;
(function (BuckslipEditableSizeEnum) {
    BuckslipEditableSizeEnum["_875x375"] = "8.75x3.75";
})(exports.BuckslipEditableSizeEnum || (exports.BuckslipEditableSizeEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(buckslipEditable));

var buckslipOrder = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BuckslipOrderStatusEnum = exports.BuckslipOrder = void 0;
/**
 *
 * @export
 * @class BuckslipOrder
 */
var BuckslipOrder = /** @class */ (function () {
    function BuckslipOrder(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.buckslip_id) !== "undefined") {
            this.buckslip_id = input.buckslip_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.status) !== "undefined") {
            this.status = input.status;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.quantity_ordered) !== "undefined") {
            this.quantity_ordered = input.quantity_ordered;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.unit_price) !== "undefined") {
            this.unit_price = input.unit_price;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.inventory) !== "undefined") {
            this.inventory = input.inventory;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.cancelled_reason) !== "undefined") {
            this.cancelled_reason = input.cancelled_reason;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.availability_date) !== "undefined") {
            this.availability_date = input.availability_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.expected_availability_date) !== "undefined") {
            this.expected_availability_date = input.expected_availability_date;
        }
    }
    Object.defineProperty(BuckslipOrder.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^bo_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BuckslipOrder.prototype, "buckslip_id", {
        get: function () {
            return (this._buckslip_id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^bck_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid buckslip_id provided");
            }
            this._buckslip_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    BuckslipOrder.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BuckslipOrder;
}());
exports.BuckslipOrder = BuckslipOrder;
(function (BuckslipOrderStatusEnum) {
    BuckslipOrderStatusEnum["Pending"] = "pending";
    BuckslipOrderStatusEnum["Printing"] = "printing";
    BuckslipOrderStatusEnum["Available"] = "available";
    BuckslipOrderStatusEnum["Cancelled"] = "cancelled";
    BuckslipOrderStatusEnum["Depleted"] = "depleted";
})(exports.BuckslipOrderStatusEnum || (exports.BuckslipOrderStatusEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(buckslipOrder));

var buckslipOrderEditable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(buckslipOrderEditable, "__esModule", { value: true });
buckslipOrderEditable.BuckslipOrderEditable = void 0;
/**
 *
 * @export
 * @class BuckslipOrderEditable
 */
var BuckslipOrderEditable = /** @class */ (function () {
    function BuckslipOrderEditable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.quantity) !== "undefined") {
            this.quantity = input.quantity;
        }
    }
    BuckslipOrderEditable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BuckslipOrderEditable;
}());
buckslipOrderEditable.BuckslipOrderEditable = BuckslipOrderEditable;

var buckslipOrdersList = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(buckslipOrdersList, "__esModule", { value: true });
buckslipOrdersList.BuckslipOrdersList = void 0;
/**
 *
 * @export
 * @class BuckslipOrdersList
 */
var BuckslipOrdersList = /** @class */ (function () {
    function BuckslipOrdersList(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.next_url) !== "undefined") {
            this.next_url = input.next_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.previous_url) !== "undefined") {
            this.previous_url = input.previous_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.count) !== "undefined") {
            this.count = input.count;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.total_count) !== "undefined") {
            this.total_count = input.total_count;
        }
    }
    BuckslipOrdersList.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BuckslipOrdersList;
}());
buckslipOrdersList.BuckslipOrdersList = BuckslipOrdersList;

var buckslipUpdatable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(buckslipUpdatable, "__esModule", { value: true });
buckslipUpdatable.BuckslipUpdatable = void 0;
/**
 *
 * @export
 * @class BuckslipUpdatable
 */
var BuckslipUpdatable = /** @class */ (function () {
    function BuckslipUpdatable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.auto_reorder) !== "undefined") {
            this.auto_reorder = input.auto_reorder;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.reorder_quantity) !== "undefined") {
            this.reorder_quantity = input.reorder_quantity;
        }
    }
    BuckslipUpdatable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BuckslipUpdatable;
}());
buckslipUpdatable.BuckslipUpdatable = BuckslipUpdatable;

var buckslipsList = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(buckslipsList, "__esModule", { value: true });
buckslipsList.BuckslipsList = void 0;
/**
 *
 * @export
 * @class BuckslipsList
 */
var BuckslipsList = /** @class */ (function () {
    function BuckslipsList(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.data) !== "undefined") {
            this.data = input.data;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.next_url) !== "undefined") {
            this.next_url = input.next_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.previous_url) !== "undefined") {
            this.previous_url = input.previous_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.count) !== "undefined") {
            this.count = input.count;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.total_count) !== "undefined") {
            this.total_count = input.total_count;
        }
    }
    Object.defineProperty(BuckslipsList.prototype, "nextPageToken", {
        get: function () {
            var _a;
            if (!this.next_url) {
                return undefined;
            }
            return (_a = this.next_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("after="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BuckslipsList.prototype, "previousPageToken", {
        get: function () {
            var _a;
            if (!this.previous_url) {
                return undefined;
            }
            return (_a = this.previous_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("before="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    BuckslipsList.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BuckslipsList;
}());
buckslipsList.BuckslipsList = BuckslipsList;

var bulkError = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(bulkError, "__esModule", { value: true });
bulkError.BulkError = void 0;
/**
 * Lob uses RESTful HTTP response codes to indicate success or failure of an API request.
 * @export
 * @class BulkError
 */
var BulkError = /** @class */ (function () {
    function BulkError(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.error) !== "undefined") {
            this.error = input.error;
        }
    }
    BulkError.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BulkError;
}());
bulkError.BulkError = BulkError;

var bulkErrorProperties = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BulkErrorPropertiesStatusCodeEnum = exports.BulkErrorProperties = void 0;
/**
 * Bulk error properties
 * @export
 * @class BulkErrorProperties
 */
var BulkErrorProperties = /** @class */ (function () {
    function BulkErrorProperties(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.message) !== "undefined") {
            this.message = input.message;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.status_code) !== "undefined") {
            this.status_code = input.status_code;
        }
    }
    BulkErrorProperties.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return BulkErrorProperties;
}());
exports.BulkErrorProperties = BulkErrorProperties;
(function (BulkErrorPropertiesStatusCodeEnum) {
    BulkErrorPropertiesStatusCodeEnum[BulkErrorPropertiesStatusCodeEnum["NUMBER_401"] = 401] = "NUMBER_401";
    BulkErrorPropertiesStatusCodeEnum[BulkErrorPropertiesStatusCodeEnum["NUMBER_403"] = 403] = "NUMBER_403";
    BulkErrorPropertiesStatusCodeEnum[BulkErrorPropertiesStatusCodeEnum["NUMBER_404"] = 404] = "NUMBER_404";
    BulkErrorPropertiesStatusCodeEnum[BulkErrorPropertiesStatusCodeEnum["NUMBER_413"] = 413] = "NUMBER_413";
    BulkErrorPropertiesStatusCodeEnum[BulkErrorPropertiesStatusCodeEnum["NUMBER_422"] = 422] = "NUMBER_422";
    BulkErrorPropertiesStatusCodeEnum[BulkErrorPropertiesStatusCodeEnum["NUMBER_429"] = 429] = "NUMBER_429";
    BulkErrorPropertiesStatusCodeEnum[BulkErrorPropertiesStatusCodeEnum["NUMBER_500"] = 500] = "NUMBER_500";
})(exports.BulkErrorPropertiesStatusCodeEnum || (exports.BulkErrorPropertiesStatusCodeEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(bulkErrorProperties));

var campaign = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CampaignObjectEnum = exports.Campaign = void 0;
/**
 *
 * @export
 * @class Campaign
 */
var Campaign = /** @class */ (function () {
    function Campaign(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.billing_group_id) !== "undefined") {
            this.billing_group_id = input.billing_group_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.name) !== "undefined") {
            this.name = input.name;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.schedule_type) !== "undefined") {
            this.schedule_type = input.schedule_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.target_delivery_date) !== "undefined") {
            this.target_delivery_date = input.target_delivery_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.send_date) !== "undefined") {
            this.send_date = input.send_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.cancel_window_campaign_minutes) !== "undefined") {
            this.cancel_window_campaign_minutes =
                input.cancel_window_campaign_minutes;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.use_type) !== "undefined") {
            this.use_type = input.use_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.auto_cancel_if_ncoa) !== "undefined") {
            this.auto_cancel_if_ncoa = input.auto_cancel_if_ncoa;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.account_id) !== "undefined") {
            this.account_id = input.account_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.is_draft) !== "undefined") {
            this.is_draft = input.is_draft;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.creatives) !== "undefined") {
            this.creatives = input.creatives;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(Campaign.prototype, "billing_group_id", {
        get: function () {
            return (this._billing_group_id || null || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^bg_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid billing_group_id provided");
            }
            this._billing_group_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Campaign.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (newValue) {
            if (newValue && !/^cmp_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Campaign.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return Campaign;
}());
exports.Campaign = Campaign;
(function (CampaignObjectEnum) {
    CampaignObjectEnum["Campaign"] = "campaign";
})(exports.CampaignObjectEnum || (exports.CampaignObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(campaign));

var campaignCreative = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CampaignCreativeObjectEnum = exports.CampaignCreativeResourceTypeEnum = exports.CampaignCreative = void 0;
/**
 *
 * @export
 * @class CampaignCreative
 */
var CampaignCreative = /** @class */ (function () {
    function CampaignCreative(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.from) !== "undefined") {
            this.from = input.from;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.resource_type) !== "undefined") {
            this.resource_type = input.resource_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.details) !== "undefined") {
            this.details = input.details;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.template_preview_urls) !== "undefined") {
            this.template_preview_urls = input.template_preview_urls;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.template_previews) !== "undefined") {
            this.template_previews = input.template_previews;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.campaigns) !== "undefined") {
            this.campaigns = input.campaigns;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(CampaignCreative.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^crv_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    CampaignCreative.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CampaignCreative;
}());
exports.CampaignCreative = CampaignCreative;
(function (CampaignCreativeResourceTypeEnum) {
    CampaignCreativeResourceTypeEnum["Letter"] = "letter";
    CampaignCreativeResourceTypeEnum["Postcard"] = "postcard";
})(exports.CampaignCreativeResourceTypeEnum || (exports.CampaignCreativeResourceTypeEnum = {}));
(function (CampaignCreativeObjectEnum) {
    CampaignCreativeObjectEnum["Creative"] = "creative";
})(exports.CampaignCreativeObjectEnum || (exports.CampaignCreativeObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(campaignCreative));

var campaignDeletion = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(campaignDeletion, "__esModule", { value: true });
campaignDeletion.CampaignDeletion = void 0;
/**
 * Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob\'s end.
 * @export
 * @class CampaignDeletion
 */
var CampaignDeletion = /** @class */ (function () {
    function CampaignDeletion(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
    }
    Object.defineProperty(CampaignDeletion.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^cmp_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    CampaignDeletion.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CampaignDeletion;
}());
campaignDeletion.CampaignDeletion = CampaignDeletion;

var campaignUpdatable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(campaignUpdatable, "__esModule", { value: true });
campaignUpdatable.CampaignUpdatable = void 0;
/**
 *
 * @export
 * @class CampaignUpdatable
 */
var CampaignUpdatable = /** @class */ (function () {
    function CampaignUpdatable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.name) !== "undefined") {
            this.name = input.name;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.schedule_type) !== "undefined") {
            this.schedule_type = input.schedule_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.target_delivery_date) !== "undefined") {
            this.target_delivery_date = input.target_delivery_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.send_date) !== "undefined") {
            this.send_date = input.send_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.cancel_window_campaign_minutes) !== "undefined") {
            this.cancel_window_campaign_minutes =
                input.cancel_window_campaign_minutes;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.is_draft) !== "undefined") {
            this.is_draft = input.is_draft;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.use_type) !== "undefined") {
            this.use_type = input.use_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.auto_cancel_if_ncoa) !== "undefined") {
            this.auto_cancel_if_ncoa = input.auto_cancel_if_ncoa;
        }
    }
    CampaignUpdatable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CampaignUpdatable;
}());
campaignUpdatable.CampaignUpdatable = CampaignUpdatable;

var campaignWritable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(campaignWritable, "__esModule", { value: true });
campaignWritable.CampaignWritable = void 0;
/**
 *
 * @export
 * @class CampaignWritable
 */
var CampaignWritable = /** @class */ (function () {
    function CampaignWritable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.billing_group_id) !== "undefined") {
            this.billing_group_id = input.billing_group_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.name) !== "undefined") {
            this.name = input.name;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.schedule_type) !== "undefined") {
            this.schedule_type = input.schedule_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.target_delivery_date) !== "undefined") {
            this.target_delivery_date = input.target_delivery_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.send_date) !== "undefined") {
            this.send_date = input.send_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.cancel_window_campaign_minutes) !== "undefined") {
            this.cancel_window_campaign_minutes =
                input.cancel_window_campaign_minutes;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.use_type) !== "undefined") {
            this.use_type = input.use_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.auto_cancel_if_ncoa) !== "undefined") {
            this.auto_cancel_if_ncoa = input.auto_cancel_if_ncoa;
        }
    }
    Object.defineProperty(CampaignWritable.prototype, "billing_group_id", {
        get: function () {
            return (this._billing_group_id || null || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^bg_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid billing_group_id provided");
            }
            this._billing_group_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    CampaignWritable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CampaignWritable;
}());
campaignWritable.CampaignWritable = CampaignWritable;

var campaignsList = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(campaignsList, "__esModule", { value: true });
campaignsList.CampaignsList = void 0;
/**
 *
 * @export
 * @class CampaignsList
 */
var CampaignsList = /** @class */ (function () {
    function CampaignsList(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.data) !== "undefined") {
            this.data = input.data;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.next_url) !== "undefined") {
            this.next_url = input.next_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.previous_url) !== "undefined") {
            this.previous_url = input.previous_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.count) !== "undefined") {
            this.count = input.count;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.total_count) !== "undefined") {
            this.total_count = input.total_count;
        }
    }
    Object.defineProperty(CampaignsList.prototype, "nextPageToken", {
        get: function () {
            var _a;
            if (!this.next_url) {
                return undefined;
            }
            return (_a = this.next_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("after="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CampaignsList.prototype, "previousPageToken", {
        get: function () {
            var _a;
            if (!this.previous_url) {
                return undefined;
            }
            return (_a = this.previous_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("before="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    CampaignsList.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CampaignsList;
}());
campaignsList.CampaignsList = CampaignsList;

var card = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CardSizeEnum = exports.CardObjectEnum = exports.CardOrientationEnum = exports.CardStatusEnum = exports.Card = void 0;
/**
 *
 * @export
 * @class Card
 */
var Card = /** @class */ (function () {
    function Card(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.url) !== "undefined") {
            this.url = input.url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.auto_reorder) !== "undefined") {
            this.auto_reorder = input.auto_reorder;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.reorder_quantity) !== "undefined") {
            this.reorder_quantity = input.reorder_quantity;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.raw_url) !== "undefined") {
            this.raw_url = input.raw_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.front_original_url) !== "undefined") {
            this.front_original_url = input.front_original_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.back_original_url) !== "undefined") {
            this.back_original_url = input.back_original_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.thumbnails) !== "undefined") {
            this.thumbnails = input.thumbnails;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.available_quantity) !== "undefined") {
            this.available_quantity = input.available_quantity;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.pending_quantity) !== "undefined") {
            this.pending_quantity = input.pending_quantity;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.status) !== "undefined") {
            this.status = input.status;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.orientation) !== "undefined") {
            this.orientation = input.orientation;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.threshold_amount) !== "undefined") {
            this.threshold_amount = input.threshold_amount;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.size) !== "undefined") {
            this.size = input.size;
        }
    }
    Object.defineProperty(Card.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (newValue) {
            if (newValue && !/^card_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Card.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return Card;
}());
exports.Card = Card;
(function (CardStatusEnum) {
    CardStatusEnum["Processed"] = "processed";
    CardStatusEnum["Rendered"] = "rendered";
})(exports.CardStatusEnum || (exports.CardStatusEnum = {}));
(function (CardOrientationEnum) {
    CardOrientationEnum["Horizontal"] = "horizontal";
    CardOrientationEnum["Vertical"] = "vertical";
})(exports.CardOrientationEnum || (exports.CardOrientationEnum = {}));
(function (CardObjectEnum) {
    CardObjectEnum["Card"] = "card";
})(exports.CardObjectEnum || (exports.CardObjectEnum = {}));
(function (CardSizeEnum) {
    CardSizeEnum["_3375x2125"] = "3.375x2.125";
    CardSizeEnum["_2125x3375"] = "2.125x3.375";
})(exports.CardSizeEnum || (exports.CardSizeEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(card));

var cardDeletion = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CardDeletionObjectEnum = exports.CardDeletion = void 0;
/**
 * Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob\'s end.
 * @export
 * @class CardDeletion
 */
var CardDeletion = /** @class */ (function () {
    function CardDeletion(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(CardDeletion.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^card_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    CardDeletion.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CardDeletion;
}());
exports.CardDeletion = CardDeletion;
(function (CardDeletionObjectEnum) {
    CardDeletionObjectEnum["CardDeleted"] = "card_deleted";
})(exports.CardDeletionObjectEnum || (exports.CardDeletionObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(cardDeletion));

var cardEditable = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CardEditableSizeEnum = exports.CardEditable = void 0;
/**
 *
 * @export
 * @class CardEditable
 */
var CardEditable = /** @class */ (function () {
    function CardEditable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.front) !== "undefined") {
            this.front = input.front;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.back) !== "undefined") {
            this.back = input.back;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.size) !== "undefined") {
            this.size = input.size;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
    }
    CardEditable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CardEditable;
}());
exports.CardEditable = CardEditable;
(function (CardEditableSizeEnum) {
    CardEditableSizeEnum["_3375x2125"] = "3.375x2.125";
    CardEditableSizeEnum["_2125x3375"] = "2.125x3.375";
})(exports.CardEditableSizeEnum || (exports.CardEditableSizeEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(cardEditable));

var cardList = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(cardList, "__esModule", { value: true });
cardList.CardList = void 0;
/**
 *
 * @export
 * @class CardList
 */
var CardList = /** @class */ (function () {
    function CardList(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.data) !== "undefined") {
            this.data = input.data;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.next_url) !== "undefined") {
            this.next_url = input.next_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.previous_url) !== "undefined") {
            this.previous_url = input.previous_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.count) !== "undefined") {
            this.count = input.count;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.total_count) !== "undefined") {
            this.total_count = input.total_count;
        }
    }
    Object.defineProperty(CardList.prototype, "nextPageToken", {
        get: function () {
            var _a;
            if (!this.next_url) {
                return undefined;
            }
            return (_a = this.next_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("after="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CardList.prototype, "previousPageToken", {
        get: function () {
            var _a;
            if (!this.previous_url) {
                return undefined;
            }
            return (_a = this.previous_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("before="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    CardList.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CardList;
}());
cardList.CardList = CardList;

var cardOrder = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CardOrderStatusEnum = exports.CardOrder = void 0;
/**
 *
 * @export
 * @class CardOrder
 */
var CardOrder = /** @class */ (function () {
    function CardOrder(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.card_id) !== "undefined") {
            this.card_id = input.card_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.status) !== "undefined") {
            this.status = input.status;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.inventory) !== "undefined") {
            this.inventory = input.inventory;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.quantity_ordered) !== "undefined") {
            this.quantity_ordered = input.quantity_ordered;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.unit_price) !== "undefined") {
            this.unit_price = input.unit_price;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.cancelled_reason) !== "undefined") {
            this.cancelled_reason = input.cancelled_reason;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.availability_date) !== "undefined") {
            this.availability_date = input.availability_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.expected_availability_date) !== "undefined") {
            this.expected_availability_date = input.expected_availability_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(CardOrder.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^co_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CardOrder.prototype, "card_id", {
        get: function () {
            return (this._card_id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^card_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid card_id provided");
            }
            this._card_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    CardOrder.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CardOrder;
}());
exports.CardOrder = CardOrder;
(function (CardOrderStatusEnum) {
    CardOrderStatusEnum["Pending"] = "pending";
    CardOrderStatusEnum["Printing"] = "printing";
    CardOrderStatusEnum["Available"] = "available";
    CardOrderStatusEnum["Cancelled"] = "cancelled";
    CardOrderStatusEnum["Depleted"] = "depleted";
})(exports.CardOrderStatusEnum || (exports.CardOrderStatusEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(cardOrder));

var cardOrderEditable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(cardOrderEditable, "__esModule", { value: true });
cardOrderEditable.CardOrderEditable = void 0;
/**
 *
 * @export
 * @class CardOrderEditable
 */
var CardOrderEditable = /** @class */ (function () {
    function CardOrderEditable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.quantity) !== "undefined") {
            this.quantity = input.quantity;
        }
    }
    CardOrderEditable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CardOrderEditable;
}());
cardOrderEditable.CardOrderEditable = CardOrderEditable;

var cardOrderList = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(cardOrderList, "__esModule", { value: true });
cardOrderList.CardOrderList = void 0;
/**
 *
 * @export
 * @class CardOrderList
 */
var CardOrderList = /** @class */ (function () {
    function CardOrderList(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.data) !== "undefined") {
            this.data = input.data;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.next_url) !== "undefined") {
            this.next_url = input.next_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.previous_url) !== "undefined") {
            this.previous_url = input.previous_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.count) !== "undefined") {
            this.count = input.count;
        }
    }
    CardOrderList.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CardOrderList;
}());
cardOrderList.CardOrderList = CardOrderList;

var cardUpdatable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(cardUpdatable, "__esModule", { value: true });
cardUpdatable.CardUpdatable = void 0;
/**
 *
 * @export
 * @class CardUpdatable
 */
var CardUpdatable = /** @class */ (function () {
    function CardUpdatable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.auto_reorder) !== "undefined") {
            this.auto_reorder = input.auto_reorder;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.reorder_quantity) !== "undefined") {
            this.reorder_quantity = input.reorder_quantity;
        }
    }
    CardUpdatable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CardUpdatable;
}());
cardUpdatable.CardUpdatable = CardUpdatable;

var check = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckObjectEnum = exports.CheckCarrierEnum = exports.CheckMailTypeEnum = exports.Check = void 0;
/**
 *
 * @export
 * @class Check
 */
var Check = /** @class */ (function () {
    function Check(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.to) !== "undefined") {
            this.to = input.to;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.from) !== "undefined") {
            this.from = input.from;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.merge_variables) !== "undefined") {
            this.merge_variables = input.merge_variables;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.send_date) !== "undefined") {
            this.send_date = input.send_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.mail_type) !== "undefined") {
            this.mail_type = input.mail_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.memo) !== "undefined") {
            this.memo = input.memo;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.check_number) !== "undefined") {
            this.check_number = input.check_number;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.message) !== "undefined") {
            this.message = input.message;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.amount) !== "undefined") {
            this.amount = input.amount;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.bank_account) !== "undefined") {
            this.bank_account = input.bank_account;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.check_bottom_template_id) !== "undefined") {
            this.check_bottom_template_id = input.check_bottom_template_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.attachment_template_id) !== "undefined") {
            this.attachment_template_id = input.attachment_template_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.check_bottom_template_version_id) !== "undefined") {
            this.check_bottom_template_version_id =
                input.check_bottom_template_version_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.attachment_template_version_id) !== "undefined") {
            this.attachment_template_version_id =
                input.attachment_template_version_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.url) !== "undefined") {
            this.url = input.url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.carrier) !== "undefined") {
            this.carrier = input.carrier;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.thumbnails) !== "undefined") {
            this.thumbnails = input.thumbnails;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.expected_delivery_date) !== "undefined") {
            this.expected_delivery_date = input.expected_delivery_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.tracking_events) !== "undefined") {
            this.tracking_events = input.tracking_events;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.use_type) !== "undefined") {
            this.use_type = input.use_type;
        }
    }
    Object.defineProperty(Check.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (newValue) {
            if (newValue && !/^chk_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Check.prototype, "check_bottom_template_id", {
        get: function () {
            return (this._check_bottom_template_id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^tmpl_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid check_bottom_template_id provided");
            }
            this._check_bottom_template_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Check.prototype, "attachment_template_id", {
        get: function () {
            return (this._attachment_template_id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^tmpl_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid attachment_template_id provided");
            }
            this._attachment_template_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Check.prototype, "check_bottom_template_version_id", {
        get: function () {
            return (this._check_bottom_template_version_id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^vrsn_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid check_bottom_template_version_id provided");
            }
            this._check_bottom_template_version_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Check.prototype, "attachment_template_version_id", {
        get: function () {
            return (this._attachment_template_version_id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^vrsn_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid attachment_template_version_id provided");
            }
            this._attachment_template_version_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Check.prototype, "url", {
        get: function () {
            return this._url;
        },
        set: function (newValue) {
            if (newValue &&
                !/^https:\/\/(lob-assets|lob-assets-staging)\.com\/(letters|postcards|bank-accounts|checks|self-mailers|cards)\/[a-z]{3,4}_[a-z0-9]{15,16}(\.pdf|_thumb_[a-z]+_[0-9]+\.png)\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$/.test(newValue)) {
                throw new Error("Invalid url provided");
            }
            this._url = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Check.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return Check;
}());
exports.Check = Check;
(function (CheckMailTypeEnum) {
    CheckMailTypeEnum["UspsFirstClass"] = "usps_first_class";
})(exports.CheckMailTypeEnum || (exports.CheckMailTypeEnum = {}));
(function (CheckCarrierEnum) {
    CheckCarrierEnum["Usps"] = "USPS";
})(exports.CheckCarrierEnum || (exports.CheckCarrierEnum = {}));
(function (CheckObjectEnum) {
    CheckObjectEnum["Check"] = "check";
})(exports.CheckObjectEnum || (exports.CheckObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(check));

var checkDeletion = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckDeletionObjectEnum = exports.CheckDeletion = void 0;
/**
 * Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob\'s end.
 * @export
 * @class CheckDeletion
 */
var CheckDeletion = /** @class */ (function () {
    function CheckDeletion(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(CheckDeletion.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^chk_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    CheckDeletion.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CheckDeletion;
}());
exports.CheckDeletion = CheckDeletion;
(function (CheckDeletionObjectEnum) {
    CheckDeletionObjectEnum["CheckDeleted"] = "check_deleted";
})(exports.CheckDeletionObjectEnum || (exports.CheckDeletionObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(checkDeletion));

var checkEditable = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckEditableMailTypeEnum = exports.CheckEditable = void 0;
/**
 *
 * @export
 * @class CheckEditable
 */
var CheckEditable = /** @class */ (function () {
    function CheckEditable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.from) !== "undefined") {
            this.from = input.from;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.to) !== "undefined") {
            this.to = input.to;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.bank_account) !== "undefined") {
            this.bank_account = input.bank_account;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.amount) !== "undefined") {
            this.amount = input.amount;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.logo) !== "undefined") {
            this.logo = input.logo;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.check_bottom) !== "undefined") {
            this.check_bottom = input.check_bottom;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.attachment) !== "undefined") {
            this.attachment = input.attachment;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.merge_variables) !== "undefined") {
            this.merge_variables = input.merge_variables;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.send_date) !== "undefined") {
            this.send_date = input.send_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.mail_type) !== "undefined") {
            this.mail_type = input.mail_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.memo) !== "undefined") {
            this.memo = input.memo;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.check_number) !== "undefined") {
            this.check_number = input.check_number;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.message) !== "undefined") {
            this.message = input.message;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.billing_group_id) !== "undefined") {
            this.billing_group_id = input.billing_group_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.use_type) !== "undefined") {
            this.use_type = input.use_type;
        }
    }
    CheckEditable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CheckEditable;
}());
exports.CheckEditable = CheckEditable;
(function (CheckEditableMailTypeEnum) {
    CheckEditableMailTypeEnum["UspsFirstClass"] = "usps_first_class";
})(exports.CheckEditableMailTypeEnum || (exports.CheckEditableMailTypeEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(checkEditable));

var checkList = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(checkList, "__esModule", { value: true });
checkList.CheckList = void 0;
/**
 *
 * @export
 * @class CheckList
 */
var CheckList = /** @class */ (function () {
    function CheckList(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.data) !== "undefined") {
            this.data = input.data;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.next_url) !== "undefined") {
            this.next_url = input.next_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.previous_url) !== "undefined") {
            this.previous_url = input.previous_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.count) !== "undefined") {
            this.count = input.count;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.total_count) !== "undefined") {
            this.total_count = input.total_count;
        }
    }
    Object.defineProperty(CheckList.prototype, "nextPageToken", {
        get: function () {
            var _a;
            if (!this.next_url) {
                return undefined;
            }
            return (_a = this.next_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("after="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckList.prototype, "previousPageToken", {
        get: function () {
            var _a;
            if (!this.previous_url) {
                return undefined;
            }
            return (_a = this.previous_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("before="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    CheckList.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CheckList;
}());
checkList.CheckList = CheckList;

var chkUseType = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChkUseType = void 0;
(function (ChkUseType) {
    ChkUseType["Marketing"] = "marketing";
    ChkUseType["Operational"] = "operational";
    ChkUseType["Null"] = "null";
})(exports.ChkUseType || (exports.ChkUseType = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(chkUseType));

var cmpScheduleType = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CmpScheduleType = void 0;
(function (CmpScheduleType) {
    CmpScheduleType["Immediate"] = "immediate";
})(exports.CmpScheduleType || (exports.CmpScheduleType = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(cmpScheduleType));

var cmpUseType = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CmpUseType = void 0;
(function (CmpUseType) {
    CmpUseType["Marketing"] = "marketing";
    CmpUseType["Operational"] = "operational";
    CmpUseType["Null"] = "null";
})(exports.CmpUseType || (exports.CmpUseType = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(cmpUseType));

var countryExtended = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CountryExtended = void 0;
(function (CountryExtended) {
    CountryExtended["Empty"] = "";
    CountryExtended["Ad"] = "AD";
    CountryExtended["Ae"] = "AE";
    CountryExtended["Af"] = "AF";
    CountryExtended["Ag"] = "AG";
    CountryExtended["Ai"] = "AI";
    CountryExtended["Al"] = "AL";
    CountryExtended["An"] = "AN";
    CountryExtended["Ao"] = "AO";
    CountryExtended["Aq"] = "AQ";
    CountryExtended["Ar"] = "AR";
    CountryExtended["At"] = "AT";
    CountryExtended["Au"] = "AU";
    CountryExtended["Aw"] = "AW";
    CountryExtended["Az"] = "AZ";
    CountryExtended["Ba"] = "BA";
    CountryExtended["Bb"] = "BB";
    CountryExtended["Bd"] = "BD";
    CountryExtended["Be"] = "BE";
    CountryExtended["Bf"] = "BF";
    CountryExtended["Bg"] = "BG";
    CountryExtended["Bh"] = "BH";
    CountryExtended["Bi"] = "BI";
    CountryExtended["Bj"] = "BJ";
    CountryExtended["Bm"] = "BM";
    CountryExtended["Bn"] = "BN";
    CountryExtended["Bo"] = "BO";
    CountryExtended["Bq"] = "BQ";
    CountryExtended["Br"] = "BR";
    CountryExtended["Bs"] = "BS";
    CountryExtended["Bt"] = "BT";
    CountryExtended["Bw"] = "BW";
    CountryExtended["By"] = "BY";
    CountryExtended["Bz"] = "BZ";
    CountryExtended["Ca"] = "CA";
    CountryExtended["Cd"] = "CD";
    CountryExtended["Cg"] = "CG";
    CountryExtended["Ch"] = "CH";
    CountryExtended["Ci"] = "CI";
    CountryExtended["Ck"] = "CK";
    CountryExtended["Cl"] = "CL";
    CountryExtended["Cm"] = "CM";
    CountryExtended["Cn"] = "CN";
    CountryExtended["Co"] = "CO";
    CountryExtended["Cr"] = "CR";
    CountryExtended["Cs"] = "CS";
    CountryExtended["Cu"] = "CU";
    CountryExtended["Cv"] = "CV";
    CountryExtended["Cw"] = "CW";
    CountryExtended["Cy"] = "CY";
    CountryExtended["Cz"] = "CZ";
    CountryExtended["De"] = "DE";
    CountryExtended["Dj"] = "DJ";
    CountryExtended["Dk"] = "DK";
    CountryExtended["Dm"] = "DM";
    CountryExtended["Do"] = "DO";
    CountryExtended["Dz"] = "DZ";
    CountryExtended["Ec"] = "EC";
    CountryExtended["Ee"] = "EE";
    CountryExtended["Eg"] = "EG";
    CountryExtended["Eh"] = "EH";
    CountryExtended["Er"] = "ER";
    CountryExtended["Es"] = "ES";
    CountryExtended["Et"] = "ET";
    CountryExtended["Fi"] = "FI";
    CountryExtended["Fj"] = "FJ";
    CountryExtended["Fk"] = "FK";
    CountryExtended["Fo"] = "FO";
    CountryExtended["Fr"] = "FR";
    CountryExtended["Ga"] = "GA";
    CountryExtended["Gb"] = "GB";
    CountryExtended["Gd"] = "GD";
    CountryExtended["Ge"] = "GE";
    CountryExtended["Gh"] = "GH";
    CountryExtended["Gi"] = "GI";
    CountryExtended["Gl"] = "GL";
    CountryExtended["Gm"] = "GM";
    CountryExtended["Gn"] = "GN";
    CountryExtended["Gq"] = "GQ";
    CountryExtended["Gr"] = "GR";
    CountryExtended["Gs"] = "GS";
    CountryExtended["Gt"] = "GT";
    CountryExtended["Gw"] = "GW";
    CountryExtended["Gy"] = "GY";
    CountryExtended["Hk"] = "HK";
    CountryExtended["Hn"] = "HN";
    CountryExtended["Hr"] = "HR";
    CountryExtended["Ht"] = "HT";
    CountryExtended["Hu"] = "HU";
    CountryExtended["Id"] = "ID";
    CountryExtended["Ie"] = "IE";
    CountryExtended["Il"] = "IL";
    CountryExtended["In"] = "IN";
    CountryExtended["Io"] = "IO";
    CountryExtended["Iq"] = "IQ";
    CountryExtended["Ir"] = "IR";
    CountryExtended["Is"] = "IS";
    CountryExtended["It"] = "IT";
    CountryExtended["Jm"] = "JM";
    CountryExtended["Jo"] = "JO";
    CountryExtended["Jp"] = "JP";
    CountryExtended["Ke"] = "KE";
    CountryExtended["Kg"] = "KG";
    CountryExtended["Kh"] = "KH";
    CountryExtended["Ki"] = "KI";
    CountryExtended["Km"] = "KM";
    CountryExtended["Kn"] = "KN";
    CountryExtended["Kp"] = "KP";
    CountryExtended["Kr"] = "KR";
    CountryExtended["Kw"] = "KW";
    CountryExtended["Ky"] = "KY";
    CountryExtended["Kz"] = "KZ";
    CountryExtended["La"] = "LA";
    CountryExtended["Lb"] = "LB";
    CountryExtended["Lc"] = "LC";
    CountryExtended["Li"] = "LI";
    CountryExtended["Lk"] = "LK";
    CountryExtended["Lr"] = "LR";
    CountryExtended["Ls"] = "LS";
    CountryExtended["Lt"] = "LT";
    CountryExtended["Lu"] = "LU";
    CountryExtended["Lv"] = "LV";
    CountryExtended["Ly"] = "LY";
    CountryExtended["Ma"] = "MA";
    CountryExtended["Mc"] = "MC";
    CountryExtended["Md"] = "MD";
    CountryExtended["Me"] = "ME";
    CountryExtended["Mg"] = "MG";
    CountryExtended["Mk"] = "MK";
    CountryExtended["Ml"] = "ML";
    CountryExtended["Mm"] = "MM";
    CountryExtended["Mn"] = "MN";
    CountryExtended["Mo"] = "MO";
    CountryExtended["Mr"] = "MR";
    CountryExtended["Ms"] = "MS";
    CountryExtended["Mt"] = "MT";
    CountryExtended["Mu"] = "MU";
    CountryExtended["Mv"] = "MV";
    CountryExtended["Mw"] = "MW";
    CountryExtended["Mx"] = "MX";
    CountryExtended["My"] = "MY";
    CountryExtended["Mz"] = "MZ";
    CountryExtended["Na"] = "NA";
    CountryExtended["Ne"] = "NE";
    CountryExtended["Nf"] = "NF";
    CountryExtended["Ng"] = "NG";
    CountryExtended["Ni"] = "NI";
    CountryExtended["Nl"] = "NL";
    CountryExtended["No"] = "NO";
    CountryExtended["Np"] = "NP";
    CountryExtended["Nr"] = "NR";
    CountryExtended["Nu"] = "NU";
    CountryExtended["Nz"] = "NZ";
    CountryExtended["Om"] = "OM";
    CountryExtended["Pa"] = "PA";
    CountryExtended["Pe"] = "PE";
    CountryExtended["Pg"] = "PG";
    CountryExtended["Ph"] = "PH";
    CountryExtended["Pk"] = "PK";
    CountryExtended["Pl"] = "PL";
    CountryExtended["Pn"] = "PN";
    CountryExtended["Pt"] = "PT";
    CountryExtended["Py"] = "PY";
    CountryExtended["Qa"] = "QA";
    CountryExtended["Ro"] = "RO";
    CountryExtended["Rs"] = "RS";
    CountryExtended["Ru"] = "RU";
    CountryExtended["Rw"] = "RW";
    CountryExtended["Sa"] = "SA";
    CountryExtended["Sb"] = "SB";
    CountryExtended["Sc"] = "SC";
    CountryExtended["Sd"] = "SD";
    CountryExtended["Se"] = "SE";
    CountryExtended["Sg"] = "SG";
    CountryExtended["Sh"] = "SH";
    CountryExtended["Si"] = "SI";
    CountryExtended["Sk"] = "SK";
    CountryExtended["Sl"] = "SL";
    CountryExtended["Sm"] = "SM";
    CountryExtended["Sn"] = "SN";
    CountryExtended["So"] = "SO";
    CountryExtended["Sr"] = "SR";
    CountryExtended["Ss"] = "SS";
    CountryExtended["St"] = "ST";
    CountryExtended["Sv"] = "SV";
    CountryExtended["Sx"] = "SX";
    CountryExtended["Sy"] = "SY";
    CountryExtended["Sz"] = "SZ";
    CountryExtended["Tc"] = "TC";
    CountryExtended["Td"] = "TD";
    CountryExtended["Tg"] = "TG";
    CountryExtended["Th"] = "TH";
    CountryExtended["Tj"] = "TJ";
    CountryExtended["Tk"] = "TK";
    CountryExtended["Tl"] = "TL";
    CountryExtended["Tm"] = "TM";
    CountryExtended["Tn"] = "TN";
    CountryExtended["To"] = "TO";
    CountryExtended["Tr"] = "TR";
    CountryExtended["Tt"] = "TT";
    CountryExtended["Tv"] = "TV";
    CountryExtended["Tw"] = "TW";
    CountryExtended["Tz"] = "TZ";
    CountryExtended["Ua"] = "UA";
    CountryExtended["Ug"] = "UG";
    CountryExtended["Us"] = "US";
    CountryExtended["Uy"] = "UY";
    CountryExtended["Uz"] = "UZ";
    CountryExtended["Va"] = "VA";
    CountryExtended["Vc"] = "VC";
    CountryExtended["Ve"] = "VE";
    CountryExtended["Vg"] = "VG";
    CountryExtended["Vn"] = "VN";
    CountryExtended["Vu"] = "VU";
    CountryExtended["Ws"] = "WS";
    CountryExtended["Ye"] = "YE";
    CountryExtended["Za"] = "ZA";
    CountryExtended["Zm"] = "ZM";
    CountryExtended["Zw"] = "ZW";
})(exports.CountryExtended || (exports.CountryExtended = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(countryExtended));

var countryExtendedExpanded = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CountryExtendedExpanded = void 0;
(function (CountryExtendedExpanded) {
    CountryExtendedExpanded["Empty"] = "";
    CountryExtendedExpanded["Afghanistan"] = "AFGHANISTAN";
    CountryExtendedExpanded["Albania"] = "ALBANIA";
    CountryExtendedExpanded["Algeria"] = "ALGERIA";
    CountryExtendedExpanded["AmericanSamoa"] = "AMERICAN SAMOA";
    CountryExtendedExpanded["Andorra"] = "ANDORRA";
    CountryExtendedExpanded["Angola"] = "ANGOLA";
    CountryExtendedExpanded["Anguilla"] = "ANGUILLA";
    CountryExtendedExpanded["Antarctica"] = "ANTARCTICA";
    CountryExtendedExpanded["AntiguaAndBarbuda"] = "ANTIGUA AND BARBUDA";
    CountryExtendedExpanded["Argentina"] = "ARGENTINA";
    CountryExtendedExpanded["Aruba"] = "ARUBA";
    CountryExtendedExpanded["Australia"] = "AUSTRALIA";
    CountryExtendedExpanded["Austria"] = "AUSTRIA";
    CountryExtendedExpanded["Azerbaijan"] = "AZERBAIJAN";
    CountryExtendedExpanded["Bahrain"] = "BAHRAIN";
    CountryExtendedExpanded["Bangladesh"] = "BANGLADESH";
    CountryExtendedExpanded["Barbados"] = "BARBADOS";
    CountryExtendedExpanded["Belarus"] = "BELARUS";
    CountryExtendedExpanded["Belgium"] = "BELGIUM";
    CountryExtendedExpanded["Belize"] = "BELIZE";
    CountryExtendedExpanded["Benin"] = "BENIN";
    CountryExtendedExpanded["Bermuda"] = "BERMUDA";
    CountryExtendedExpanded["Bhutan"] = "BHUTAN";
    CountryExtendedExpanded["BoliviaPlurinationalStateOf"] = "BOLIVIA (PLURINATIONAL STATE OF)";
    CountryExtendedExpanded["BonaireSaintEustatiusAndSaba"] = "BONAIRE, SAINT EUSTATIUS AND SABA";
    CountryExtendedExpanded["BosniaAndHerzegovina"] = "BOSNIA AND HERZEGOVINA";
    CountryExtendedExpanded["Botswana"] = "BOTSWANA";
    CountryExtendedExpanded["Brazil"] = "BRAZIL";
    CountryExtendedExpanded["BritishIndianOceanTerritory"] = "BRITISH INDIAN OCEAN TERRITORY";
    CountryExtendedExpanded["BritishVirginIslands"] = "BRITISH VIRGIN ISLANDS";
    CountryExtendedExpanded["BruneiDarussalam"] = "BRUNEI DARUSSALAM";
    CountryExtendedExpanded["Bulgaria"] = "BULGARIA";
    CountryExtendedExpanded["BurkinaFaso"] = "BURKINA FASO";
    CountryExtendedExpanded["Burundi"] = "BURUNDI";
    CountryExtendedExpanded["CaboVerde"] = "CABO VERDE";
    CountryExtendedExpanded["Cambodia"] = "CAMBODIA";
    CountryExtendedExpanded["Cameroon"] = "CAMEROON";
    CountryExtendedExpanded["Canada"] = "CANADA";
    CountryExtendedExpanded["CaymanIslands"] = "CAYMAN ISLANDS";
    CountryExtendedExpanded["CentralAfricanRepublic"] = "CENTRAL AFRICAN REPUBLIC";
    CountryExtendedExpanded["Chad"] = "CHAD";
    CountryExtendedExpanded["Chile"] = "CHILE";
    CountryExtendedExpanded["China"] = "CHINA";
    CountryExtendedExpanded["Colombia"] = "COLOMBIA";
    CountryExtendedExpanded["Comoros"] = "COMOROS";
    CountryExtendedExpanded["Congo"] = "CONGO";
    CountryExtendedExpanded["CongoDemocraticRepublicOfThe"] = "CONGO, DEMOCRATIC REPUBLIC OF THE";
    CountryExtendedExpanded["CookIslands"] = "COOK ISLANDS";
    CountryExtendedExpanded["CostaRica"] = "COSTA RICA";
    CountryExtendedExpanded["CteDivoire"] = "C\u00D4TE D`IVOIRE";
    CountryExtendedExpanded["Croatia"] = "CROATIA";
    CountryExtendedExpanded["Cuba"] = "CUBA";
    CountryExtendedExpanded["Curaao"] = "CURA\u00C7AO";
    CountryExtendedExpanded["Cyprus"] = "CYPRUS";
    CountryExtendedExpanded["CzechRepublic"] = "CZECH REPUBLIC";
    CountryExtendedExpanded["Denmark"] = "DENMARK";
    CountryExtendedExpanded["Djibouti"] = "DJIBOUTI";
    CountryExtendedExpanded["Dominica"] = "DOMINICA";
    CountryExtendedExpanded["DominicanRepublic"] = "DOMINICAN REPUBLIC";
    CountryExtendedExpanded["Ecuador"] = "ECUADOR";
    CountryExtendedExpanded["Egypt"] = "EGYPT";
    CountryExtendedExpanded["ElSalvador"] = "EL SALVADOR";
    CountryExtendedExpanded["EquatorialGuinea"] = "EQUATORIAL GUINEA";
    CountryExtendedExpanded["Eritrea"] = "ERITREA";
    CountryExtendedExpanded["Estonia"] = "ESTONIA";
    CountryExtendedExpanded["Eswatini"] = "ESWATINI";
    CountryExtendedExpanded["Ethiopia"] = "ETHIOPIA";
    CountryExtendedExpanded["FalklandIslandsMalvinas"] = "FALKLAND ISLANDS (MALVINAS)";
    CountryExtendedExpanded["FaroeIslands"] = "FAROE ISLANDS";
    CountryExtendedExpanded["Fiji"] = "FIJI";
    CountryExtendedExpanded["Finland"] = "FINLAND";
    CountryExtendedExpanded["France"] = "FRANCE";
    CountryExtendedExpanded["Gabon"] = "GABON";
    CountryExtendedExpanded["Gambia"] = "GAMBIA";
    CountryExtendedExpanded["Georgia"] = "GEORGIA";
    CountryExtendedExpanded["Germany"] = "GERMANY";
    CountryExtendedExpanded["Ghana"] = "GHANA";
    CountryExtendedExpanded["Gibraltar"] = "GIBRALTAR";
    CountryExtendedExpanded["Greece"] = "GREECE";
    CountryExtendedExpanded["Greenland"] = "GREENLAND";
    CountryExtendedExpanded["Grenada"] = "GRENADA";
    CountryExtendedExpanded["Guatemala"] = "GUATEMALA";
    CountryExtendedExpanded["Guinea"] = "GUINEA";
    CountryExtendedExpanded["GuineaBissau"] = "GUINEA-BISSAU";
    CountryExtendedExpanded["Guyana"] = "GUYANA";
    CountryExtendedExpanded["Haiti"] = "HAITI";
    CountryExtendedExpanded["HolySee"] = "HOLY SEE";
    CountryExtendedExpanded["Honduras"] = "HONDURAS";
    CountryExtendedExpanded["HongKong"] = "HONG KONG";
    CountryExtendedExpanded["Hungary"] = "HUNGARY";
    CountryExtendedExpanded["Iceland"] = "ICELAND";
    CountryExtendedExpanded["India"] = "INDIA";
    CountryExtendedExpanded["Indonesia"] = "INDONESIA";
    CountryExtendedExpanded["IranIslamicRepublicOf"] = "IRAN (ISLAMIC REPUBLIC OF)";
    CountryExtendedExpanded["Iraq"] = "IRAQ";
    CountryExtendedExpanded["Ireland"] = "IRELAND";
    CountryExtendedExpanded["Israel"] = "ISRAEL";
    CountryExtendedExpanded["Italy"] = "ITALY";
    CountryExtendedExpanded["Jamaica"] = "JAMAICA";
    CountryExtendedExpanded["Japan"] = "JAPAN";
    CountryExtendedExpanded["Jordan"] = "JORDAN";
    CountryExtendedExpanded["Kazakhstan"] = "KAZAKHSTAN";
    CountryExtendedExpanded["Kenya"] = "KENYA";
    CountryExtendedExpanded["Kiribati"] = "KIRIBATI";
    CountryExtendedExpanded["KoreaDemocraticPeoplesRepublicOf"] = "KOREA (DEMOCRATIC PEOPLE\u2019S REPUBLIC OF)";
    CountryExtendedExpanded["KoreaRepublicOf"] = "KOREA, REPUBLIC OF";
    CountryExtendedExpanded["Kuwait"] = "KUWAIT";
    CountryExtendedExpanded["Kyrgyzstan"] = "KYRGYZSTAN";
    CountryExtendedExpanded["LaoPeoplesDemocraticRepublic"] = "LAO PEOPLE\u2019S DEMOCRATIC REPUBLIC";
    CountryExtendedExpanded["Latvia"] = "LATVIA";
    CountryExtendedExpanded["Lebanon"] = "LEBANON";
    CountryExtendedExpanded["Lesotho"] = "LESOTHO";
    CountryExtendedExpanded["Liberia"] = "LIBERIA";
    CountryExtendedExpanded["Libya"] = "LIBYA";
    CountryExtendedExpanded["Liechtenstein"] = "LIECHTENSTEIN";
    CountryExtendedExpanded["Lithuania"] = "LITHUANIA";
    CountryExtendedExpanded["Luxembourg"] = "LUXEMBOURG";
    CountryExtendedExpanded["Macao"] = "MACAO";
    CountryExtendedExpanded["Macedonia"] = "MACEDONIA";
    CountryExtendedExpanded["Madagascar"] = "MADAGASCAR";
    CountryExtendedExpanded["Malawi"] = "MALAWI";
    CountryExtendedExpanded["Malaysia"] = "MALAYSIA";
    CountryExtendedExpanded["Maldives"] = "MALDIVES";
    CountryExtendedExpanded["Mali"] = "MALI";
    CountryExtendedExpanded["Malta"] = "MALTA";
    CountryExtendedExpanded["Mauritania"] = "MAURITANIA";
    CountryExtendedExpanded["Mauritius"] = "MAURITIUS";
    CountryExtendedExpanded["Mexico"] = "MEXICO";
    CountryExtendedExpanded["MoldovaRepublicOf"] = "MOLDOVA, REPUBLIC OF";
    CountryExtendedExpanded["Monaco"] = "MONACO";
    CountryExtendedExpanded["Mongolia"] = "MONGOLIA";
    CountryExtendedExpanded["Montenegro"] = "MONTENEGRO";
    CountryExtendedExpanded["Montserrat"] = "MONTSERRAT";
    CountryExtendedExpanded["Morocco"] = "MOROCCO";
    CountryExtendedExpanded["Mozambique"] = "MOZAMBIQUE";
    CountryExtendedExpanded["Myanmar"] = "MYANMAR";
    CountryExtendedExpanded["Namibia"] = "NAMIBIA";
    CountryExtendedExpanded["Nauru"] = "NAURU";
    CountryExtendedExpanded["Nepal"] = "NEPAL";
    CountryExtendedExpanded["NetherlandAntilles"] = "NETHERLAND ANTILLES";
    CountryExtendedExpanded["Netherlands"] = "NETHERLANDS";
    CountryExtendedExpanded["NewZealand"] = "NEW ZEALAND";
    CountryExtendedExpanded["Nicaragua"] = "NICARAGUA";
    CountryExtendedExpanded["Niger"] = "NIGER";
    CountryExtendedExpanded["Nigeria"] = "NIGERIA";
    CountryExtendedExpanded["Niue"] = "NIUE";
    CountryExtendedExpanded["NorfolkIsland"] = "NORFOLK ISLAND";
    CountryExtendedExpanded["Norway"] = "NORWAY";
    CountryExtendedExpanded["Oman"] = "OMAN";
    CountryExtendedExpanded["Pakistan"] = "PAKISTAN";
    CountryExtendedExpanded["Panama"] = "PANAMA";
    CountryExtendedExpanded["PapuaNewGuinea"] = "PAPUA NEW GUINEA";
    CountryExtendedExpanded["Paraguay"] = "PARAGUAY";
    CountryExtendedExpanded["Peru"] = "PERU";
    CountryExtendedExpanded["Philippines"] = "PHILIPPINES";
    CountryExtendedExpanded["Pitcairn"] = "PITCAIRN";
    CountryExtendedExpanded["Poland"] = "POLAND";
    CountryExtendedExpanded["Portugal"] = "PORTUGAL";
    CountryExtendedExpanded["Qatar"] = "QATAR";
    CountryExtendedExpanded["Romania"] = "ROMANIA";
    CountryExtendedExpanded["RussianFederation"] = "RUSSIAN FEDERATION";
    CountryExtendedExpanded["Rwanda"] = "RWANDA";
    CountryExtendedExpanded["SaintHelena"] = "SAINT HELENA";
    CountryExtendedExpanded["SaintKittsAndNevis"] = "SAINT KITTS AND NEVIS";
    CountryExtendedExpanded["SaintLucia"] = "SAINT LUCIA";
    CountryExtendedExpanded["SaintVincentAndTheGrenadines"] = "SAINT VINCENT AND THE GRENADINES";
    CountryExtendedExpanded["Samoa"] = "SAMOA";
    CountryExtendedExpanded["SanMarino"] = "SAN MARINO";
    CountryExtendedExpanded["SaoTomeAndPrincipe"] = "SAO TOME AND PRINCIPE";
    CountryExtendedExpanded["SaudiArabia"] = "SAUDI ARABIA";
    CountryExtendedExpanded["Senegal"] = "SENEGAL";
    CountryExtendedExpanded["Serbia"] = "SERBIA";
    CountryExtendedExpanded["Seychelles"] = "SEYCHELLES";
    CountryExtendedExpanded["SierraLeone"] = "SIERRA LEONE";
    CountryExtendedExpanded["Singapore"] = "SINGAPORE";
    CountryExtendedExpanded["SintMaarten"] = "SINT MAARTEN";
    CountryExtendedExpanded["Slovakia"] = "SLOVAKIA";
    CountryExtendedExpanded["Slovenia"] = "SLOVENIA";
    CountryExtendedExpanded["SolomonIslands"] = "SOLOMON ISLANDS";
    CountryExtendedExpanded["Somalia"] = "SOMALIA";
    CountryExtendedExpanded["SouthAfrica"] = "SOUTH AFRICA";
    CountryExtendedExpanded["SouthGeorgiaAndTheSouthSandwichIslands"] = "SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS";
    CountryExtendedExpanded["SouthSudan"] = "SOUTH SUDAN";
    CountryExtendedExpanded["Spain"] = "SPAIN";
    CountryExtendedExpanded["SriLanka"] = "SRI LANKA";
    CountryExtendedExpanded["Sudan"] = "SUDAN";
    CountryExtendedExpanded["Suriname"] = "SURINAME";
    CountryExtendedExpanded["Sweden"] = "SWEDEN";
    CountryExtendedExpanded["Switzerland"] = "SWITZERLAND";
    CountryExtendedExpanded["SyrianArabRepublic"] = "SYRIAN ARAB REPUBLIC";
    CountryExtendedExpanded["Taiwan"] = "TAIWAN";
    CountryExtendedExpanded["Tajikistan"] = "TAJIKISTAN";
    CountryExtendedExpanded["Tanzania"] = "TANZANIA";
    CountryExtendedExpanded["Thailand"] = "THAILAND";
    CountryExtendedExpanded["TheBahamas"] = "THE BAHAMAS";
    CountryExtendedExpanded["TimorLeste"] = "TIMOR-LESTE";
    CountryExtendedExpanded["Togo"] = "TOGO";
    CountryExtendedExpanded["Tokelau"] = "TOKELAU";
    CountryExtendedExpanded["Tonga"] = "TONGA";
    CountryExtendedExpanded["TrinidadAndTobago"] = "TRINIDAD AND TOBAGO";
    CountryExtendedExpanded["Tunisia"] = "TUNISIA";
    CountryExtendedExpanded["Turkey"] = "TURKEY";
    CountryExtendedExpanded["Turkmenistan"] = "TURKMENISTAN";
    CountryExtendedExpanded["TurksAndCaicosIslands"] = "TURKS AND CAICOS ISLANDS";
    CountryExtendedExpanded["Tuvalu"] = "TUVALU";
    CountryExtendedExpanded["Uganda"] = "UGANDA";
    CountryExtendedExpanded["Ukraine"] = "UKRAINE";
    CountryExtendedExpanded["UnitedArabEmirates"] = "UNITED ARAB EMIRATES";
    CountryExtendedExpanded["UnitedKingdom"] = "UNITED KINGDOM";
    CountryExtendedExpanded["UnitedStates"] = "UNITED STATES";
    CountryExtendedExpanded["Uruguay"] = "URUGUAY";
    CountryExtendedExpanded["Uzbekistan"] = "UZBEKISTAN";
    CountryExtendedExpanded["Vanuatu"] = "VANUATU";
    CountryExtendedExpanded["Venezuela"] = "VENEZUELA";
    CountryExtendedExpanded["VietNam"] = "VIET NAM";
    CountryExtendedExpanded["WesternSahara"] = "WESTERN SAHARA";
    CountryExtendedExpanded["Yemen"] = "YEMEN";
    CountryExtendedExpanded["Zambia"] = "ZAMBIA";
    CountryExtendedExpanded["Zimbabwe"] = "ZIMBABWE";
})(exports.CountryExtendedExpanded || (exports.CountryExtendedExpanded = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(countryExtendedExpanded));

var creativePatch = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(creativePatch, "__esModule", { value: true });
creativePatch.CreativePatch = void 0;
/**
 *
 * @export
 * @class CreativePatch
 */
var CreativePatch = /** @class */ (function () {
    function CreativePatch(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.from) !== "undefined") {
            this.from = input.from;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
    }
    CreativePatch.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CreativePatch;
}());
creativePatch.CreativePatch = CreativePatch;

var creativeResponse = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreativeResponseObjectEnum = exports.CreativeResponseResourceTypeEnum = exports.CreativeResponse = void 0;
/**
 *
 * @export
 * @class CreativeResponse
 */
var CreativeResponse = /** @class */ (function () {
    function CreativeResponse(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.from) !== "undefined") {
            this.from = input.from;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.resource_type) !== "undefined") {
            this.resource_type = input.resource_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.details) !== "undefined") {
            this.details = input.details;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.template_preview_urls) !== "undefined") {
            this.template_preview_urls = input.template_preview_urls;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.template_previews) !== "undefined") {
            this.template_previews = input.template_previews;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.campaigns) !== "undefined") {
            this.campaigns = input.campaigns;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(CreativeResponse.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^crv_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    CreativeResponse.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CreativeResponse;
}());
exports.CreativeResponse = CreativeResponse;
(function (CreativeResponseResourceTypeEnum) {
    CreativeResponseResourceTypeEnum["Letter"] = "letter";
    CreativeResponseResourceTypeEnum["Postcard"] = "postcard";
})(exports.CreativeResponseResourceTypeEnum || (exports.CreativeResponseResourceTypeEnum = {}));
(function (CreativeResponseObjectEnum) {
    CreativeResponseObjectEnum["Creative"] = "creative";
})(exports.CreativeResponseObjectEnum || (exports.CreativeResponseObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(creativeResponse));

var creativeWritable = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreativeWritableResourceTypeEnum = exports.CreativeWritable = void 0;
/**
 *
 * @export
 * @class CreativeWritable
 */
var CreativeWritable = /** @class */ (function () {
    function CreativeWritable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.from) !== "undefined") {
            this.from = input.from;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.resource_type) !== "undefined") {
            this.resource_type = input.resource_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.campaign_id) !== "undefined") {
            this.campaign_id = input.campaign_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.details) !== "undefined") {
            this.details = input.details;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.file) !== "undefined") {
            this.file = input.file;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.front) !== "undefined") {
            this.front = input.front;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.back) !== "undefined") {
            this.back = input.back;
        }
    }
    Object.defineProperty(CreativeWritable.prototype, "campaign_id", {
        get: function () {
            return this._campaign_id;
        },
        set: function (newValue) {
            if (newValue && !/^cmp_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid campaign_id provided");
            }
            this._campaign_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    CreativeWritable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CreativeWritable;
}());
exports.CreativeWritable = CreativeWritable;
(function (CreativeWritableResourceTypeEnum) {
    CreativeWritableResourceTypeEnum["Letter"] = "letter";
    CreativeWritableResourceTypeEnum["Postcard"] = "postcard";
})(exports.CreativeWritableResourceTypeEnum || (exports.CreativeWritableResourceTypeEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(creativeWritable));

var customEnvelopeReturned = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomEnvelopeReturnedObjectEnum = exports.CustomEnvelopeReturned = void 0;
/**
 * A nested custom envelope object containing more information about the custom envelope used or `null` if a custom envelope was not used.
 * @export
 * @class CustomEnvelopeReturned
 */
var CustomEnvelopeReturned = /** @class */ (function () {
    function CustomEnvelopeReturned(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.url) !== "undefined") {
            this.url = input.url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    CustomEnvelopeReturned.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return CustomEnvelopeReturned;
}());
exports.CustomEnvelopeReturned = CustomEnvelopeReturned;
(function (CustomEnvelopeReturnedObjectEnum) {
    CustomEnvelopeReturnedObjectEnum["Envelope"] = "envelope";
})(exports.CustomEnvelopeReturnedObjectEnum || (exports.CustomEnvelopeReturnedObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(customEnvelopeReturned));

var deliverabilityAnalysis = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeliverabilityAnalysisSuiteReturnCodeEnum = exports.DeliverabilityAnalysisLacsIndicatorEnum = exports.DeliverabilityAnalysisDpvActiveEnum = exports.DeliverabilityAnalysisDpvVacantEnum = exports.DeliverabilityAnalysisDpvCmraEnum = exports.DeliverabilityAnalysisDpvConfirmationEnum = exports.DeliverabilityAnalysis = void 0;
/**
 * A nested object containing a breakdown of the deliverability of an address.
 * @export
 * @class DeliverabilityAnalysis
 */
var DeliverabilityAnalysis = /** @class */ (function () {
    function DeliverabilityAnalysis(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.dpv_confirmation) !== "undefined") {
            this.dpv_confirmation = input.dpv_confirmation;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.dpv_cmra) !== "undefined") {
            this.dpv_cmra = input.dpv_cmra;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.dpv_vacant) !== "undefined") {
            this.dpv_vacant = input.dpv_vacant;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.dpv_active) !== "undefined") {
            this.dpv_active = input.dpv_active;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.dpv_footnotes) !== "undefined") {
            this.dpv_footnotes = input.dpv_footnotes;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.ews_match) !== "undefined") {
            this.ews_match = input.ews_match;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.lacs_indicator) !== "undefined") {
            this.lacs_indicator = input.lacs_indicator;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.lacs_return_code) !== "undefined") {
            this.lacs_return_code = input.lacs_return_code;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.suite_return_code) !== "undefined") {
            this.suite_return_code = input.suite_return_code;
        }
    }
    DeliverabilityAnalysis.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return DeliverabilityAnalysis;
}());
exports.DeliverabilityAnalysis = DeliverabilityAnalysis;
(function (DeliverabilityAnalysisDpvConfirmationEnum) {
    DeliverabilityAnalysisDpvConfirmationEnum["Y"] = "Y";
    DeliverabilityAnalysisDpvConfirmationEnum["S"] = "S";
    DeliverabilityAnalysisDpvConfirmationEnum["D"] = "D";
    DeliverabilityAnalysisDpvConfirmationEnum["N"] = "N";
    DeliverabilityAnalysisDpvConfirmationEnum["Empty"] = "";
})(exports.DeliverabilityAnalysisDpvConfirmationEnum || (exports.DeliverabilityAnalysisDpvConfirmationEnum = {}));
(function (DeliverabilityAnalysisDpvCmraEnum) {
    DeliverabilityAnalysisDpvCmraEnum["Y"] = "Y";
    DeliverabilityAnalysisDpvCmraEnum["N"] = "N";
    DeliverabilityAnalysisDpvCmraEnum["Empty"] = "";
})(exports.DeliverabilityAnalysisDpvCmraEnum || (exports.DeliverabilityAnalysisDpvCmraEnum = {}));
(function (DeliverabilityAnalysisDpvVacantEnum) {
    DeliverabilityAnalysisDpvVacantEnum["Y"] = "Y";
    DeliverabilityAnalysisDpvVacantEnum["N"] = "N";
    DeliverabilityAnalysisDpvVacantEnum["Empty"] = "";
})(exports.DeliverabilityAnalysisDpvVacantEnum || (exports.DeliverabilityAnalysisDpvVacantEnum = {}));
(function (DeliverabilityAnalysisDpvActiveEnum) {
    DeliverabilityAnalysisDpvActiveEnum["Y"] = "Y";
    DeliverabilityAnalysisDpvActiveEnum["N"] = "N";
    DeliverabilityAnalysisDpvActiveEnum["Empty"] = "";
})(exports.DeliverabilityAnalysisDpvActiveEnum || (exports.DeliverabilityAnalysisDpvActiveEnum = {}));
(function (DeliverabilityAnalysisLacsIndicatorEnum) {
    DeliverabilityAnalysisLacsIndicatorEnum["Y"] = "Y";
    DeliverabilityAnalysisLacsIndicatorEnum["N"] = "N";
    DeliverabilityAnalysisLacsIndicatorEnum["Empty"] = "";
})(exports.DeliverabilityAnalysisLacsIndicatorEnum || (exports.DeliverabilityAnalysisLacsIndicatorEnum = {}));
(function (DeliverabilityAnalysisSuiteReturnCodeEnum) {
    DeliverabilityAnalysisSuiteReturnCodeEnum["A"] = "A";
    DeliverabilityAnalysisSuiteReturnCodeEnum["_00"] = "00";
    DeliverabilityAnalysisSuiteReturnCodeEnum["Empty"] = "";
})(exports.DeliverabilityAnalysisSuiteReturnCodeEnum || (exports.DeliverabilityAnalysisSuiteReturnCodeEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(deliverabilityAnalysis));

var dpvFootnote = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DpvFootnote = void 0;
(function (DpvFootnote) {
    DpvFootnote["Aa"] = "AA";
    DpvFootnote["A1"] = "A1";
    DpvFootnote["Bb"] = "BB";
    DpvFootnote["Cc"] = "CC";
    DpvFootnote["N1"] = "N1";
    DpvFootnote["F1"] = "F1";
    DpvFootnote["G1"] = "G1";
    DpvFootnote["U1"] = "U1";
    DpvFootnote["M1"] = "M1";
    DpvFootnote["M3"] = "M3";
    DpvFootnote["P1"] = "P1";
    DpvFootnote["P3"] = "P3";
    DpvFootnote["R1"] = "R1";
    DpvFootnote["R7"] = "R7";
    DpvFootnote["Rr"] = "RR";
})(exports.DpvFootnote || (exports.DpvFootnote = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(dpvFootnote));

var engineHtml = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EngineHtml = void 0;
(function (EngineHtml) {
    EngineHtml["Legacy"] = "legacy";
    EngineHtml["Handlebars"] = "handlebars";
})(exports.EngineHtml || (exports.EngineHtml = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(engineHtml));

var eventType = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventTypeObjectEnum = exports.EventTypeResourceEnum = exports.EventType = void 0;
/**
 *
 * @export
 * @class EventType
 */
var EventType = /** @class */ (function () {
    function EventType(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.enabled_for_test) !== "undefined") {
            this.enabled_for_test = input.enabled_for_test;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.resource) !== "undefined") {
            this.resource = input.resource;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    EventType.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return EventType;
}());
exports.EventType = EventType;
(function (EventTypeResourceEnum) {
    EventTypeResourceEnum["Postcards"] = "postcards";
    EventTypeResourceEnum["SelfMailers"] = "self mailers";
    EventTypeResourceEnum["Letters"] = "letters";
    EventTypeResourceEnum["Checks"] = "checks";
    EventTypeResourceEnum["Addresses"] = "addresses";
    EventTypeResourceEnum["BankAccounts"] = "bank accounts";
})(exports.EventTypeResourceEnum || (exports.EventTypeResourceEnum = {}));
(function (EventTypeObjectEnum) {
    EventTypeObjectEnum["EventType"] = "event_type";
})(exports.EventTypeObjectEnum || (exports.EventTypeObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(eventType));

var events = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventsObjectEnum = exports.Events = void 0;
/**
 *
 * @export
 * @class Events
 */
var Events = /** @class */ (function () {
    function Events(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.body) !== "undefined") {
            this.body = input.body;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.reference_id) !== "undefined") {
            this.reference_id = input.reference_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.event_type) !== "undefined") {
            this.event_type = input.event_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(Events.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (newValue) {
            if (newValue && !/^evt_[a-zA-Z0-9_]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Events.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return Events;
}());
exports.Events = Events;
(function (EventsObjectEnum) {
    EventsObjectEnum["Event"] = "event";
})(exports.EventsObjectEnum || (exports.EventsObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(events));

var _export = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExportTypeEnum = exports.ExportStateEnum = exports.Export = void 0;
/**
 *
 * @export
 * @class Export
 */
var Export = /** @class */ (function () {
    function Export(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.dateCreated) !== "undefined") {
            this.dateCreated = input.dateCreated;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.dateModified) !== "undefined") {
            this.dateModified = input.dateModified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.s3Url) !== "undefined") {
            this.s3Url = input.s3Url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.state) !== "undefined") {
            this.state = input.state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.type) !== "undefined") {
            this.type = input.type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.uploadId) !== "undefined") {
            this.uploadId = input.uploadId;
        }
    }
    Object.defineProperty(Export.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (newValue) {
            if (newValue && !/^ex_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Export.prototype, "uploadId", {
        get: function () {
            return this._uploadId;
        },
        set: function (newValue) {
            if (newValue && !/^upl_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid uploadId provided");
            }
            this._uploadId = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Export.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return Export;
}());
exports.Export = Export;
(function (ExportStateEnum) {
    ExportStateEnum["InProgress"] = "in_progress";
    ExportStateEnum["Failed"] = "failed";
    ExportStateEnum["Succeeded"] = "succeeded";
})(exports.ExportStateEnum || (exports.ExportStateEnum = {}));
(function (ExportTypeEnum) {
    ExportTypeEnum["All"] = "all";
    ExportTypeEnum["Failures"] = "failures";
    ExportTypeEnum["Successes"] = "successes";
})(exports.ExportTypeEnum || (exports.ExportTypeEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(_export));

var exportModel = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExportModelTypeEnum = exports.ExportModel = void 0;
/**
 *
 * @export
 * @class ExportModel
 */
var ExportModel = /** @class */ (function () {
    function ExportModel(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.type) !== "undefined") {
            this.type = input.type;
        }
    }
    ExportModel.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return ExportModel;
}());
exports.ExportModel = ExportModel;
(function (ExportModelTypeEnum) {
    ExportModelTypeEnum["All"] = "all";
    ExportModelTypeEnum["Failures"] = "failures";
    ExportModelTypeEnum["Successes"] = "successes";
})(exports.ExportModelTypeEnum || (exports.ExportModelTypeEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(exportModel));

var geocodeAddresses = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(geocodeAddresses, "__esModule", { value: true });
geocodeAddresses.GeocodeAddresses = void 0;
/**
 *
 * @export
 * @class GeocodeAddresses
 */
var GeocodeAddresses = /** @class */ (function () {
    function GeocodeAddresses(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.components) !== "undefined") {
            this.components = input.components;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.location_analysis) !== "undefined") {
            this.location_analysis = input.location_analysis;
        }
    }
    GeocodeAddresses.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return GeocodeAddresses;
}());
geocodeAddresses.GeocodeAddresses = GeocodeAddresses;

var geocodeComponents = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(geocodeComponents, "__esModule", { value: true });
geocodeComponents.GeocodeComponents = void 0;
/**
 * A nested object containing a breakdown of each component of a reverse geocoded response.
 * @export
 * @class GeocodeComponents
 */
var GeocodeComponents = /** @class */ (function () {
    function GeocodeComponents(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.zip_code) !== "undefined") {
            this.zip_code = input.zip_code;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.zip_code_plus_4) !== "undefined") {
            this.zip_code_plus_4 = input.zip_code_plus_4;
        }
    }
    Object.defineProperty(GeocodeComponents.prototype, "zip_code", {
        get: function () {
            return this._zip_code;
        },
        set: function (newValue) {
            if (newValue && !/^\d{5}$/.test(newValue)) {
                throw new Error("Invalid zip_code provided");
            }
            this._zip_code = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeocodeComponents.prototype, "zip_code_plus_4", {
        get: function () {
            return this._zip_code_plus_4;
        },
        set: function (newValue) {
            if (newValue && !/^\d{4}$/.test(newValue)) {
                throw new Error("Invalid zip_code_plus_4 provided");
            }
            this._zip_code_plus_4 = newValue;
        },
        enumerable: false,
        configurable: true
    });
    GeocodeComponents.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return GeocodeComponents;
}());
geocodeComponents.GeocodeComponents = GeocodeComponents;

var httpvalidationError = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(httpvalidationError, "__esModule", { value: true });
httpvalidationError.HTTPValidationError = void 0;
/**
 *
 * @export
 * @class HTTPValidationError
 */
var HTTPValidationError = /** @class */ (function () {
    function HTTPValidationError(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.detail) !== "undefined") {
            this.detail = input.detail;
        }
    }
    HTTPValidationError.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return HTTPValidationError;
}());
httpvalidationError.HTTPValidationError = HTTPValidationError;

var identityValidation = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityValidationObjectEnum = exports.IdentityValidationConfidenceEnum = exports.IdentityValidation = void 0;
/**
 *
 * @export
 * @class IdentityValidation
 */
var IdentityValidation = /** @class */ (function () {
    function IdentityValidation(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.recipient) !== "undefined") {
            this.recipient = input.recipient;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.primary_line) !== "undefined") {
            this.primary_line = input.primary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.secondary_line) !== "undefined") {
            this.secondary_line = input.secondary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.urbanization) !== "undefined") {
            this.urbanization = input.urbanization;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.last_line) !== "undefined") {
            this.last_line = input.last_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.score) !== "undefined") {
            this.score = input.score;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.confidence) !== "undefined") {
            this.confidence = input.confidence;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(IdentityValidation.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^id_validation_[a-zA-Z0-9_]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    IdentityValidation.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return IdentityValidation;
}());
exports.IdentityValidation = IdentityValidation;
(function (IdentityValidationConfidenceEnum) {
    IdentityValidationConfidenceEnum["High"] = "high";
    IdentityValidationConfidenceEnum["Medium"] = "medium";
    IdentityValidationConfidenceEnum["Low"] = "low";
    IdentityValidationConfidenceEnum["Empty"] = "";
})(exports.IdentityValidationConfidenceEnum || (exports.IdentityValidationConfidenceEnum = {}));
(function (IdentityValidationObjectEnum) {
    IdentityValidationObjectEnum["IdValidation"] = "id_validation";
})(exports.IdentityValidationObjectEnum || (exports.IdentityValidationObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(identityValidation));

var inlineObject = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(inlineObject, "__esModule", { value: true });
inlineObject.InlineObject = void 0;
/**
 *
 * @export
 * @class InlineObject
 */
var InlineObject = /** @class */ (function () {
    function InlineObject(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.file) !== "undefined") {
            this.file = input.file;
        }
    }
    InlineObject.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return InlineObject;
}());
inlineObject.InlineObject = InlineObject;

var intlAutocompletions = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(intlAutocompletions, "__esModule", { value: true });
intlAutocompletions.IntlAutocompletions = void 0;
/**
 *
 * @export
 * @class IntlAutocompletions
 */
var IntlAutocompletions = /** @class */ (function () {
    function IntlAutocompletions(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.suggestions) !== "undefined") {
            this.suggestions = input.suggestions;
        }
    }
    Object.defineProperty(IntlAutocompletions.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^intl_auto_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    IntlAutocompletions.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return IntlAutocompletions;
}());
intlAutocompletions.IntlAutocompletions = IntlAutocompletions;

var intlAutocompletionsWritable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(intlAutocompletionsWritable, "__esModule", { value: true });
intlAutocompletionsWritable.IntlAutocompletionsWritable = void 0;
/**
 *
 * @export
 * @class IntlAutocompletionsWritable
 */
var IntlAutocompletionsWritable = /** @class */ (function () {
    function IntlAutocompletionsWritable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.address_prefix) !== "undefined") {
            this.address_prefix = input.address_prefix;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.city) !== "undefined") {
            this.city = input.city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.state) !== "undefined") {
            this.state = input.state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.zip_code) !== "undefined") {
            this.zip_code = input.zip_code;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.country) !== "undefined") {
            this.country = input.country;
        }
    }
    IntlAutocompletionsWritable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return IntlAutocompletionsWritable;
}());
intlAutocompletionsWritable.IntlAutocompletionsWritable = IntlAutocompletionsWritable;

var intlComponents = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(intlComponents, "__esModule", { value: true });
intlComponents.IntlComponents = void 0;
/**
 * A nested object containing a breakdown of each component of an address.
 * @export
 * @class IntlComponents
 */
var IntlComponents = /** @class */ (function () {
    function IntlComponents(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.primary_number) !== "undefined") {
            this.primary_number = input.primary_number;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.street_name) !== "undefined") {
            this.street_name = input.street_name;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.city) !== "undefined") {
            this.city = input.city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.state) !== "undefined") {
            this.state = input.state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.postal_code) !== "undefined") {
            this.postal_code = input.postal_code;
        }
    }
    IntlComponents.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return IntlComponents;
}());
intlComponents.IntlComponents = IntlComponents;

var intlSuggestions = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntlSuggestionsObjectEnum = exports.IntlSuggestions = void 0;
/**
 *
 * @export
 * @class IntlSuggestions
 */
var IntlSuggestions = /** @class */ (function () {
    function IntlSuggestions(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.primary_number_range) !== "undefined") {
            this.primary_number_range = input.primary_number_range;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.primary_line) !== "undefined") {
            this.primary_line = input.primary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.city) !== "undefined") {
            this.city = input.city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.state) !== "undefined") {
            this.state = input.state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.country) !== "undefined") {
            this.country = input.country;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.zip_code) !== "undefined") {
            this.zip_code = input.zip_code;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    IntlSuggestions.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return IntlSuggestions;
}());
exports.IntlSuggestions = IntlSuggestions;
(function (IntlSuggestionsObjectEnum) {
    IntlSuggestionsObjectEnum["IntlAutocompletion"] = "intl_autocompletion";
})(exports.IntlSuggestionsObjectEnum || (exports.IntlSuggestionsObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(intlSuggestions));

var intlVerification = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntlVerificationObjectEnum = exports.IntlVerificationStatusEnum = exports.IntlVerificationDeliverabilityEnum = exports.IntlVerificationCoverageEnum = exports.IntlVerification = void 0;
/**
 *
 * @export
 * @class IntlVerification
 */
var IntlVerification = /** @class */ (function () {
    function IntlVerification(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.recipient) !== "undefined") {
            this.recipient = input.recipient;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.primary_line) !== "undefined") {
            this.primary_line = input.primary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.secondary_line) !== "undefined") {
            this.secondary_line = input.secondary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.last_line) !== "undefined") {
            this.last_line = input.last_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.country) !== "undefined") {
            this.country = input.country;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.coverage) !== "undefined") {
            this.coverage = input.coverage;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deliverability) !== "undefined") {
            this.deliverability = input.deliverability;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.status) !== "undefined") {
            this.status = input.status;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.components) !== "undefined") {
            this.components = input.components;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(IntlVerification.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^intl_ver_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    IntlVerification.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return IntlVerification;
}());
exports.IntlVerification = IntlVerification;
(function (IntlVerificationCoverageEnum) {
    IntlVerificationCoverageEnum["Subbuilding"] = "SUBBUILDING";
    IntlVerificationCoverageEnum["HousenumberBuilding"] = "HOUSENUMBER/BUILDING";
    IntlVerificationCoverageEnum["Street"] = "STREET";
    IntlVerificationCoverageEnum["Locality"] = "LOCALITY";
    IntlVerificationCoverageEnum["Sparse"] = "SPARSE";
})(exports.IntlVerificationCoverageEnum || (exports.IntlVerificationCoverageEnum = {}));
(function (IntlVerificationDeliverabilityEnum) {
    IntlVerificationDeliverabilityEnum["Deliverable"] = "deliverable";
    IntlVerificationDeliverabilityEnum["DeliverableMissingInfo"] = "deliverable_missing_info";
    IntlVerificationDeliverabilityEnum["Undeliverable"] = "undeliverable";
    IntlVerificationDeliverabilityEnum["NoMatch"] = "no_match";
})(exports.IntlVerificationDeliverabilityEnum || (exports.IntlVerificationDeliverabilityEnum = {}));
(function (IntlVerificationStatusEnum) {
    IntlVerificationStatusEnum["Lv4"] = "LV4";
    IntlVerificationStatusEnum["Lv3"] = "LV3";
    IntlVerificationStatusEnum["Lv2"] = "LV2";
    IntlVerificationStatusEnum["Lv1"] = "LV1";
    IntlVerificationStatusEnum["Lf4"] = "LF4";
    IntlVerificationStatusEnum["Lf3"] = "LF3";
    IntlVerificationStatusEnum["Lf2"] = "LF2";
    IntlVerificationStatusEnum["Lf1"] = "LF1";
    IntlVerificationStatusEnum["Lm4"] = "LM4";
    IntlVerificationStatusEnum["Lm3"] = "LM3";
    IntlVerificationStatusEnum["Lm2"] = "LM2";
    IntlVerificationStatusEnum["Lu1"] = "LU1";
})(exports.IntlVerificationStatusEnum || (exports.IntlVerificationStatusEnum = {}));
(function (IntlVerificationObjectEnum) {
    IntlVerificationObjectEnum["IntlVerification"] = "intl_verification";
})(exports.IntlVerificationObjectEnum || (exports.IntlVerificationObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(intlVerification));

var intlVerificationOrError = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntlVerificationOrErrorObjectEnum = exports.IntlVerificationOrErrorStatusEnum = exports.IntlVerificationOrErrorDeliverabilityEnum = exports.IntlVerificationOrErrorCoverageEnum = exports.IntlVerificationOrError = void 0;
/**
 * A model used to represent an entry in a result list where the entry can either be a intl_verification or an Error. The SDK will perform necessary casting into the correct corresponding type.
 * @export
 * @class IntlVerificationOrError
 */
var IntlVerificationOrError = /** @class */ (function () {
    function IntlVerificationOrError(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.recipient) !== "undefined") {
            this.recipient = input.recipient;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.primary_line) !== "undefined") {
            this.primary_line = input.primary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.secondary_line) !== "undefined") {
            this.secondary_line = input.secondary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.last_line) !== "undefined") {
            this.last_line = input.last_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.country) !== "undefined") {
            this.country = input.country;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.coverage) !== "undefined") {
            this.coverage = input.coverage;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deliverability) !== "undefined") {
            this.deliverability = input.deliverability;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.status) !== "undefined") {
            this.status = input.status;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.components) !== "undefined") {
            this.components = input.components;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.error) !== "undefined") {
            this.error = input.error;
        }
    }
    Object.defineProperty(IntlVerificationOrError.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^intl_ver_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    IntlVerificationOrError.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return IntlVerificationOrError;
}());
exports.IntlVerificationOrError = IntlVerificationOrError;
(function (IntlVerificationOrErrorCoverageEnum) {
    IntlVerificationOrErrorCoverageEnum["Subbuilding"] = "SUBBUILDING";
    IntlVerificationOrErrorCoverageEnum["HousenumberBuilding"] = "HOUSENUMBER/BUILDING";
    IntlVerificationOrErrorCoverageEnum["Street"] = "STREET";
    IntlVerificationOrErrorCoverageEnum["Locality"] = "LOCALITY";
    IntlVerificationOrErrorCoverageEnum["Sparse"] = "SPARSE";
})(exports.IntlVerificationOrErrorCoverageEnum || (exports.IntlVerificationOrErrorCoverageEnum = {}));
(function (IntlVerificationOrErrorDeliverabilityEnum) {
    IntlVerificationOrErrorDeliverabilityEnum["Deliverable"] = "deliverable";
    IntlVerificationOrErrorDeliverabilityEnum["DeliverableMissingInfo"] = "deliverable_missing_info";
    IntlVerificationOrErrorDeliverabilityEnum["Undeliverable"] = "undeliverable";
    IntlVerificationOrErrorDeliverabilityEnum["NoMatch"] = "no_match";
})(exports.IntlVerificationOrErrorDeliverabilityEnum || (exports.IntlVerificationOrErrorDeliverabilityEnum = {}));
(function (IntlVerificationOrErrorStatusEnum) {
    IntlVerificationOrErrorStatusEnum["Lv4"] = "LV4";
    IntlVerificationOrErrorStatusEnum["Lv3"] = "LV3";
    IntlVerificationOrErrorStatusEnum["Lv2"] = "LV2";
    IntlVerificationOrErrorStatusEnum["Lv1"] = "LV1";
    IntlVerificationOrErrorStatusEnum["Lf4"] = "LF4";
    IntlVerificationOrErrorStatusEnum["Lf3"] = "LF3";
    IntlVerificationOrErrorStatusEnum["Lf2"] = "LF2";
    IntlVerificationOrErrorStatusEnum["Lf1"] = "LF1";
    IntlVerificationOrErrorStatusEnum["Lm4"] = "LM4";
    IntlVerificationOrErrorStatusEnum["Lm3"] = "LM3";
    IntlVerificationOrErrorStatusEnum["Lm2"] = "LM2";
    IntlVerificationOrErrorStatusEnum["Lu1"] = "LU1";
})(exports.IntlVerificationOrErrorStatusEnum || (exports.IntlVerificationOrErrorStatusEnum = {}));
(function (IntlVerificationOrErrorObjectEnum) {
    IntlVerificationOrErrorObjectEnum["IntlVerification"] = "intl_verification";
})(exports.IntlVerificationOrErrorObjectEnum || (exports.IntlVerificationOrErrorObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(intlVerificationOrError));

var intlVerificationWritable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(intlVerificationWritable, "__esModule", { value: true });
intlVerificationWritable.IntlVerificationWritable = void 0;
/**
 *
 * @export
 * @class IntlVerificationWritable
 */
var IntlVerificationWritable = /** @class */ (function () {
    function IntlVerificationWritable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.recipient) !== "undefined") {
            this.recipient = input.recipient;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.primary_line) !== "undefined") {
            this.primary_line = input.primary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.secondary_line) !== "undefined") {
            this.secondary_line = input.secondary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.city) !== "undefined") {
            this.city = input.city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.state) !== "undefined") {
            this.state = input.state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.postal_code) !== "undefined") {
            this.postal_code = input.postal_code;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.country) !== "undefined") {
            this.country = input.country;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address) !== "undefined") {
            this.address = input.address;
        }
    }
    IntlVerificationWritable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return IntlVerificationWritable;
}());
intlVerificationWritable.IntlVerificationWritable = IntlVerificationWritable;

var intlVerifications = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(intlVerifications, "__esModule", { value: true });
intlVerifications.IntlVerifications = void 0;
var tslib_1 = require$$0__default["default"];
var Models = tslib_1.__importStar(models);
/**
 *
 * @export
 * @class IntlVerifications
 */
var IntlVerifications = /** @class */ (function () {
    function IntlVerifications(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.addresses) !== "undefined") {
            this.addresses = input.addresses;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.errors) !== "undefined") {
            this.errors = input.errors;
        }
    }
    Object.defineProperty(IntlVerifications.prototype, "addresses", {
        get: function () {
            return this._addresses || [];
        },
        set: function (items) {
            if (!this._addresses) {
                this._addresses = [];
            }
            if (!this._error_addresses) {
                this._error_addresses = [];
            }
            for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
                var item = items_1[_i];
                if (item.id) {
                    this._addresses.push(new Models.IntlVerification(item));
                }
                if (item.error) {
                    this._error_addresses.push(new Models.BulkError(item));
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IntlVerifications.prototype, "errorAddresses", {
        get: function () {
            return this._error_addresses || [];
        },
        enumerable: false,
        configurable: true
    });
    IntlVerifications.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return IntlVerifications;
}());
intlVerifications.IntlVerifications = IntlVerifications;

var intlVerificationsPayload = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(intlVerificationsPayload, "__esModule", { value: true });
intlVerificationsPayload.IntlVerificationsPayload = void 0;
/**
 *
 * @export
 * @class IntlVerificationsPayload
 */
var IntlVerificationsPayload = /** @class */ (function () {
    function IntlVerificationsPayload(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.addresses) !== "undefined") {
            this.addresses = input.addresses;
        }
    }
    IntlVerificationsPayload.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return IntlVerificationsPayload;
}());
intlVerificationsPayload.IntlVerificationsPayload = IntlVerificationsPayload;

var letter = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LetterAddressPlacementEnum = exports.LetterObjectEnum = exports.LetterCarrierEnum = exports.Letter = void 0;
/**
 *
 * @export
 * @class Letter
 */
var Letter = /** @class */ (function () {
    function Letter(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.to) !== "undefined") {
            this.to = input.to;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.from) !== "undefined") {
            this.from = input.from;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.carrier) !== "undefined") {
            this.carrier = input.carrier;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.thumbnails) !== "undefined") {
            this.thumbnails = input.thumbnails;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.expected_delivery_date) !== "undefined") {
            this.expected_delivery_date = input.expected_delivery_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.template_id) !== "undefined") {
            this.template_id = input.template_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.template_version_id) !== "undefined") {
            this.template_version_id = input.template_version_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.url) !== "undefined") {
            this.url = input.url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.merge_variables) !== "undefined") {
            this.merge_variables = input.merge_variables;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.send_date) !== "undefined") {
            this.send_date = input.send_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.extra_service) !== "undefined") {
            this.extra_service = input.extra_service;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.tracking_number) !== "undefined") {
            this.tracking_number = input.tracking_number;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.tracking_events) !== "undefined") {
            this.tracking_events = input.tracking_events;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.return_address) !== "undefined") {
            this.return_address = input.return_address;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.mail_type) !== "undefined") {
            this.mail_type = input.mail_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.color) !== "undefined") {
            this.color = input.color;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.double_sided) !== "undefined") {
            this.double_sided = input.double_sided;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_placement) !== "undefined") {
            this.address_placement = input.address_placement;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.return_envelope) !== "undefined") {
            this.return_envelope = input.return_envelope;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.perforated_page) !== "undefined") {
            this.perforated_page = input.perforated_page;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.custom_envelope) !== "undefined") {
            this.custom_envelope = input.custom_envelope;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.campaign_id) !== "undefined") {
            this.campaign_id = input.campaign_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.use_type) !== "undefined") {
            this.use_type = input.use_type;
        }
    }
    Object.defineProperty(Letter.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (newValue) {
            if (newValue && !/^ltr_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Letter.prototype, "template_id", {
        get: function () {
            return (this._template_id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^tmpl_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid template_id provided");
            }
            this._template_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Letter.prototype, "template_version_id", {
        get: function () {
            return (this._template_version_id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^vrsn_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid template_version_id provided");
            }
            this._template_version_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Letter.prototype, "url", {
        get: function () {
            return (this._url || undefined);
        },
        set: function (newValue) {
            if (newValue &&
                !/^https:\/\/(lob-assets|lob-assets-staging)\.com\/(letters|postcards|bank-accounts|checks|self-mailers|cards)\/[a-z]{3,4}_[a-z0-9]{15,16}(\.pdf|_thumb_[a-z]+_[0-9]+\.png)\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$/.test(newValue)) {
                throw new Error("Invalid url provided");
            }
            this._url = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Letter.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return Letter;
}());
exports.Letter = Letter;
(function (LetterCarrierEnum) {
    LetterCarrierEnum["Usps"] = "USPS";
})(exports.LetterCarrierEnum || (exports.LetterCarrierEnum = {}));
(function (LetterObjectEnum) {
    LetterObjectEnum["Letter"] = "letter";
})(exports.LetterObjectEnum || (exports.LetterObjectEnum = {}));
(function (LetterAddressPlacementEnum) {
    LetterAddressPlacementEnum["TopFirstPage"] = "top_first_page";
    LetterAddressPlacementEnum["InsertBlankPage"] = "insert_blank_page";
    LetterAddressPlacementEnum["BottomFirstPageCenter"] = "bottom_first_page_center";
    LetterAddressPlacementEnum["BottomFirstPage"] = "bottom_first_page";
})(exports.LetterAddressPlacementEnum || (exports.LetterAddressPlacementEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(letter));

var letterCustomEnvelope = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LetterCustomEnvelopeObjectEnum = exports.LetterCustomEnvelope = void 0;
/**
 * A nested custom envelope object containing more information about the custom envelope used or `null` if a custom envelope was not used.  Accepts an envelope ID for any customized envelope with available inventory. If no inventory is available for the specified ID, the letter will not be sent, and an error will be returned. If the letter has more than 6 sheets, it will be sent in a blank flat envelope. Custom envelopes may be created and ordered from the dashboard. This feature is exclusive to certain customers. Upgrade to the appropriate [Print & Mail Edition](https://dashboard.lob.com/#/settings/editions) to gain access.
 * @export
 * @class LetterCustomEnvelope
 */
var LetterCustomEnvelope = /** @class */ (function () {
    function LetterCustomEnvelope(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.url) !== "undefined") {
            this.url = input.url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    LetterCustomEnvelope.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return LetterCustomEnvelope;
}());
exports.LetterCustomEnvelope = LetterCustomEnvelope;
(function (LetterCustomEnvelopeObjectEnum) {
    LetterCustomEnvelopeObjectEnum["Envelope"] = "envelope";
})(exports.LetterCustomEnvelopeObjectEnum || (exports.LetterCustomEnvelopeObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(letterCustomEnvelope));

var letterDeletion = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LetterDeletionObjectEnum = exports.LetterDeletion = void 0;
/**
 * Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob\'s end.
 * @export
 * @class LetterDeletion
 */
var LetterDeletion = /** @class */ (function () {
    function LetterDeletion(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(LetterDeletion.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^ltr_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    LetterDeletion.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return LetterDeletion;
}());
exports.LetterDeletion = LetterDeletion;
(function (LetterDeletionObjectEnum) {
    LetterDeletionObjectEnum["LetterDeleted"] = "letter_deleted";
})(exports.LetterDeletionObjectEnum || (exports.LetterDeletionObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(letterDeletion));

var letterDetailsReturned = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LetterDetailsReturnedAddressPlacementEnum = exports.LetterDetailsReturned = void 0;
/**
 * Properties that the letters in your Creative should have.
 * @export
 * @class LetterDetailsReturned
 */
var LetterDetailsReturned = /** @class */ (function () {
    function LetterDetailsReturned(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.color) !== "undefined") {
            this.color = input.color;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.cards) !== "undefined") {
            this.cards = input.cards;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_placement) !== "undefined") {
            this.address_placement = input.address_placement;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.custom_envelope) !== "undefined") {
            this.custom_envelope = input.custom_envelope;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.double_sided) !== "undefined") {
            this.double_sided = input.double_sided;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.extra_service) !== "undefined") {
            this.extra_service = input.extra_service;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.mail_type) !== "undefined") {
            this.mail_type = input.mail_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.return_envelope) !== "undefined") {
            this.return_envelope = input.return_envelope;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.bleed) !== "undefined") {
            this.bleed = input.bleed;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.file_original_url) !== "undefined") {
            this.file_original_url = input.file_original_url;
        }
    }
    LetterDetailsReturned.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return LetterDetailsReturned;
}());
exports.LetterDetailsReturned = LetterDetailsReturned;
(function (LetterDetailsReturnedAddressPlacementEnum) {
    LetterDetailsReturnedAddressPlacementEnum["TopFirstPage"] = "top_first_page";
    LetterDetailsReturnedAddressPlacementEnum["InsertBlankPage"] = "insert_blank_page";
    LetterDetailsReturnedAddressPlacementEnum["BottomFirstPageCenter"] = "bottom_first_page_center";
    LetterDetailsReturnedAddressPlacementEnum["BottomFirstPage"] = "bottom_first_page";
})(exports.LetterDetailsReturnedAddressPlacementEnum || (exports.LetterDetailsReturnedAddressPlacementEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(letterDetailsReturned));

var letterDetailsWritable = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LetterDetailsWritableAddressPlacementEnum = exports.LetterDetailsWritable = void 0;
/**
 * Properties that the letters in your Creative should have.
 * @export
 * @class LetterDetailsWritable
 */
var LetterDetailsWritable = /** @class */ (function () {
    function LetterDetailsWritable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.address_placement) !== "undefined") {
            this.address_placement = input.address_placement;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.cards) !== "undefined") {
            this.cards = input.cards;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.color) !== "undefined") {
            this.color = input.color;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.double_sided) !== "undefined") {
            this.double_sided = input.double_sided;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.extra_service) !== "undefined") {
            this.extra_service = input.extra_service;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.mail_type) !== "undefined") {
            this.mail_type = input.mail_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.return_envelope) !== "undefined") {
            this.return_envelope = input.return_envelope;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.custom_envelope) !== "undefined") {
            this.custom_envelope = input.custom_envelope;
        }
    }
    Object.defineProperty(LetterDetailsWritable.prototype, "custom_envelope", {
        get: function () {
            return (this._custom_envelope || null || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^env_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid custom_envelope provided");
            }
            this._custom_envelope = newValue;
        },
        enumerable: false,
        configurable: true
    });
    LetterDetailsWritable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return LetterDetailsWritable;
}());
exports.LetterDetailsWritable = LetterDetailsWritable;
(function (LetterDetailsWritableAddressPlacementEnum) {
    LetterDetailsWritableAddressPlacementEnum["TopFirstPage"] = "top_first_page";
    LetterDetailsWritableAddressPlacementEnum["InsertBlankPage"] = "insert_blank_page";
    LetterDetailsWritableAddressPlacementEnum["BottomFirstPageCenter"] = "bottom_first_page_center";
    LetterDetailsWritableAddressPlacementEnum["BottomFirstPage"] = "bottom_first_page";
})(exports.LetterDetailsWritableAddressPlacementEnum || (exports.LetterDetailsWritableAddressPlacementEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(letterDetailsWritable));

var letterEditable = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LetterEditableExtraServiceEnum = exports.LetterEditableAddressPlacementEnum = exports.LetterEditable = void 0;
/**
 *
 * @export
 * @class LetterEditable
 */
var LetterEditable = /** @class */ (function () {
    function LetterEditable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.mail_type) !== "undefined") {
            this.mail_type = input.mail_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.merge_variables) !== "undefined") {
            this.merge_variables = input.merge_variables;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.send_date) !== "undefined") {
            this.send_date = input.send_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.color) !== "undefined") {
            this.color = input.color;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.double_sided) !== "undefined") {
            this.double_sided = input.double_sided;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_placement) !== "undefined") {
            this.address_placement = input.address_placement;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.return_envelope) !== "undefined") {
            this.return_envelope = input.return_envelope;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.perforated_page) !== "undefined") {
            this.perforated_page = input.perforated_page;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.custom_envelope) !== "undefined") {
            this.custom_envelope = input.custom_envelope;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.to) !== "undefined") {
            this.to = input.to;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.from) !== "undefined") {
            this.from = input.from;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.file) !== "undefined") {
            this.file = input.file;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.extra_service) !== "undefined") {
            this.extra_service = input.extra_service;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.cards) !== "undefined") {
            this.cards = input.cards;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.billing_group_id) !== "undefined") {
            this.billing_group_id = input.billing_group_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.qr_code) !== "undefined") {
            this.qr_code = input.qr_code;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.use_type) !== "undefined") {
            this.use_type = input.use_type;
        }
    }
    LetterEditable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return LetterEditable;
}());
exports.LetterEditable = LetterEditable;
(function (LetterEditableAddressPlacementEnum) {
    LetterEditableAddressPlacementEnum["TopFirstPage"] = "top_first_page";
    LetterEditableAddressPlacementEnum["InsertBlankPage"] = "insert_blank_page";
    LetterEditableAddressPlacementEnum["BottomFirstPageCenter"] = "bottom_first_page_center";
    LetterEditableAddressPlacementEnum["BottomFirstPage"] = "bottom_first_page";
})(exports.LetterEditableAddressPlacementEnum || (exports.LetterEditableAddressPlacementEnum = {}));
(function (LetterEditableExtraServiceEnum) {
    LetterEditableExtraServiceEnum["Certified"] = "certified";
    LetterEditableExtraServiceEnum["CertifiedReturnReceipt"] = "certified_return_receipt";
    LetterEditableExtraServiceEnum["Registered"] = "registered";
    LetterEditableExtraServiceEnum["Null"] = "null";
})(exports.LetterEditableExtraServiceEnum || (exports.LetterEditableExtraServiceEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(letterEditable));

var letterList = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(letterList, "__esModule", { value: true });
letterList.LetterList = void 0;
/**
 *
 * @export
 * @class LetterList
 */
var LetterList = /** @class */ (function () {
    function LetterList(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.data) !== "undefined") {
            this.data = input.data;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.next_url) !== "undefined") {
            this.next_url = input.next_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.previous_url) !== "undefined") {
            this.previous_url = input.previous_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.count) !== "undefined") {
            this.count = input.count;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.total_count) !== "undefined") {
            this.total_count = input.total_count;
        }
    }
    Object.defineProperty(LetterList.prototype, "nextPageToken", {
        get: function () {
            var _a;
            if (!this.next_url) {
                return undefined;
            }
            return (_a = this.next_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("after="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LetterList.prototype, "previousPageToken", {
        get: function () {
            var _a;
            if (!this.previous_url) {
                return undefined;
            }
            return (_a = this.previous_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("before="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    LetterList.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return LetterList;
}());
letterList.LetterList = LetterList;

var lobConfidenceScore = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LobConfidenceScoreLevelEnum = exports.LobConfidenceScore = void 0;
/**
 * Lob Confidence Score is a nested object that provides a numerical value between 0-100 of the likelihood that an address is deliverable based on Lob’s mail delivery data to over half of US households.
 * @export
 * @class LobConfidenceScore
 */
var LobConfidenceScore = /** @class */ (function () {
    function LobConfidenceScore(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.score) !== "undefined") {
            this.score = input.score;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.level) !== "undefined") {
            this.level = input.level;
        }
    }
    LobConfidenceScore.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return LobConfidenceScore;
}());
exports.LobConfidenceScore = LobConfidenceScore;
(function (LobConfidenceScoreLevelEnum) {
    LobConfidenceScoreLevelEnum["High"] = "high";
    LobConfidenceScoreLevelEnum["Medium"] = "medium";
    LobConfidenceScoreLevelEnum["Low"] = "low";
    LobConfidenceScoreLevelEnum["Empty"] = "";
})(exports.LobConfidenceScoreLevelEnum || (exports.LobConfidenceScoreLevelEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(lobConfidenceScore));

var lobError = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LobErrorCodeEnum = exports.LobErrorStatusCodeEnum = exports.LobError = void 0;
/**
 * Lob uses RESTful HTTP response codes to indicate success or failure of an API request.
 * @export
 * @class LobError
 */
var LobError = /** @class */ (function () {
    function LobError(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.message) !== "undefined") {
            this.message = input.message;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.status_code) !== "undefined") {
            this.status_code = input.status_code;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.code) !== "undefined") {
            this.code = input.code;
        }
    }
    LobError.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return LobError;
}());
exports.LobError = LobError;
(function (LobErrorStatusCodeEnum) {
    LobErrorStatusCodeEnum[LobErrorStatusCodeEnum["NUMBER_401"] = 401] = "NUMBER_401";
    LobErrorStatusCodeEnum[LobErrorStatusCodeEnum["NUMBER_403"] = 403] = "NUMBER_403";
    LobErrorStatusCodeEnum[LobErrorStatusCodeEnum["NUMBER_404"] = 404] = "NUMBER_404";
    LobErrorStatusCodeEnum[LobErrorStatusCodeEnum["NUMBER_413"] = 413] = "NUMBER_413";
    LobErrorStatusCodeEnum[LobErrorStatusCodeEnum["NUMBER_422"] = 422] = "NUMBER_422";
    LobErrorStatusCodeEnum[LobErrorStatusCodeEnum["NUMBER_429"] = 429] = "NUMBER_429";
    LobErrorStatusCodeEnum[LobErrorStatusCodeEnum["NUMBER_500"] = 500] = "NUMBER_500";
})(exports.LobErrorStatusCodeEnum || (exports.LobErrorStatusCodeEnum = {}));
(function (LobErrorCodeEnum) {
    LobErrorCodeEnum["BadRequest"] = "bad_request";
    LobErrorCodeEnum["Conflict"] = "conflict";
    LobErrorCodeEnum["FeatureLimitReached"] = "feature_limit_reached";
    LobErrorCodeEnum["InternalServerError"] = "internal_server_error";
    LobErrorCodeEnum["Invalid"] = "invalid";
    LobErrorCodeEnum["NotDeletable"] = "not_deletable";
    LobErrorCodeEnum["NotFound"] = "not_found";
    LobErrorCodeEnum["RequestTimeout"] = "request_timeout";
    LobErrorCodeEnum["ServiceUnavailable"] = "service_unavailable";
    LobErrorCodeEnum["UnrecognizedEndpoint"] = "unrecognized_endpoint";
    LobErrorCodeEnum["UnsupportedLobVersion"] = "unsupported_lob_version";
    LobErrorCodeEnum["AddressLengthExceedsLimit"] = "address_length_exceeds_limit";
    LobErrorCodeEnum["BankAccountAlreadyVerified"] = "bank_account_already_verified";
    LobErrorCodeEnum["BankError"] = "bank_error";
    LobErrorCodeEnum["CustomEnvelopeInventoryDepleted"] = "custom_envelope_inventory_depleted";
    LobErrorCodeEnum["DeletedBankAccount"] = "deleted_bank_account";
    LobErrorCodeEnum["FailedDeliverabilityStrictness"] = "failed_deliverability_strictness";
    LobErrorCodeEnum["FilePagesBelowMin"] = "file_pages_below_min";
    LobErrorCodeEnum["FilePagesExceedMax"] = "file_pages_exceed_max";
    LobErrorCodeEnum["FileSizeExceedsLimit"] = "file_size_exceeds_limit";
    LobErrorCodeEnum["ForeignReturnAddress"] = "foreign_return_address";
    LobErrorCodeEnum["InconsistentPageDimensions"] = "inconsistent_page_dimensions";
    LobErrorCodeEnum["InvalidBankAccount"] = "invalid_bank_account";
    LobErrorCodeEnum["InvalidBankAccountVerification"] = "invalid_bank_account_verification";
    LobErrorCodeEnum["InvalidCheckInternational"] = "invalid_check_international";
    LobErrorCodeEnum["InvalidCountryCovid"] = "invalid_country_covid";
    LobErrorCodeEnum["InvalidFile"] = "invalid_file";
    LobErrorCodeEnum["InvalidFileDimensions"] = "invalid_file_dimensions";
    LobErrorCodeEnum["InvalidFileDownloadTime"] = "invalid_file_download_time";
    LobErrorCodeEnum["InvalidFileUrl"] = "invalid_file_url";
    LobErrorCodeEnum["InvalidImageDpi"] = "invalid_image_dpi";
    LobErrorCodeEnum["InvalidInternationalFeature"] = "invalid_international_feature";
    LobErrorCodeEnum["InvalidPerforationReturnEnvelope"] = "invalid_perforation_return_envelope";
    LobErrorCodeEnum["InvalidTemplateHtml"] = "invalid_template_html";
    LobErrorCodeEnum["MergeVariableRequired"] = "merge_variable_required";
    LobErrorCodeEnum["MergeVariableWhitespace"] = "merge_variable_whitespace";
    LobErrorCodeEnum["PaymentMethodUnverified"] = "payment_method_unverified";
    LobErrorCodeEnum["PdfEncrypted"] = "pdf_encrypted";
    LobErrorCodeEnum["SpecialCharactersRestricted"] = "special_characters_restricted";
    LobErrorCodeEnum["UnembeddedFonts"] = "unembedded_fonts";
    LobErrorCodeEnum["EmailRequired"] = "email_required";
    LobErrorCodeEnum["InvalidApiKey"] = "invalid_api_key";
    LobErrorCodeEnum["PublishableKeyNotAllowed"] = "publishable_key_not_allowed";
    LobErrorCodeEnum["RateLimitExceeded"] = "rate_limit_exceeded";
    LobErrorCodeEnum["Unauthorized"] = "unauthorized";
    LobErrorCodeEnum["UnauthorizedToken"] = "unauthorized_token";
    LobErrorCodeEnum["CardQuantityBelowMin"] = "card_quantity_below_min";
})(exports.LobErrorCodeEnum || (exports.LobErrorCodeEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(lobError));

var location = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(location, "__esModule", { value: true });
location.Location = void 0;
/**
 *
 * @export
 * @class Location
 */
var Location = /** @class */ (function () {
    function Location(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.latitude) !== "undefined") {
            this.latitude = input.latitude;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.longitude) !== "undefined") {
            this.longitude = input.longitude;
        }
    }
    Location.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return Location;
}());
location.Location = Location;

var locationAnalysis = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(locationAnalysis, "__esModule", { value: true });
locationAnalysis.LocationAnalysis = void 0;
/**
 * A nested object containing a breakdown of the analysis of a reverse geocoded location.
 * @export
 * @class LocationAnalysis
 */
var LocationAnalysis = /** @class */ (function () {
    function LocationAnalysis(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.latitude) !== "undefined") {
            this.latitude = input.latitude;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.longitude) !== "undefined") {
            this.longitude = input.longitude;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.distance) !== "undefined") {
            this.distance = input.distance;
        }
    }
    LocationAnalysis.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return LocationAnalysis;
}());
locationAnalysis.LocationAnalysis = LocationAnalysis;

var ltrUseType = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LtrUseType = void 0;
(function (LtrUseType) {
    LtrUseType["Marketing"] = "marketing";
    LtrUseType["Operational"] = "operational";
    LtrUseType["Null"] = "null";
})(exports.LtrUseType || (exports.LtrUseType = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(ltrUseType));

var mailType = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MailType = void 0;
(function (MailType) {
    MailType["FirstClass"] = "usps_first_class";
    MailType["Standard"] = "usps_standard";
})(exports.MailType || (exports.MailType = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(mailType));

var multiLineAddress = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(multiLineAddress, "__esModule", { value: true });
multiLineAddress.MultiLineAddress = void 0;
/**
 *
 * @export
 * @class MultiLineAddress
 */
var MultiLineAddress = /** @class */ (function () {
    function MultiLineAddress(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.recipient) !== "undefined") {
            this.recipient = input.recipient;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.company) !== "undefined") {
            this.company = input.company;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.primary_line) !== "undefined") {
            this.primary_line = input.primary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.secondary_line) !== "undefined") {
            this.secondary_line = input.secondary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.urbanization) !== "undefined") {
            this.urbanization = input.urbanization;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.city) !== "undefined") {
            this.city = input.city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.state) !== "undefined") {
            this.state = input.state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.zip_code) !== "undefined") {
            this.zip_code = input.zip_code;
        }
    }
    Object.defineProperty(MultiLineAddress.prototype, "zip_code", {
        get: function () {
            return (this._zip_code || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^\d{5}((-)?\d{4})?$/.test(newValue)) {
                throw new Error("Invalid zip_code provided");
            }
            this._zip_code = newValue;
        },
        enumerable: false,
        configurable: true
    });
    MultiLineAddress.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return MultiLineAddress;
}());
multiLineAddress.MultiLineAddress = MultiLineAddress;

var multipleComponents = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(multipleComponents, "__esModule", { value: true });
multipleComponents.MultipleComponents = void 0;
/**
 *
 * @export
 * @class MultipleComponents
 */
var MultipleComponents = /** @class */ (function () {
    function MultipleComponents(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.recipient) !== "undefined") {
            this.recipient = input.recipient;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.primary_line) !== "undefined") {
            this.primary_line = input.primary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.secondary_line) !== "undefined") {
            this.secondary_line = input.secondary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.urbanization) !== "undefined") {
            this.urbanization = input.urbanization;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.city) !== "undefined") {
            this.city = input.city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.state) !== "undefined") {
            this.state = input.state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.zip_code) !== "undefined") {
            this.zip_code = input.zip_code;
        }
    }
    Object.defineProperty(MultipleComponents.prototype, "zip_code", {
        get: function () {
            return (this._zip_code || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^\d{5}((-)?\d{4})?$/.test(newValue)) {
                throw new Error("Invalid zip_code provided");
            }
            this._zip_code = newValue;
        },
        enumerable: false,
        configurable: true
    });
    MultipleComponents.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return MultipleComponents;
}());
multipleComponents.MultipleComponents = MultipleComponents;

var multipleComponentsIntl = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(multipleComponentsIntl, "__esModule", { value: true });
multipleComponentsIntl.MultipleComponentsIntl = void 0;
/**
 *
 * @export
 * @class MultipleComponentsIntl
 */
var MultipleComponentsIntl = /** @class */ (function () {
    function MultipleComponentsIntl(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.recipient) !== "undefined") {
            this.recipient = input.recipient;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.primary_line) !== "undefined") {
            this.primary_line = input.primary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.secondary_line) !== "undefined") {
            this.secondary_line = input.secondary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.city) !== "undefined") {
            this.city = input.city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.state) !== "undefined") {
            this.state = input.state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.postal_code) !== "undefined") {
            this.postal_code = input.postal_code;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.country) !== "undefined") {
            this.country = input.country;
        }
    }
    MultipleComponentsIntl.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return MultipleComponentsIntl;
}());
multipleComponentsIntl.MultipleComponentsIntl = MultipleComponentsIntl;

var multipleComponentsList = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(multipleComponentsList, "__esModule", { value: true });
multipleComponentsList.MultipleComponentsList = void 0;
/**
 *
 * @export
 * @class MultipleComponentsList
 */
var MultipleComponentsList = /** @class */ (function () {
    function MultipleComponentsList(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.addresses) !== "undefined") {
            this.addresses = input.addresses;
        }
    }
    MultipleComponentsList.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return MultipleComponentsList;
}());
multipleComponentsList.MultipleComponentsList = MultipleComponentsList;

var optionalAddressColumnMapping = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(optionalAddressColumnMapping, "__esModule", { value: true });
optionalAddressColumnMapping.OptionalAddressColumnMapping = void 0;
/**
 * The mapping of column headers in your file to Lob-optional fields for the resource created. See our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#optional-columns-3\" target=\"_blank\">Campaign Audience Guide</a> for additional details.
 * @export
 * @class OptionalAddressColumnMapping
 */
var OptionalAddressColumnMapping = /** @class */ (function () {
    function OptionalAddressColumnMapping(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.address_line2) !== "undefined") {
            this.address_line2 = input.address_line2;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.company) !== "undefined") {
            this.company = input.company;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_country) !== "undefined") {
            this.address_country = input.address_country;
        }
    }
    OptionalAddressColumnMapping.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return OptionalAddressColumnMapping;
}());
optionalAddressColumnMapping.OptionalAddressColumnMapping = OptionalAddressColumnMapping;

var placeholderModel = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(placeholderModel, "__esModule", { value: true });
placeholderModel.PlaceholderModel = void 0;
/**
 *
 * @export
 * @class PlaceholderModel
 */
var PlaceholderModel = /** @class */ (function () {
    function PlaceholderModel(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.return_envelope) !== "undefined") {
            this.return_envelope = input.return_envelope;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_domestic) !== "undefined") {
            this.address_domestic = input.address_domestic;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.letter_details_writable) !== "undefined") {
            this.letter_details_writable = input.letter_details_writable;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.postcard_details_writable) !== "undefined") {
            this.postcard_details_writable = input.postcard_details_writable;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.letter_details_returned) !== "undefined") {
            this.letter_details_returned = input.letter_details_returned;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.postcard_details_returned) !== "undefined") {
            this.postcard_details_returned = input.postcard_details_returned;
        }
    }
    PlaceholderModel.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return PlaceholderModel;
}());
placeholderModel.PlaceholderModel = PlaceholderModel;

var postcard = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostcardObjectEnum = exports.PostcardCarrierEnum = exports.Postcard = void 0;
/**
 *
 * @export
 * @class Postcard
 */
var Postcard = /** @class */ (function () {
    function Postcard(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.to) !== "undefined") {
            this.to = input.to;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.from) !== "undefined") {
            this.from = input.from;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.carrier) !== "undefined") {
            this.carrier = input.carrier;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.thumbnails) !== "undefined") {
            this.thumbnails = input.thumbnails;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.size) !== "undefined") {
            this.size = input.size;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.expected_delivery_date) !== "undefined") {
            this.expected_delivery_date = input.expected_delivery_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.front_template_id) !== "undefined") {
            this.front_template_id = input.front_template_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.back_template_id) !== "undefined") {
            this.back_template_id = input.back_template_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.front_template_version_id) !== "undefined") {
            this.front_template_version_id = input.front_template_version_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.back_template_version_id) !== "undefined") {
            this.back_template_version_id = input.back_template_version_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.tracking_events) !== "undefined") {
            this.tracking_events = input.tracking_events;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.url) !== "undefined") {
            this.url = input.url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.mail_type) !== "undefined") {
            this.mail_type = input.mail_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.merge_variables) !== "undefined") {
            this.merge_variables = input.merge_variables;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.send_date) !== "undefined") {
            this.send_date = input.send_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.use_type) !== "undefined") {
            this.use_type = input.use_type;
        }
    }
    Object.defineProperty(Postcard.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (newValue) {
            if (newValue && !/^psc_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Postcard.prototype, "front_template_id", {
        get: function () {
            return (this._front_template_id || null || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^tmpl_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid front_template_id provided");
            }
            this._front_template_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Postcard.prototype, "back_template_id", {
        get: function () {
            return (this._back_template_id || null || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^tmpl_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid back_template_id provided");
            }
            this._back_template_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Postcard.prototype, "front_template_version_id", {
        get: function () {
            return (this._front_template_version_id || null || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^vrsn_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid front_template_version_id provided");
            }
            this._front_template_version_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Postcard.prototype, "back_template_version_id", {
        get: function () {
            return (this._back_template_version_id || null || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^vrsn_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid back_template_version_id provided");
            }
            this._back_template_version_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Postcard.prototype, "url", {
        get: function () {
            return this._url;
        },
        set: function (newValue) {
            if (newValue &&
                !/^https:\/\/(lob-assets|lob-assets-staging)\.com\/(letters|postcards|bank-accounts|checks|self-mailers|cards)\/[a-z]{3,4}_[a-z0-9]{15,16}(\.pdf|_thumb_[a-z]+_[0-9]+\.png)\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$/.test(newValue)) {
                throw new Error("Invalid url provided");
            }
            this._url = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Postcard.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return Postcard;
}());
exports.Postcard = Postcard;
(function (PostcardCarrierEnum) {
    PostcardCarrierEnum["Usps"] = "USPS";
})(exports.PostcardCarrierEnum || (exports.PostcardCarrierEnum = {}));
(function (PostcardObjectEnum) {
    PostcardObjectEnum["Postcard"] = "postcard";
})(exports.PostcardObjectEnum || (exports.PostcardObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(postcard));

var postcardDeletion = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostcardDeletionObjectEnum = exports.PostcardDeletion = void 0;
/**
 * Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob\'s end.
 * @export
 * @class PostcardDeletion
 */
var PostcardDeletion = /** @class */ (function () {
    function PostcardDeletion(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(PostcardDeletion.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^psc_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    PostcardDeletion.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return PostcardDeletion;
}());
exports.PostcardDeletion = PostcardDeletion;
(function (PostcardDeletionObjectEnum) {
    PostcardDeletionObjectEnum["PostcardDeleted"] = "postcard_deleted";
})(exports.PostcardDeletionObjectEnum || (exports.PostcardDeletionObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(postcardDeletion));

var postcardDetailsReturned = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(postcardDetailsReturned, "__esModule", { value: true });
postcardDetailsReturned.PostcardDetailsReturned = void 0;
/**
 * Properties that the postcards in your Creative should have.
 * @export
 * @class PostcardDetailsReturned
 */
var PostcardDetailsReturned = /** @class */ (function () {
    function PostcardDetailsReturned(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.mail_type) !== "undefined") {
            this.mail_type = input.mail_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.size) !== "undefined") {
            this.size = input.size;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.setting) !== "undefined") {
            this.setting = input.setting;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.front_original_url) !== "undefined") {
            this.front_original_url = input.front_original_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.back_original_url) !== "undefined") {
            this.back_original_url = input.back_original_url;
        }
    }
    PostcardDetailsReturned.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return PostcardDetailsReturned;
}());
postcardDetailsReturned.PostcardDetailsReturned = PostcardDetailsReturned;

var postcardDetailsWritable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(postcardDetailsWritable, "__esModule", { value: true });
postcardDetailsWritable.PostcardDetailsWritable = void 0;
/**
 * Properties that the postcards in your Creative should have.
 * @export
 * @class PostcardDetailsWritable
 */
var PostcardDetailsWritable = /** @class */ (function () {
    function PostcardDetailsWritable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.mail_type) !== "undefined") {
            this.mail_type = input.mail_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.size) !== "undefined") {
            this.size = input.size;
        }
    }
    PostcardDetailsWritable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return PostcardDetailsWritable;
}());
postcardDetailsWritable.PostcardDetailsWritable = PostcardDetailsWritable;

var postcardEditable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(postcardEditable, "__esModule", { value: true });
postcardEditable.PostcardEditable = void 0;
/**
 *
 * @export
 * @class PostcardEditable
 */
var PostcardEditable = /** @class */ (function () {
    function PostcardEditable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.to) !== "undefined") {
            this.to = input.to;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.from) !== "undefined") {
            this.from = input.from;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.size) !== "undefined") {
            this.size = input.size;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.mail_type) !== "undefined") {
            this.mail_type = input.mail_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.merge_variables) !== "undefined") {
            this.merge_variables = input.merge_variables;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.send_date) !== "undefined") {
            this.send_date = input.send_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.front) !== "undefined") {
            this.front = input.front;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.back) !== "undefined") {
            this.back = input.back;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.billing_group_id) !== "undefined") {
            this.billing_group_id = input.billing_group_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.qr_code) !== "undefined") {
            this.qr_code = input.qr_code;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.use_type) !== "undefined") {
            this.use_type = input.use_type;
        }
    }
    PostcardEditable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return PostcardEditable;
}());
postcardEditable.PostcardEditable = PostcardEditable;

var postcardList = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(postcardList, "__esModule", { value: true });
postcardList.PostcardList = void 0;
/**
 *
 * @export
 * @class PostcardList
 */
var PostcardList = /** @class */ (function () {
    function PostcardList(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.data) !== "undefined") {
            this.data = input.data;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.next_url) !== "undefined") {
            this.next_url = input.next_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.previous_url) !== "undefined") {
            this.previous_url = input.previous_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.count) !== "undefined") {
            this.count = input.count;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.total_count) !== "undefined") {
            this.total_count = input.total_count;
        }
    }
    Object.defineProperty(PostcardList.prototype, "nextPageToken", {
        get: function () {
            var _a;
            if (!this.next_url) {
                return undefined;
            }
            return (_a = this.next_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("after="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PostcardList.prototype, "previousPageToken", {
        get: function () {
            var _a;
            if (!this.previous_url) {
                return undefined;
            }
            return (_a = this.previous_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("before="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    PostcardList.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return PostcardList;
}());
postcardList.PostcardList = PostcardList;

var postcardSize = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostcardSize = void 0;
(function (PostcardSize) {
    PostcardSize["_4x6"] = "4x6";
    PostcardSize["_6x9"] = "6x9";
    PostcardSize["_6x11"] = "6x11";
})(exports.PostcardSize || (exports.PostcardSize = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(postcardSize));

var pscUseType = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PscUseType = void 0;
(function (PscUseType) {
    PscUseType["Marketing"] = "marketing";
    PscUseType["Operational"] = "operational";
    PscUseType["Null"] = "null";
})(exports.PscUseType || (exports.PscUseType = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(pscUseType));

var qrCode = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.QrCodePositionEnum = exports.QrCode = void 0;
/**
 * Customize and place a QR code on the creative at the required position.
 * @export
 * @class QrCode
 */
var QrCode = /** @class */ (function () {
    function QrCode(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.position) !== "undefined") {
            this.position = input.position;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.top) !== "undefined") {
            this.top = input.top;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.right) !== "undefined") {
            this.right = input.right;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.left) !== "undefined") {
            this.left = input.left;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.bottom) !== "undefined") {
            this.bottom = input.bottom;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.redirect_url) !== "undefined") {
            this.redirect_url = input.redirect_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.width) !== "undefined") {
            this.width = input.width;
        }
    }
    QrCode.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return QrCode;
}());
exports.QrCode = QrCode;
(function (QrCodePositionEnum) {
    QrCodePositionEnum["Fixed"] = "fixed";
    QrCodePositionEnum["Relative"] = "relative";
})(exports.QrCodePositionEnum || (exports.QrCodePositionEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(qrCode));

var requiredAddressColumnMapping = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(requiredAddressColumnMapping, "__esModule", { value: true });
requiredAddressColumnMapping.RequiredAddressColumnMapping = void 0;
/**
 * The mapping of column headers in your file to Lob-required fields for the resource created. See our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#required-columns-2\" target=\"_blank\">Campaign Audience Guide</a> for additional details.
 * @export
 * @class RequiredAddressColumnMapping
 */
var RequiredAddressColumnMapping = /** @class */ (function () {
    function RequiredAddressColumnMapping(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.name) !== "undefined") {
            this.name = input.name;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_line1) !== "undefined") {
            this.address_line1 = input.address_line1;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_city) !== "undefined") {
            this.address_city = input.address_city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_state) !== "undefined") {
            this.address_state = input.address_state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_zip) !== "undefined") {
            this.address_zip = input.address_zip;
        }
    }
    RequiredAddressColumnMapping.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return RequiredAddressColumnMapping;
}());
requiredAddressColumnMapping.RequiredAddressColumnMapping = RequiredAddressColumnMapping;

var returnEnvelope = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(returnEnvelope, "__esModule", { value: true });
returnEnvelope.ReturnEnvelope = void 0;
/**
 *
 * @export
 * @class ReturnEnvelope
 */
var ReturnEnvelope = /** @class */ (function () {
    function ReturnEnvelope(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.alias) !== "undefined") {
            this.alias = input.alias;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.url) !== "undefined") {
            this.url = input.url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    ReturnEnvelope.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return ReturnEnvelope;
}());
returnEnvelope.ReturnEnvelope = ReturnEnvelope;

var reverseGeocode = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReverseGeocodeObjectEnum = exports.ReverseGeocode = void 0;
/**
 *
 * @export
 * @class ReverseGeocode
 */
var ReverseGeocode = /** @class */ (function () {
    function ReverseGeocode(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.addresses) !== "undefined") {
            this.addresses = input.addresses;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(ReverseGeocode.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^us_reverse_geocode_[a-zA-Z0-9_]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    ReverseGeocode.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return ReverseGeocode;
}());
exports.ReverseGeocode = ReverseGeocode;
(function (ReverseGeocodeObjectEnum) {
    ReverseGeocodeObjectEnum["UsReverseGeocodeLookup"] = "us_reverse_geocode_lookup";
})(exports.ReverseGeocodeObjectEnum || (exports.ReverseGeocodeObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(reverseGeocode));

var selfMailer = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SelfMailerObjectEnum = exports.SelfMailer = void 0;
/**
 *
 * @export
 * @class SelfMailer
 */
var SelfMailer = /** @class */ (function () {
    function SelfMailer(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.to) !== "undefined") {
            this.to = input.to;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.from) !== "undefined") {
            this.from = input.from;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.size) !== "undefined") {
            this.size = input.size;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.mail_type) !== "undefined") {
            this.mail_type = input.mail_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.merge_variables) !== "undefined") {
            this.merge_variables = input.merge_variables;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.send_date) !== "undefined") {
            this.send_date = input.send_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.outside_template_id) !== "undefined") {
            this.outside_template_id = input.outside_template_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.inside_template_id) !== "undefined") {
            this.inside_template_id = input.inside_template_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.outside_template_version_id) !== "undefined") {
            this.outside_template_version_id = input.outside_template_version_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.inside_template_version_id) !== "undefined") {
            this.inside_template_version_id = input.inside_template_version_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.tracking_events) !== "undefined") {
            this.tracking_events = input.tracking_events;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.url) !== "undefined") {
            this.url = input.url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.use_type) !== "undefined") {
            this.use_type = input.use_type;
        }
    }
    Object.defineProperty(SelfMailer.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (newValue) {
            if (newValue && !/^sfm_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SelfMailer.prototype, "outside_template_id", {
        get: function () {
            return (this._outside_template_id || null || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^tmpl_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid outside_template_id provided");
            }
            this._outside_template_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SelfMailer.prototype, "inside_template_id", {
        get: function () {
            return (this._inside_template_id || null || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^tmpl_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid inside_template_id provided");
            }
            this._inside_template_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SelfMailer.prototype, "outside_template_version_id", {
        get: function () {
            return (this._outside_template_version_id || null || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^vrsn_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid outside_template_version_id provided");
            }
            this._outside_template_version_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SelfMailer.prototype, "inside_template_version_id", {
        get: function () {
            return (this._inside_template_version_id || null || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^vrsn_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid inside_template_version_id provided");
            }
            this._inside_template_version_id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SelfMailer.prototype, "url", {
        get: function () {
            return this._url;
        },
        set: function (newValue) {
            if (newValue &&
                !/^https:\/\/(lob-assets|lob-assets-staging)\.com\/(letters|postcards|bank-accounts|checks|self-mailers|cards)\/[a-z]{3,4}_[a-z0-9]{15,16}(\.pdf|_thumb_[a-z]+_[0-9]+\.png)\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$/.test(newValue)) {
                throw new Error("Invalid url provided");
            }
            this._url = newValue;
        },
        enumerable: false,
        configurable: true
    });
    SelfMailer.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return SelfMailer;
}());
exports.SelfMailer = SelfMailer;
(function (SelfMailerObjectEnum) {
    SelfMailerObjectEnum["SelfMailer"] = "self_mailer";
})(exports.SelfMailerObjectEnum || (exports.SelfMailerObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(selfMailer));

var selfMailerDeletion = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SelfMailerDeletionObjectEnum = exports.SelfMailerDeletion = void 0;
/**
 * Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob\'s end.
 * @export
 * @class SelfMailerDeletion
 */
var SelfMailerDeletion = /** @class */ (function () {
    function SelfMailerDeletion(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(SelfMailerDeletion.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^sfm_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    SelfMailerDeletion.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return SelfMailerDeletion;
}());
exports.SelfMailerDeletion = SelfMailerDeletion;
(function (SelfMailerDeletionObjectEnum) {
    SelfMailerDeletionObjectEnum["SelfMailerDeleted"] = "self_mailer_deleted";
})(exports.SelfMailerDeletionObjectEnum || (exports.SelfMailerDeletionObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(selfMailerDeletion));

var selfMailerEditable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(selfMailerEditable, "__esModule", { value: true });
selfMailerEditable.SelfMailerEditable = void 0;
/**
 *
 * @export
 * @class SelfMailerEditable
 */
var SelfMailerEditable = /** @class */ (function () {
    function SelfMailerEditable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.to) !== "undefined") {
            this.to = input.to;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.from) !== "undefined") {
            this.from = input.from;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.size) !== "undefined") {
            this.size = input.size;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.mail_type) !== "undefined") {
            this.mail_type = input.mail_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.merge_variables) !== "undefined") {
            this.merge_variables = input.merge_variables;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.send_date) !== "undefined") {
            this.send_date = input.send_date;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.inside) !== "undefined") {
            this.inside = input.inside;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.outside) !== "undefined") {
            this.outside = input.outside;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.billing_group_id) !== "undefined") {
            this.billing_group_id = input.billing_group_id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.use_type) !== "undefined") {
            this.use_type = input.use_type;
        }
    }
    SelfMailerEditable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return SelfMailerEditable;
}());
selfMailerEditable.SelfMailerEditable = SelfMailerEditable;

var selfMailerList = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(selfMailerList, "__esModule", { value: true });
selfMailerList.SelfMailerList = void 0;
/**
 *
 * @export
 * @class SelfMailerList
 */
var SelfMailerList = /** @class */ (function () {
    function SelfMailerList(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.data) !== "undefined") {
            this.data = input.data;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.next_url) !== "undefined") {
            this.next_url = input.next_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.previous_url) !== "undefined") {
            this.previous_url = input.previous_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.count) !== "undefined") {
            this.count = input.count;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.total_count) !== "undefined") {
            this.total_count = input.total_count;
        }
    }
    Object.defineProperty(SelfMailerList.prototype, "nextPageToken", {
        get: function () {
            var _a;
            if (!this.next_url) {
                return undefined;
            }
            return (_a = this.next_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("after="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SelfMailerList.prototype, "previousPageToken", {
        get: function () {
            var _a;
            if (!this.previous_url) {
                return undefined;
            }
            return (_a = this.previous_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("before="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    SelfMailerList.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return SelfMailerList;
}());
selfMailerList.SelfMailerList = SelfMailerList;

var selfMailerSize = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SelfMailerSize = void 0;
(function (SelfMailerSize) {
    SelfMailerSize["_6x18Bifold"] = "6x18_bifold";
    SelfMailerSize["_11x9Bifold"] = "11x9_bifold";
    SelfMailerSize["_12x9Bifold"] = "12x9_bifold";
})(exports.SelfMailerSize || (exports.SelfMailerSize = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(selfMailerSize));

var sfmUseType = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SfmUseType = void 0;
(function (SfmUseType) {
    SfmUseType["Marketing"] = "marketing";
    SfmUseType["Operational"] = "operational";
    SfmUseType["Null"] = "null";
})(exports.SfmUseType || (exports.SfmUseType = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(sfmUseType));

var sortBy = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SortBySendDateEnum = exports.SortByDateCreatedEnum = exports.SortBy = void 0;
/**
 *
 * @export
 * @class SortBy
 */
var SortBy = /** @class */ (function () {
    function SortBy(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.send_date) !== "undefined") {
            this.send_date = input.send_date;
        }
    }
    SortBy.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return SortBy;
}());
exports.SortBy = SortBy;
(function (SortByDateCreatedEnum) {
    SortByDateCreatedEnum["Asc"] = "asc";
    SortByDateCreatedEnum["Desc"] = "desc";
})(exports.SortByDateCreatedEnum || (exports.SortByDateCreatedEnum = {}));
(function (SortBySendDateEnum) {
    SortBySendDateEnum["Asc"] = "asc";
    SortBySendDateEnum["Desc"] = "desc";
})(exports.SortBySendDateEnum || (exports.SortBySendDateEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(sortBy));

var sortBy1 = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SortBy1SendDateEnum = exports.SortBy1DateCreatedEnum = exports.SortBy1 = void 0;
/**
 *
 * @export
 * @class SortBy1
 */
var SortBy1 = /** @class */ (function () {
    function SortBy1(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.send_date) !== "undefined") {
            this.send_date = input.send_date;
        }
    }
    SortBy1.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return SortBy1;
}());
exports.SortBy1 = SortBy1;
(function (SortBy1DateCreatedEnum) {
    SortBy1DateCreatedEnum["Asc"] = "asc";
    SortBy1DateCreatedEnum["Desc"] = "desc";
})(exports.SortBy1DateCreatedEnum || (exports.SortBy1DateCreatedEnum = {}));
(function (SortBy1SendDateEnum) {
    SortBy1SendDateEnum["Asc"] = "asc";
    SortBy1SendDateEnum["Desc"] = "desc";
})(exports.SortBy1SendDateEnum || (exports.SortBy1SendDateEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(sortBy1));

var sortBy2 = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SortBy2SendDateEnum = exports.SortBy2DateCreatedEnum = exports.SortBy2 = void 0;
/**
 *
 * @export
 * @class SortBy2
 */
var SortBy2 = /** @class */ (function () {
    function SortBy2(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.send_date) !== "undefined") {
            this.send_date = input.send_date;
        }
    }
    SortBy2.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return SortBy2;
}());
exports.SortBy2 = SortBy2;
(function (SortBy2DateCreatedEnum) {
    SortBy2DateCreatedEnum["Asc"] = "asc";
    SortBy2DateCreatedEnum["Desc"] = "desc";
})(exports.SortBy2DateCreatedEnum || (exports.SortBy2DateCreatedEnum = {}));
(function (SortBy2SendDateEnum) {
    SortBy2SendDateEnum["Asc"] = "asc";
    SortBy2SendDateEnum["Desc"] = "desc";
})(exports.SortBy2SendDateEnum || (exports.SortBy2SendDateEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(sortBy2));

var sortBy3 = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SortBy3SendDateEnum = exports.SortBy3DateCreatedEnum = exports.SortBy3 = void 0;
/**
 *
 * @export
 * @class SortBy3
 */
var SortBy3 = /** @class */ (function () {
    function SortBy3(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.send_date) !== "undefined") {
            this.send_date = input.send_date;
        }
    }
    SortBy3.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return SortBy3;
}());
exports.SortBy3 = SortBy3;
(function (SortBy3DateCreatedEnum) {
    SortBy3DateCreatedEnum["Asc"] = "asc";
    SortBy3DateCreatedEnum["Desc"] = "desc";
})(exports.SortBy3DateCreatedEnum || (exports.SortBy3DateCreatedEnum = {}));
(function (SortBy3SendDateEnum) {
    SortBy3SendDateEnum["Asc"] = "asc";
    SortBy3SendDateEnum["Desc"] = "desc";
})(exports.SortBy3SendDateEnum || (exports.SortBy3SendDateEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(sortBy3));

var sortByDateModified = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SortByDateModifiedDateModifiedEnum = exports.SortByDateModifiedDateCreatedEnum = exports.SortByDateModified = void 0;
/**
 *
 * @export
 * @class SortByDateModified
 */
var SortByDateModified = /** @class */ (function () {
    function SortByDateModified(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
    }
    SortByDateModified.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return SortByDateModified;
}());
exports.SortByDateModified = SortByDateModified;
(function (SortByDateModifiedDateCreatedEnum) {
    SortByDateModifiedDateCreatedEnum["Asc"] = "asc";
    SortByDateModifiedDateCreatedEnum["Desc"] = "desc";
})(exports.SortByDateModifiedDateCreatedEnum || (exports.SortByDateModifiedDateCreatedEnum = {}));
(function (SortByDateModifiedDateModifiedEnum) {
    SortByDateModifiedDateModifiedEnum["Asc"] = "asc";
    SortByDateModifiedDateModifiedEnum["Desc"] = "desc";
})(exports.SortByDateModifiedDateModifiedEnum || (exports.SortByDateModifiedDateModifiedEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(sortByDateModified));

var suggestions = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SuggestionsObjectEnum = exports.Suggestions = void 0;
/**
 *
 * @export
 * @class Suggestions
 */
var Suggestions = /** @class */ (function () {
    function Suggestions(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.primary_line) !== "undefined") {
            this.primary_line = input.primary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.city) !== "undefined") {
            this.city = input.city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.state) !== "undefined") {
            this.state = input.state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.zip_code) !== "undefined") {
            this.zip_code = input.zip_code;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Suggestions.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return Suggestions;
}());
exports.Suggestions = Suggestions;
(function (SuggestionsObjectEnum) {
    SuggestionsObjectEnum["UsAutocompletion"] = "us_autocompletion";
})(exports.SuggestionsObjectEnum || (exports.SuggestionsObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(suggestions));

var template = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TemplateObjectEnum = exports.Template = void 0;
/**
 *
 * @export
 * @class Template
 */
var Template = /** @class */ (function () {
    function Template(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.versions) !== "undefined") {
            this.versions = input.versions;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.published_version) !== "undefined") {
            this.published_version = input.published_version;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
    }
    Object.defineProperty(Template.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (newValue) {
            if (newValue && !/^tmpl_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Template.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return Template;
}());
exports.Template = Template;
(function (TemplateObjectEnum) {
    TemplateObjectEnum["Template"] = "template";
})(exports.TemplateObjectEnum || (exports.TemplateObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(template));

var templateDeletion = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TemplateDeletionObjectEnum = exports.TemplateDeletion = void 0;
/**
 * Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob\'s end.
 * @export
 * @class TemplateDeletion
 */
var TemplateDeletion = /** @class */ (function () {
    function TemplateDeletion(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(TemplateDeletion.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^tmpl_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    TemplateDeletion.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return TemplateDeletion;
}());
exports.TemplateDeletion = TemplateDeletion;
(function (TemplateDeletionObjectEnum) {
    TemplateDeletionObjectEnum["TemplateDeleted"] = "template_deleted";
})(exports.TemplateDeletionObjectEnum || (exports.TemplateDeletionObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(templateDeletion));

var templateList = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(templateList, "__esModule", { value: true });
templateList.TemplateList = void 0;
/**
 *
 * @export
 * @class TemplateList
 */
var TemplateList = /** @class */ (function () {
    function TemplateList(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.data) !== "undefined") {
            this.data = input.data;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.next_url) !== "undefined") {
            this.next_url = input.next_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.previous_url) !== "undefined") {
            this.previous_url = input.previous_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.count) !== "undefined") {
            this.count = input.count;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.total_count) !== "undefined") {
            this.total_count = input.total_count;
        }
    }
    Object.defineProperty(TemplateList.prototype, "nextPageToken", {
        get: function () {
            var _a;
            if (!this.next_url) {
                return undefined;
            }
            return (_a = this.next_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("after="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TemplateList.prototype, "previousPageToken", {
        get: function () {
            var _a;
            if (!this.previous_url) {
                return undefined;
            }
            return (_a = this.previous_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("before="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    TemplateList.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return TemplateList;
}());
templateList.TemplateList = TemplateList;

var templateUpdate = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(templateUpdate, "__esModule", { value: true });
templateUpdate.TemplateUpdate = void 0;
/**
 *
 * @export
 * @class TemplateUpdate
 */
var TemplateUpdate = /** @class */ (function () {
    function TemplateUpdate(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.published_version) !== "undefined") {
            this.published_version = input.published_version;
        }
    }
    Object.defineProperty(TemplateUpdate.prototype, "published_version", {
        get: function () {
            return (this._published_version || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^vrsn_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid published_version provided");
            }
            this._published_version = newValue;
        },
        enumerable: false,
        configurable: true
    });
    TemplateUpdate.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return TemplateUpdate;
}());
templateUpdate.TemplateUpdate = TemplateUpdate;

var templateVersion = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TemplateVersionObjectEnum = exports.TemplateVersion = void 0;
/**
 *
 * @export
 * @class TemplateVersion
 */
var TemplateVersion = /** @class */ (function () {
    function TemplateVersion(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.html) !== "undefined") {
            this.html = input.html;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.engine) !== "undefined") {
            this.engine = input.engine;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.suggest_json_editor) !== "undefined") {
            this.suggest_json_editor = input.suggest_json_editor;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.merge_variables) !== "undefined") {
            this.merge_variables = input.merge_variables;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(TemplateVersion.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (newValue) {
            if (newValue && !/^vrsn_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    TemplateVersion.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return TemplateVersion;
}());
exports.TemplateVersion = TemplateVersion;
(function (TemplateVersionObjectEnum) {
    TemplateVersionObjectEnum["Version"] = "version";
})(exports.TemplateVersionObjectEnum || (exports.TemplateVersionObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(templateVersion));

var templateVersionDeletion = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TemplateVersionDeletionObjectEnum = exports.TemplateVersionDeletion = void 0;
/**
 * Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob\'s end.
 * @export
 * @class TemplateVersionDeletion
 */
var TemplateVersionDeletion = /** @class */ (function () {
    function TemplateVersionDeletion(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deleted) !== "undefined") {
            this.deleted = input.deleted;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(TemplateVersionDeletion.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^vrsn_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    TemplateVersionDeletion.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return TemplateVersionDeletion;
}());
exports.TemplateVersionDeletion = TemplateVersionDeletion;
(function (TemplateVersionDeletionObjectEnum) {
    TemplateVersionDeletionObjectEnum["TemplateVersionDeleted"] = "template_version_deleted";
})(exports.TemplateVersionDeletionObjectEnum || (exports.TemplateVersionDeletionObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(templateVersionDeletion));

var templateVersionList = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(templateVersionList, "__esModule", { value: true });
templateVersionList.TemplateVersionList = void 0;
/**
 *
 * @export
 * @class TemplateVersionList
 */
var TemplateVersionList = /** @class */ (function () {
    function TemplateVersionList(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.data) !== "undefined") {
            this.data = input.data;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.next_url) !== "undefined") {
            this.next_url = input.next_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.previous_url) !== "undefined") {
            this.previous_url = input.previous_url;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.count) !== "undefined") {
            this.count = input.count;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.total_count) !== "undefined") {
            this.total_count = input.total_count;
        }
    }
    Object.defineProperty(TemplateVersionList.prototype, "nextPageToken", {
        get: function () {
            var _a;
            if (!this.next_url) {
                return undefined;
            }
            return (_a = this.next_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("after="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TemplateVersionList.prototype, "previousPageToken", {
        get: function () {
            var _a;
            if (!this.previous_url) {
                return undefined;
            }
            return (_a = this.previous_url
                .split("?")[1]
                .split("&")
                .find(function (raw) { return raw.includes("before="); })) === null || _a === void 0 ? void 0 : _a.split("=")[1];
        },
        enumerable: false,
        configurable: true
    });
    TemplateVersionList.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return TemplateVersionList;
}());
templateVersionList.TemplateVersionList = TemplateVersionList;

var templateVersionUpdatable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(templateVersionUpdatable, "__esModule", { value: true });
templateVersionUpdatable.TemplateVersionUpdatable = void 0;
/**
 *
 * @export
 * @class TemplateVersionUpdatable
 */
var TemplateVersionUpdatable = /** @class */ (function () {
    function TemplateVersionUpdatable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.engine) !== "undefined") {
            this.engine = input.engine;
        }
    }
    TemplateVersionUpdatable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return TemplateVersionUpdatable;
}());
templateVersionUpdatable.TemplateVersionUpdatable = TemplateVersionUpdatable;

var templateVersionWritable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(templateVersionWritable, "__esModule", { value: true });
templateVersionWritable.TemplateVersionWritable = void 0;
/**
 *
 * @export
 * @class TemplateVersionWritable
 */
var TemplateVersionWritable = /** @class */ (function () {
    function TemplateVersionWritable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.html) !== "undefined") {
            this.html = input.html;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.engine) !== "undefined") {
            this.engine = input.engine;
        }
    }
    TemplateVersionWritable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return TemplateVersionWritable;
}());
templateVersionWritable.TemplateVersionWritable = TemplateVersionWritable;

var templateWritable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(templateWritable, "__esModule", { value: true });
templateWritable.TemplateWritable = void 0;
/**
 *
 * @export
 * @class TemplateWritable
 */
var TemplateWritable = /** @class */ (function () {
    function TemplateWritable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.html) !== "undefined") {
            this.html = input.html;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.engine) !== "undefined") {
            this.engine = input.engine;
        }
    }
    TemplateWritable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return TemplateWritable;
}());
templateWritable.TemplateWritable = TemplateWritable;

var thumbnail = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(thumbnail, "__esModule", { value: true });
thumbnail.Thumbnail = void 0;
/**
 *
 * @export
 * @class Thumbnail
 */
var Thumbnail = /** @class */ (function () {
    function Thumbnail(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.small) !== "undefined") {
            this.small = input.small;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.medium) !== "undefined") {
            this.medium = input.medium;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.large) !== "undefined") {
            this.large = input.large;
        }
    }
    Object.defineProperty(Thumbnail.prototype, "small", {
        get: function () {
            return (this._small || undefined);
        },
        set: function (newValue) {
            if (newValue &&
                !/^https:\/\/(lob-assets|lob-assets-staging)\.com\/(letters|postcards|bank-accounts|checks|self-mailers|cards)\/[a-z]{3,4}_[a-z0-9]{15,16}(\.pdf|_thumb_[a-z]+_[0-9]+\.png)\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$/.test(newValue)) {
                throw new Error("Invalid small provided");
            }
            this._small = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Thumbnail.prototype, "medium", {
        get: function () {
            return (this._medium || undefined);
        },
        set: function (newValue) {
            if (newValue &&
                !/^https:\/\/(lob-assets|lob-assets-staging)\.com\/(letters|postcards|bank-accounts|checks|self-mailers|cards)\/[a-z]{3,4}_[a-z0-9]{15,16}(\.pdf|_thumb_[a-z]+_[0-9]+\.png)\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$/.test(newValue)) {
                throw new Error("Invalid medium provided");
            }
            this._medium = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Thumbnail.prototype, "large", {
        get: function () {
            return (this._large || undefined);
        },
        set: function (newValue) {
            if (newValue &&
                !/^https:\/\/(lob-assets|lob-assets-staging)\.com\/(letters|postcards|bank-accounts|checks|self-mailers|cards)\/[a-z]{3,4}_[a-z0-9]{15,16}(\.pdf|_thumb_[a-z]+_[0-9]+\.png)\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$/.test(newValue)) {
                throw new Error("Invalid large provided");
            }
            this._large = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Thumbnail.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return Thumbnail;
}());
thumbnail.Thumbnail = Thumbnail;

var trackingEventCertified = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrackingEventCertifiedObjectEnum = exports.TrackingEventCertifiedNameEnum = exports.TrackingEventCertifiedTypeEnum = exports.TrackingEventCertified = void 0;
/**
 *
 * @export
 * @class TrackingEventCertified
 */
var TrackingEventCertified = /** @class */ (function () {
    function TrackingEventCertified(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.type) !== "undefined") {
            this.type = input.type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.name) !== "undefined") {
            this.name = input.name;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.details) !== "undefined") {
            this.details = input.details;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.location) !== "undefined") {
            this.location = input.location;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.time) !== "undefined") {
            this.time = input.time;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(TrackingEventCertified.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (newValue) {
            if (newValue && !/^evnt_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    TrackingEventCertified.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return TrackingEventCertified;
}());
exports.TrackingEventCertified = TrackingEventCertified;
(function (TrackingEventCertifiedTypeEnum) {
    TrackingEventCertifiedTypeEnum["Certified"] = "certified";
})(exports.TrackingEventCertifiedTypeEnum || (exports.TrackingEventCertifiedTypeEnum = {}));
(function (TrackingEventCertifiedNameEnum) {
    TrackingEventCertifiedNameEnum["Mailed"] = "Mailed";
    TrackingEventCertifiedNameEnum["InTransit"] = "In Transit";
    TrackingEventCertifiedNameEnum["InLocalArea"] = "In Local Area";
    TrackingEventCertifiedNameEnum["ProcessedForDelivery"] = "Processed for Delivery";
    TrackingEventCertifiedNameEnum["PickupAvailable"] = "Pickup Available";
    TrackingEventCertifiedNameEnum["Delivered"] = "Delivered";
    TrackingEventCertifiedNameEnum["ReRouted"] = "Re-Routed";
    TrackingEventCertifiedNameEnum["ReturnedToSender"] = "Returned to Sender";
    TrackingEventCertifiedNameEnum["Issue"] = "Issue";
})(exports.TrackingEventCertifiedNameEnum || (exports.TrackingEventCertifiedNameEnum = {}));
(function (TrackingEventCertifiedObjectEnum) {
    TrackingEventCertifiedObjectEnum["TrackingEvent"] = "tracking_event";
})(exports.TrackingEventCertifiedObjectEnum || (exports.TrackingEventCertifiedObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(trackingEventCertified));

var trackingEventDetails = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrackingEventDetailsEventEnum = exports.TrackingEventDetails = void 0;
/**
 *
 * @export
 * @class TrackingEventDetails
 */
var TrackingEventDetails = /** @class */ (function () {
    function TrackingEventDetails(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.event) !== "undefined") {
            this.event = input.event;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.description) !== "undefined") {
            this.description = input.description;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.notes) !== "undefined") {
            this.notes = input.notes;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.action_required) !== "undefined") {
            this.action_required = input.action_required;
        }
    }
    TrackingEventDetails.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return TrackingEventDetails;
}());
exports.TrackingEventDetails = TrackingEventDetails;
(function (TrackingEventDetailsEventEnum) {
    TrackingEventDetailsEventEnum["PackageAccepted"] = "package_accepted";
    TrackingEventDetailsEventEnum["PackageArrived"] = "package_arrived";
    TrackingEventDetailsEventEnum["PackageDeparted"] = "package_departed";
    TrackingEventDetailsEventEnum["PackageProcessing"] = "package_processing";
    TrackingEventDetailsEventEnum["PackageProcessed"] = "package_processed";
    TrackingEventDetailsEventEnum["PackageInLocalArea"] = "package_in_local_area";
    TrackingEventDetailsEventEnum["DeliveryScheduled"] = "delivery_scheduled";
    TrackingEventDetailsEventEnum["OutForDelivery"] = "out_for_delivery";
    TrackingEventDetailsEventEnum["PickupAvailable"] = "pickup_available";
    TrackingEventDetailsEventEnum["Delivered"] = "delivered";
    TrackingEventDetailsEventEnum["PackageForwarded"] = "package_forwarded";
    TrackingEventDetailsEventEnum["ReturnedToSender"] = "returned_to_sender";
    TrackingEventDetailsEventEnum["AddressIssue"] = "address_issue";
    TrackingEventDetailsEventEnum["ContactCarrier"] = "contact_carrier";
    TrackingEventDetailsEventEnum["Delayed"] = "delayed";
    TrackingEventDetailsEventEnum["DeliveryAttempted"] = "delivery_attempted";
    TrackingEventDetailsEventEnum["DeliveryRescheduled"] = "delivery_rescheduled";
    TrackingEventDetailsEventEnum["LocationInaccessible"] = "location_inaccessible";
    TrackingEventDetailsEventEnum["NoticeLeft"] = "notice_left";
    TrackingEventDetailsEventEnum["PackageDamaged"] = "package_damaged";
    TrackingEventDetailsEventEnum["PackageDisposed"] = "package_disposed";
    TrackingEventDetailsEventEnum["PackageHeld"] = "package_held";
    TrackingEventDetailsEventEnum["PackageLost"] = "package_lost";
    TrackingEventDetailsEventEnum["PackageUnclaimed"] = "package_unclaimed";
    TrackingEventDetailsEventEnum["PackageUndeliverable"] = "package_undeliverable";
    TrackingEventDetailsEventEnum["RescheduleDelivery"] = "reschedule_delivery";
    TrackingEventDetailsEventEnum["Other"] = "other";
})(exports.TrackingEventDetailsEventEnum || (exports.TrackingEventDetailsEventEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(trackingEventDetails));

var trackingEventNormal = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrackingEventNormalObjectEnum = exports.TrackingEventNormalDetailsEnum = exports.TrackingEventNormalNameEnum = exports.TrackingEventNormalTypeEnum = exports.TrackingEventNormal = void 0;
/**
 *
 * @export
 * @class TrackingEventNormal
 */
var TrackingEventNormal = /** @class */ (function () {
    function TrackingEventNormal(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.type) !== "undefined") {
            this.type = input.type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.name) !== "undefined") {
            this.name = input.name;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.details) !== "undefined") {
            this.details = input.details;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.location) !== "undefined") {
            this.location = input.location;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.time) !== "undefined") {
            this.time = input.time;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_created) !== "undefined") {
            this.date_created = input.date_created;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.date_modified) !== "undefined") {
            this.date_modified = input.date_modified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(TrackingEventNormal.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^evnt_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    TrackingEventNormal.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return TrackingEventNormal;
}());
exports.TrackingEventNormal = TrackingEventNormal;
(function (TrackingEventNormalTypeEnum) {
    TrackingEventNormalTypeEnum["Normal"] = "normal";
})(exports.TrackingEventNormalTypeEnum || (exports.TrackingEventNormalTypeEnum = {}));
(function (TrackingEventNormalNameEnum) {
    TrackingEventNormalNameEnum["InTransit"] = "In Transit";
    TrackingEventNormalNameEnum["InLocalArea"] = "In Local Area";
    TrackingEventNormalNameEnum["ProcessedForDelivery"] = "Processed for Delivery";
    TrackingEventNormalNameEnum["ReRouted"] = "Re-Routed";
    TrackingEventNormalNameEnum["ReturnedToSender"] = "Returned to Sender";
    TrackingEventNormalNameEnum["Mailed"] = "Mailed";
})(exports.TrackingEventNormalNameEnum || (exports.TrackingEventNormalNameEnum = {}));
(function (TrackingEventNormalDetailsEnum) {
    TrackingEventNormalDetailsEnum["Null"] = "null";
})(exports.TrackingEventNormalDetailsEnum || (exports.TrackingEventNormalDetailsEnum = {}));
(function (TrackingEventNormalObjectEnum) {
    TrackingEventNormalObjectEnum["TrackingEvent"] = "tracking_event";
})(exports.TrackingEventNormalObjectEnum || (exports.TrackingEventNormalObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(trackingEventNormal));

var upload = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadModeEnum = exports.Upload = void 0;
/**
 *
 * @export
 * @class Upload
 */
var Upload = /** @class */ (function () {
    function Upload(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.accountId) !== "undefined") {
            this.accountId = input.accountId;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.mode) !== "undefined") {
            this.mode = input.mode;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.failuresUrl) !== "undefined") {
            this.failuresUrl = input.failuresUrl;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.originalFilename) !== "undefined") {
            this.originalFilename = input.originalFilename;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.state) !== "undefined") {
            this.state = input.state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.totalMailpieces) !== "undefined") {
            this.totalMailpieces = input.totalMailpieces;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.failedMailpieces) !== "undefined") {
            this.failedMailpieces = input.failedMailpieces;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.validatedMailpieces) !== "undefined") {
            this.validatedMailpieces = input.validatedMailpieces;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.bytesProcessed) !== "undefined") {
            this.bytesProcessed = input.bytesProcessed;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.dateCreated) !== "undefined") {
            this.dateCreated = input.dateCreated;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.dateModified) !== "undefined") {
            this.dateModified = input.dateModified;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.requiredAddressColumnMapping) !== "undefined") {
            this.requiredAddressColumnMapping = input.requiredAddressColumnMapping;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.optionalAddressColumnMapping) !== "undefined") {
            this.optionalAddressColumnMapping = input.optionalAddressColumnMapping;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.mergeVariableColumnMapping) !== "undefined") {
            this.mergeVariableColumnMapping = input.mergeVariableColumnMapping;
        }
    }
    Object.defineProperty(Upload.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (newValue) {
            if (newValue && !/^upl_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Upload.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return Upload;
}());
exports.Upload = Upload;
(function (UploadModeEnum) {
    UploadModeEnum["Test"] = "test";
    UploadModeEnum["Live"] = "live";
})(exports.UploadModeEnum || (exports.UploadModeEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(upload));

var uploadCreateExport = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadCreateExportMessageEnum = exports.UploadCreateExport = void 0;
/**
 *
 * @export
 * @class UploadCreateExport
 */
var UploadCreateExport = /** @class */ (function () {
    function UploadCreateExport(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.message) !== "undefined") {
            this.message = input.message;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.exportId) !== "undefined") {
            this.exportId = input.exportId;
        }
    }
    UploadCreateExport.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return UploadCreateExport;
}());
exports.UploadCreateExport = UploadCreateExport;
(function (UploadCreateExportMessageEnum) {
    UploadCreateExportMessageEnum["ExportIsProcessing"] = "Export is processing.";
})(exports.UploadCreateExportMessageEnum || (exports.UploadCreateExportMessageEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(uploadCreateExport));

var uploadFile = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadFileMessageEnum = exports.UploadFile = void 0;
/**
 *
 * @export
 * @class UploadFile
 */
var UploadFile = /** @class */ (function () {
    function UploadFile(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.message) !== "undefined") {
            this.message = input.message;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.filename) !== "undefined") {
            this.filename = input.filename;
        }
    }
    UploadFile.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return UploadFile;
}());
exports.UploadFile = UploadFile;
(function (UploadFileMessageEnum) {
    UploadFileMessageEnum["FileUploadedSuccessfully"] = "File uploaded successfully";
})(exports.UploadFileMessageEnum || (exports.UploadFileMessageEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(uploadFile));

var uploadState = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadState = void 0;
(function (UploadState) {
    UploadState["Preprocessing"] = "Preprocessing";
    UploadState["Draft"] = "Draft";
    UploadState["ReadyForValidation"] = "Ready for Validation";
    UploadState["Validating"] = "Validating";
    UploadState["Scheduled"] = "Scheduled";
    UploadState["Cancelled"] = "Cancelled";
    UploadState["Errored"] = "Errored";
})(exports.UploadState || (exports.UploadState = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(uploadState));

var uploadUpdatable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(uploadUpdatable, "__esModule", { value: true });
uploadUpdatable.UploadUpdatable = void 0;
/**
 *
 * @export
 * @class UploadUpdatable
 */
var UploadUpdatable = /** @class */ (function () {
    function UploadUpdatable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.originalFilename) !== "undefined") {
            this.originalFilename = input.originalFilename;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.requiredAddressColumnMapping) !== "undefined") {
            this.requiredAddressColumnMapping = input.requiredAddressColumnMapping;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.optionalAddressColumnMapping) !== "undefined") {
            this.optionalAddressColumnMapping = input.optionalAddressColumnMapping;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.mergeVariableColumnMapping) !== "undefined") {
            this.mergeVariableColumnMapping = input.mergeVariableColumnMapping;
        }
    }
    UploadUpdatable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return UploadUpdatable;
}());
uploadUpdatable.UploadUpdatable = UploadUpdatable;

var uploadWritable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(uploadWritable, "__esModule", { value: true });
uploadWritable.UploadWritable = void 0;
/**
 *
 * @export
 * @class UploadWritable
 */
var UploadWritable = /** @class */ (function () {
    function UploadWritable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.campaignId) !== "undefined") {
            this.campaignId = input.campaignId;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.requiredAddressColumnMapping) !== "undefined") {
            this.requiredAddressColumnMapping = input.requiredAddressColumnMapping;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.optionalAddressColumnMapping) !== "undefined") {
            this.optionalAddressColumnMapping = input.optionalAddressColumnMapping;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.metadata) !== "undefined") {
            this.metadata = input.metadata;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.mergeVariableColumnMapping) !== "undefined") {
            this.mergeVariableColumnMapping = input.mergeVariableColumnMapping;
        }
    }
    UploadWritable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return UploadWritable;
}());
uploadWritable.UploadWritable = UploadWritable;

var uploadsMetadata = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(uploadsMetadata, "__esModule", { value: true });
uploadsMetadata.UploadsMetadata = void 0;
/**
 * The list of column headers in your file as an array that you want as metadata associated with each mailpiece. See our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#required-columns-2\" target=\"_blank\">Campaign Audience Guide</a> for additional details.
 * @export
 * @class UploadsMetadata
 */
var UploadsMetadata = /** @class */ (function () {
    function UploadsMetadata(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.columns) !== "undefined") {
            this.columns = input.columns;
        }
    }
    UploadsMetadata.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return UploadsMetadata;
}());
uploadsMetadata.UploadsMetadata = UploadsMetadata;

var usAutocompletions = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UsAutocompletionsObjectEnum = exports.UsAutocompletions = void 0;
/**
 *
 * @export
 * @class UsAutocompletions
 */
var UsAutocompletions = /** @class */ (function () {
    function UsAutocompletions(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.suggestions) !== "undefined") {
            this.suggestions = input.suggestions;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(UsAutocompletions.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^us_auto_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    UsAutocompletions.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return UsAutocompletions;
}());
exports.UsAutocompletions = UsAutocompletions;
(function (UsAutocompletionsObjectEnum) {
    UsAutocompletionsObjectEnum["UsAutocompletion"] = "us_autocompletion";
})(exports.UsAutocompletionsObjectEnum || (exports.UsAutocompletionsObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(usAutocompletions));

var usAutocompletionsWritable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(usAutocompletionsWritable, "__esModule", { value: true });
usAutocompletionsWritable.UsAutocompletionsWritable = void 0;
/**
 *
 * @export
 * @class UsAutocompletionsWritable
 */
var UsAutocompletionsWritable = /** @class */ (function () {
    function UsAutocompletionsWritable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.address_prefix) !== "undefined") {
            this.address_prefix = input.address_prefix;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.city) !== "undefined") {
            this.city = input.city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.state) !== "undefined") {
            this.state = input.state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.zip_code) !== "undefined") {
            this.zip_code = input.zip_code;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.geo_ip_sort) !== "undefined") {
            this.geo_ip_sort = input.geo_ip_sort;
        }
    }
    UsAutocompletionsWritable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return UsAutocompletionsWritable;
}());
usAutocompletionsWritable.UsAutocompletionsWritable = UsAutocompletionsWritable;

var usComponents = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UsComponentsCarrierRouteTypeEnum = exports.UsComponentsRecordTypeEnum = exports.UsComponentsAddressTypeEnum = exports.UsComponentsStreetPostdirectionEnum = exports.UsComponentsStreetPredirectionEnum = exports.UsComponents = void 0;
/**
 * A nested object containing a breakdown of each component of an address.
 * @export
 * @class UsComponents
 */
var UsComponents = /** @class */ (function () {
    function UsComponents(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.primary_number) !== "undefined") {
            this.primary_number = input.primary_number;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.street_predirection) !== "undefined") {
            this.street_predirection = input.street_predirection;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.street_name) !== "undefined") {
            this.street_name = input.street_name;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.street_suffix) !== "undefined") {
            this.street_suffix = input.street_suffix;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.street_postdirection) !== "undefined") {
            this.street_postdirection = input.street_postdirection;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.secondary_designator) !== "undefined") {
            this.secondary_designator = input.secondary_designator;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.secondary_number) !== "undefined") {
            this.secondary_number = input.secondary_number;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.pmb_designator) !== "undefined") {
            this.pmb_designator = input.pmb_designator;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.pmb_number) !== "undefined") {
            this.pmb_number = input.pmb_number;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.extra_secondary_designator) !== "undefined") {
            this.extra_secondary_designator = input.extra_secondary_designator;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.extra_secondary_number) !== "undefined") {
            this.extra_secondary_number = input.extra_secondary_number;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.city) !== "undefined") {
            this.city = input.city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.state) !== "undefined") {
            this.state = input.state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.zip_code) !== "undefined") {
            this.zip_code = input.zip_code;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.zip_code_plus_4) !== "undefined") {
            this.zip_code_plus_4 = input.zip_code_plus_4;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.zip_code_type) !== "undefined") {
            this.zip_code_type = input.zip_code_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.delivery_point_barcode) !== "undefined") {
            this.delivery_point_barcode = input.delivery_point_barcode;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.address_type) !== "undefined") {
            this.address_type = input.address_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.record_type) !== "undefined") {
            this.record_type = input.record_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.default_building_address) !== "undefined") {
            this.default_building_address = input.default_building_address;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.county) !== "undefined") {
            this.county = input.county;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.county_fips) !== "undefined") {
            this.county_fips = input.county_fips;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.carrier_route) !== "undefined") {
            this.carrier_route = input.carrier_route;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.carrier_route_type) !== "undefined") {
            this.carrier_route_type = input.carrier_route_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.latitude) !== "undefined") {
            this.latitude = input.latitude;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.longitude) !== "undefined") {
            this.longitude = input.longitude;
        }
    }
    Object.defineProperty(UsComponents.prototype, "zip_code", {
        get: function () {
            return this._zip_code;
        },
        set: function (newValue) {
            if (newValue && !/^\d{5}$/.test(newValue)) {
                throw new Error("Invalid zip_code provided");
            }
            this._zip_code = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(UsComponents.prototype, "zip_code_plus_4", {
        get: function () {
            return this._zip_code_plus_4;
        },
        set: function (newValue) {
            if (newValue && !/^\d{4}$/.test(newValue)) {
                throw new Error("Invalid zip_code_plus_4 provided");
            }
            this._zip_code_plus_4 = newValue;
        },
        enumerable: false,
        configurable: true
    });
    UsComponents.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return UsComponents;
}());
exports.UsComponents = UsComponents;
(function (UsComponentsStreetPredirectionEnum) {
    UsComponentsStreetPredirectionEnum["N"] = "N";
    UsComponentsStreetPredirectionEnum["S"] = "S";
    UsComponentsStreetPredirectionEnum["E"] = "E";
    UsComponentsStreetPredirectionEnum["W"] = "W";
    UsComponentsStreetPredirectionEnum["Ne"] = "NE";
    UsComponentsStreetPredirectionEnum["Sw"] = "SW";
    UsComponentsStreetPredirectionEnum["Se"] = "SE";
    UsComponentsStreetPredirectionEnum["Nw"] = "NW";
    UsComponentsStreetPredirectionEnum["Empty"] = "";
})(exports.UsComponentsStreetPredirectionEnum || (exports.UsComponentsStreetPredirectionEnum = {}));
(function (UsComponentsStreetPostdirectionEnum) {
    UsComponentsStreetPostdirectionEnum["N"] = "N";
    UsComponentsStreetPostdirectionEnum["S"] = "S";
    UsComponentsStreetPostdirectionEnum["E"] = "E";
    UsComponentsStreetPostdirectionEnum["W"] = "W";
    UsComponentsStreetPostdirectionEnum["Ne"] = "NE";
    UsComponentsStreetPostdirectionEnum["Sw"] = "SW";
    UsComponentsStreetPostdirectionEnum["Se"] = "SE";
    UsComponentsStreetPostdirectionEnum["Nw"] = "NW";
    UsComponentsStreetPostdirectionEnum["Empty"] = "";
})(exports.UsComponentsStreetPostdirectionEnum || (exports.UsComponentsStreetPostdirectionEnum = {}));
(function (UsComponentsAddressTypeEnum) {
    UsComponentsAddressTypeEnum["Residential"] = "residential";
    UsComponentsAddressTypeEnum["Commercial"] = "commercial";
    UsComponentsAddressTypeEnum["Empty"] = "";
})(exports.UsComponentsAddressTypeEnum || (exports.UsComponentsAddressTypeEnum = {}));
(function (UsComponentsRecordTypeEnum) {
    UsComponentsRecordTypeEnum["Street"] = "street";
    UsComponentsRecordTypeEnum["Highrise"] = "highrise";
    UsComponentsRecordTypeEnum["Firm"] = "firm";
    UsComponentsRecordTypeEnum["PoBox"] = "po_box";
    UsComponentsRecordTypeEnum["RuralRoute"] = "rural_route";
    UsComponentsRecordTypeEnum["GeneralDelivery"] = "general_delivery";
    UsComponentsRecordTypeEnum["Empty"] = "";
})(exports.UsComponentsRecordTypeEnum || (exports.UsComponentsRecordTypeEnum = {}));
(function (UsComponentsCarrierRouteTypeEnum) {
    UsComponentsCarrierRouteTypeEnum["CityDelivery"] = "city_delivery";
    UsComponentsCarrierRouteTypeEnum["RuralRoute"] = "rural_route";
    UsComponentsCarrierRouteTypeEnum["HighwayContract"] = "highway_contract";
    UsComponentsCarrierRouteTypeEnum["PoBox"] = "po_box";
    UsComponentsCarrierRouteTypeEnum["GeneralDelivery"] = "general_delivery";
    UsComponentsCarrierRouteTypeEnum["Empty"] = "";
})(exports.UsComponentsCarrierRouteTypeEnum || (exports.UsComponentsCarrierRouteTypeEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(usComponents));

var usVerification = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UsVerificationObjectEnum = exports.UsVerificationValidAddressEnum = exports.UsVerificationDeliverabilityEnum = exports.UsVerification = void 0;
/**
 *
 * @export
 * @class UsVerification
 */
var UsVerification = /** @class */ (function () {
    function UsVerification(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.recipient) !== "undefined") {
            this.recipient = input.recipient;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.primary_line) !== "undefined") {
            this.primary_line = input.primary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.secondary_line) !== "undefined") {
            this.secondary_line = input.secondary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.urbanization) !== "undefined") {
            this.urbanization = input.urbanization;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.last_line) !== "undefined") {
            this.last_line = input.last_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deliverability) !== "undefined") {
            this.deliverability = input.deliverability;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.valid_address) !== "undefined") {
            this.valid_address = input.valid_address;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.components) !== "undefined") {
            this.components = input.components;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deliverability_analysis) !== "undefined") {
            this.deliverability_analysis = input.deliverability_analysis;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.lob_confidence_score) !== "undefined") {
            this.lob_confidence_score = input.lob_confidence_score;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(UsVerification.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^us_ver_[a-zA-Z0-9_]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    UsVerification.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return UsVerification;
}());
exports.UsVerification = UsVerification;
(function (UsVerificationDeliverabilityEnum) {
    UsVerificationDeliverabilityEnum["Deliverable"] = "deliverable";
    UsVerificationDeliverabilityEnum["DeliverableUnnecessaryUnit"] = "deliverable_unnecessary_unit";
    UsVerificationDeliverabilityEnum["DeliverableIncorrectUnit"] = "deliverable_incorrect_unit";
    UsVerificationDeliverabilityEnum["DeliverableMissingUnit"] = "deliverable_missing_unit";
    UsVerificationDeliverabilityEnum["Undeliverable"] = "undeliverable";
})(exports.UsVerificationDeliverabilityEnum || (exports.UsVerificationDeliverabilityEnum = {}));
(function (UsVerificationValidAddressEnum) {
    UsVerificationValidAddressEnum["True"] = "true";
    UsVerificationValidAddressEnum["False"] = "false";
})(exports.UsVerificationValidAddressEnum || (exports.UsVerificationValidAddressEnum = {}));
(function (UsVerificationObjectEnum) {
    UsVerificationObjectEnum["UsVerification"] = "us_verification";
})(exports.UsVerificationObjectEnum || (exports.UsVerificationObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(usVerification));

var usVerificationOrError = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UsVerificationOrErrorObjectEnum = exports.UsVerificationOrErrorDeliverabilityEnum = exports.UsVerificationOrError = void 0;
/**
 * A model used to represent an entry in a result list where the entry can either be a us_verification or an Error. The SDK will perform necessary casting into the correct corresponding type.
 * @export
 * @class UsVerificationOrError
 */
var UsVerificationOrError = /** @class */ (function () {
    function UsVerificationOrError(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.recipient) !== "undefined") {
            this.recipient = input.recipient;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.primary_line) !== "undefined") {
            this.primary_line = input.primary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.secondary_line) !== "undefined") {
            this.secondary_line = input.secondary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.urbanization) !== "undefined") {
            this.urbanization = input.urbanization;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.last_line) !== "undefined") {
            this.last_line = input.last_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deliverability) !== "undefined") {
            this.deliverability = input.deliverability;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.components) !== "undefined") {
            this.components = input.components;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.deliverability_analysis) !== "undefined") {
            this.deliverability_analysis = input.deliverability_analysis;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.lob_confidence_score) !== "undefined") {
            this.lob_confidence_score = input.lob_confidence_score;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.error) !== "undefined") {
            this.error = input.error;
        }
    }
    Object.defineProperty(UsVerificationOrError.prototype, "id", {
        get: function () {
            return (this._id || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^us_ver_[a-zA-Z0-9_]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    UsVerificationOrError.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return UsVerificationOrError;
}());
exports.UsVerificationOrError = UsVerificationOrError;
(function (UsVerificationOrErrorDeliverabilityEnum) {
    UsVerificationOrErrorDeliverabilityEnum["Deliverable"] = "deliverable";
    UsVerificationOrErrorDeliverabilityEnum["DeliverableUnnecessaryUnit"] = "deliverable_unnecessary_unit";
    UsVerificationOrErrorDeliverabilityEnum["DeliverableIncorrectUnit"] = "deliverable_incorrect_unit";
    UsVerificationOrErrorDeliverabilityEnum["DeliverableMissingUnit"] = "deliverable_missing_unit";
    UsVerificationOrErrorDeliverabilityEnum["Undeliverable"] = "undeliverable";
})(exports.UsVerificationOrErrorDeliverabilityEnum || (exports.UsVerificationOrErrorDeliverabilityEnum = {}));
(function (UsVerificationOrErrorObjectEnum) {
    UsVerificationOrErrorObjectEnum["UsVerification"] = "us_verification";
})(exports.UsVerificationOrErrorObjectEnum || (exports.UsVerificationOrErrorObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(usVerificationOrError));

var usVerifications = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(usVerifications, "__esModule", { value: true });
usVerifications.UsVerifications = void 0;
var index_1 = models;
/**
 *
 * @export
 * @class UsVerifications
 */
var UsVerifications = /** @class */ (function () {
    function UsVerifications(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.addresses) !== "undefined") {
            this.addresses = input.addresses;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.errors) !== "undefined") {
            this.errors = input.errors;
        }
    }
    Object.defineProperty(UsVerifications.prototype, "addresses", {
        get: function () {
            return this._addresses || [];
        },
        set: function (items) {
            if (!this._addresses) {
                this._addresses = [];
            }
            if (!this._error_addresses) {
                this._error_addresses = [];
            }
            for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
                var item = items_1[_i];
                if (item.id) {
                    this._addresses.push(new index_1.UsVerification(item));
                }
                if (item.error) {
                    this._error_addresses.push(new index_1.BulkError(item));
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(UsVerifications.prototype, "errorAddresses", {
        get: function () {
            return this._error_addresses || [];
        },
        enumerable: false,
        configurable: true
    });
    UsVerifications.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return UsVerifications;
}());
usVerifications.UsVerifications = UsVerifications;

var usVerificationsWritable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(usVerificationsWritable, "__esModule", { value: true });
usVerificationsWritable.UsVerificationsWritable = void 0;
/**
 *
 * @export
 * @class UsVerificationsWritable
 */
var UsVerificationsWritable = /** @class */ (function () {
    function UsVerificationsWritable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.address) !== "undefined") {
            this.address = input.address;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.recipient) !== "undefined") {
            this.recipient = input.recipient;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.primary_line) !== "undefined") {
            this.primary_line = input.primary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.secondary_line) !== "undefined") {
            this.secondary_line = input.secondary_line;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.urbanization) !== "undefined") {
            this.urbanization = input.urbanization;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.city) !== "undefined") {
            this.city = input.city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.state) !== "undefined") {
            this.state = input.state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.zip_code) !== "undefined") {
            this.zip_code = input.zip_code;
        }
    }
    Object.defineProperty(UsVerificationsWritable.prototype, "zip_code", {
        get: function () {
            return (this._zip_code || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^\d{5}((-)?\d{4})?$/.test(newValue)) {
                throw new Error("Invalid zip_code provided");
            }
            this._zip_code = newValue;
        },
        enumerable: false,
        configurable: true
    });
    UsVerificationsWritable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return UsVerificationsWritable;
}());
usVerificationsWritable.UsVerificationsWritable = UsVerificationsWritable;

var validationError = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(validationError, "__esModule", { value: true });
validationError.ValidationError = void 0;
/**
 *
 * @export
 * @class ValidationError
 */
var ValidationError = /** @class */ (function () {
    function ValidationError(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.loc) !== "undefined") {
            this.loc = input.loc;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.msg) !== "undefined") {
            this.msg = input.msg;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.type) !== "undefined") {
            this.type = input.type;
        }
    }
    ValidationError.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return ValidationError;
}());
validationError.ValidationError = ValidationError;

var zip = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZipObjectEnum = exports.Zip = void 0;
/**
 *
 * @export
 * @class Zip
 */
var Zip = /** @class */ (function () {
    function Zip(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.zip_code) !== "undefined") {
            this.zip_code = input.zip_code;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.id) !== "undefined") {
            this.id = input.id;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.cities) !== "undefined") {
            this.cities = input.cities;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.zip_code_type) !== "undefined") {
            this.zip_code_type = input.zip_code_type;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.object) !== "undefined") {
            this.object = input.object;
        }
    }
    Object.defineProperty(Zip.prototype, "zip_code", {
        get: function () {
            return (this._zip_code || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^\d{5}$/.test(newValue)) {
                throw new Error("Invalid zip_code provided");
            }
            this._zip_code = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Zip.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (newValue) {
            if (newValue && !/^us_zip_[a-zA-Z0-9]+$/.test(newValue)) {
                throw new Error("Invalid id provided");
            }
            this._id = newValue;
        },
        enumerable: false,
        configurable: true
    });
    Zip.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return Zip;
}());
exports.Zip = Zip;
(function (ZipObjectEnum) {
    ZipObjectEnum["UsZipLookup"] = "us_zip_lookup";
})(exports.ZipObjectEnum || (exports.ZipObjectEnum = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(zip));

var zipCodeType = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZipCodeType = void 0;
(function (ZipCodeType) {
    ZipCodeType["Standard"] = "standard";
    ZipCodeType["PoBox"] = "po_box";
    ZipCodeType["Unique"] = "unique";
    ZipCodeType["Military"] = "military";
    ZipCodeType["Empty"] = "";
})(exports.ZipCodeType || (exports.ZipCodeType = {}));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(zipCodeType));

var zipEditable = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(zipEditable, "__esModule", { value: true });
zipEditable.ZipEditable = void 0;
/**
 *
 * @export
 * @class ZipEditable
 */
var ZipEditable = /** @class */ (function () {
    function ZipEditable(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.zip_code) !== "undefined") {
            this.zip_code = input.zip_code;
        }
    }
    Object.defineProperty(ZipEditable.prototype, "zip_code", {
        get: function () {
            return (this._zip_code || undefined);
        },
        set: function (newValue) {
            if (newValue && !/^\d{5}$/.test(newValue)) {
                throw new Error("Invalid zip_code provided");
            }
            this._zip_code = newValue;
        },
        enumerable: false,
        configurable: true
    });
    ZipEditable.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return ZipEditable;
}());
zipEditable.ZipEditable = ZipEditable;

var zipLookupCity = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(zipLookupCity, "__esModule", { value: true });
zipLookupCity.ZipLookupCity = void 0;
/**
 *
 * @export
 * @class ZipLookupCity
 */
var ZipLookupCity = /** @class */ (function () {
    function ZipLookupCity(input) {
        if (typeof (input === null || input === void 0 ? void 0 : input.city) !== "undefined") {
            this.city = input.city;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.state) !== "undefined") {
            this.state = input.state;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.county) !== "undefined") {
            this.county = input.county;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.county_fips) !== "undefined") {
            this.county_fips = input.county_fips;
        }
        if (typeof (input === null || input === void 0 ? void 0 : input.preferred) !== "undefined") {
            this.preferred = input.preferred;
        }
    }
    ZipLookupCity.prototype.toJSON = function () {
        var _a;
        var out = {};
        for (var _i = 0, _b = Object.entries(this); _i < _b.length; _i++) {
            var _c = _b[_i], key = _c[0], value = _c[1];
            out = Object.assign({}, out, (_a = {},
                _a[key[0] === "_" ? key.substr(1, key.length) : key] = value,
                _a));
        }
        return out;
    };
    return ZipLookupCity;
}());
zipLookupCity.ZipLookupCity = ZipLookupCity;

(function (exports) {
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require$$0__default["default"];
tslib_1.__exportStar(address, exports);
tslib_1.__exportStar(addressDeletion, exports);
tslib_1.__exportStar(addressDomestic, exports);
tslib_1.__exportStar(addressDomesticExpanded, exports);
tslib_1.__exportStar(addressEditable, exports);
tslib_1.__exportStar(addressList, exports);
tslib_1.__exportStar(bankAccount, exports);
tslib_1.__exportStar(bankAccountDeletion, exports);
tslib_1.__exportStar(bankAccountList, exports);
tslib_1.__exportStar(bankAccountVerify, exports);
tslib_1.__exportStar(bankAccountWritable, exports);
tslib_1.__exportStar(bankTypeEnum, exports);
tslib_1.__exportStar(billingGroup, exports);
tslib_1.__exportStar(billingGroupEditable, exports);
tslib_1.__exportStar(billingGroupList, exports);
tslib_1.__exportStar(buckslip, exports);
tslib_1.__exportStar(buckslipDeletion, exports);
tslib_1.__exportStar(buckslipEditable, exports);
tslib_1.__exportStar(buckslipOrder, exports);
tslib_1.__exportStar(buckslipOrderEditable, exports);
tslib_1.__exportStar(buckslipOrdersList, exports);
tslib_1.__exportStar(buckslipUpdatable, exports);
tslib_1.__exportStar(buckslipsList, exports);
tslib_1.__exportStar(bulkError, exports);
tslib_1.__exportStar(bulkErrorProperties, exports);
tslib_1.__exportStar(campaign, exports);
tslib_1.__exportStar(campaignCreative, exports);
tslib_1.__exportStar(campaignDeletion, exports);
tslib_1.__exportStar(campaignUpdatable, exports);
tslib_1.__exportStar(campaignWritable, exports);
tslib_1.__exportStar(campaignsList, exports);
tslib_1.__exportStar(card, exports);
tslib_1.__exportStar(cardDeletion, exports);
tslib_1.__exportStar(cardEditable, exports);
tslib_1.__exportStar(cardList, exports);
tslib_1.__exportStar(cardOrder, exports);
tslib_1.__exportStar(cardOrderEditable, exports);
tslib_1.__exportStar(cardOrderList, exports);
tslib_1.__exportStar(cardUpdatable, exports);
tslib_1.__exportStar(check, exports);
tslib_1.__exportStar(checkDeletion, exports);
tslib_1.__exportStar(checkEditable, exports);
tslib_1.__exportStar(checkList, exports);
tslib_1.__exportStar(chkUseType, exports);
tslib_1.__exportStar(cmpScheduleType, exports);
tslib_1.__exportStar(cmpUseType, exports);
tslib_1.__exportStar(countryExtended, exports);
tslib_1.__exportStar(countryExtendedExpanded, exports);
tslib_1.__exportStar(creativePatch, exports);
tslib_1.__exportStar(creativeResponse, exports);
tslib_1.__exportStar(creativeWritable, exports);
tslib_1.__exportStar(customEnvelopeReturned, exports);
tslib_1.__exportStar(deliverabilityAnalysis, exports);
tslib_1.__exportStar(dpvFootnote, exports);
tslib_1.__exportStar(engineHtml, exports);
tslib_1.__exportStar(eventType, exports);
tslib_1.__exportStar(events, exports);
tslib_1.__exportStar(_export, exports);
tslib_1.__exportStar(exportModel, exports);
tslib_1.__exportStar(geocodeAddresses, exports);
tslib_1.__exportStar(geocodeComponents, exports);
tslib_1.__exportStar(httpvalidationError, exports);
tslib_1.__exportStar(identityValidation, exports);
tslib_1.__exportStar(inlineObject, exports);
tslib_1.__exportStar(intlAutocompletions, exports);
tslib_1.__exportStar(intlAutocompletionsWritable, exports);
tslib_1.__exportStar(intlComponents, exports);
tslib_1.__exportStar(intlSuggestions, exports);
tslib_1.__exportStar(intlVerification, exports);
tslib_1.__exportStar(intlVerificationOrError, exports);
tslib_1.__exportStar(intlVerificationWritable, exports);
tslib_1.__exportStar(intlVerifications, exports);
tslib_1.__exportStar(intlVerificationsPayload, exports);
tslib_1.__exportStar(letter, exports);
tslib_1.__exportStar(letterCustomEnvelope, exports);
tslib_1.__exportStar(letterDeletion, exports);
tslib_1.__exportStar(letterDetailsReturned, exports);
tslib_1.__exportStar(letterDetailsWritable, exports);
tslib_1.__exportStar(letterEditable, exports);
tslib_1.__exportStar(letterList, exports);
tslib_1.__exportStar(lobConfidenceScore, exports);
tslib_1.__exportStar(lobError, exports);
tslib_1.__exportStar(location, exports);
tslib_1.__exportStar(locationAnalysis, exports);
tslib_1.__exportStar(ltrUseType, exports);
tslib_1.__exportStar(mailType, exports);
tslib_1.__exportStar(multiLineAddress, exports);
tslib_1.__exportStar(multipleComponents, exports);
tslib_1.__exportStar(multipleComponentsIntl, exports);
tslib_1.__exportStar(multipleComponentsList, exports);
tslib_1.__exportStar(optionalAddressColumnMapping, exports);
tslib_1.__exportStar(placeholderModel, exports);
tslib_1.__exportStar(postcard, exports);
tslib_1.__exportStar(postcardDeletion, exports);
tslib_1.__exportStar(postcardDetailsReturned, exports);
tslib_1.__exportStar(postcardDetailsWritable, exports);
tslib_1.__exportStar(postcardEditable, exports);
tslib_1.__exportStar(postcardList, exports);
tslib_1.__exportStar(postcardSize, exports);
tslib_1.__exportStar(pscUseType, exports);
tslib_1.__exportStar(qrCode, exports);
tslib_1.__exportStar(requiredAddressColumnMapping, exports);
tslib_1.__exportStar(returnEnvelope, exports);
tslib_1.__exportStar(reverseGeocode, exports);
tslib_1.__exportStar(selfMailer, exports);
tslib_1.__exportStar(selfMailerDeletion, exports);
tslib_1.__exportStar(selfMailerEditable, exports);
tslib_1.__exportStar(selfMailerList, exports);
tslib_1.__exportStar(selfMailerSize, exports);
tslib_1.__exportStar(sfmUseType, exports);
tslib_1.__exportStar(sortBy, exports);
tslib_1.__exportStar(sortBy1, exports);
tslib_1.__exportStar(sortBy2, exports);
tslib_1.__exportStar(sortBy3, exports);
tslib_1.__exportStar(sortByDateModified, exports);
tslib_1.__exportStar(suggestions, exports);
tslib_1.__exportStar(template, exports);
tslib_1.__exportStar(templateDeletion, exports);
tslib_1.__exportStar(templateList, exports);
tslib_1.__exportStar(templateUpdate, exports);
tslib_1.__exportStar(templateVersion, exports);
tslib_1.__exportStar(templateVersionDeletion, exports);
tslib_1.__exportStar(templateVersionList, exports);
tslib_1.__exportStar(templateVersionUpdatable, exports);
tslib_1.__exportStar(templateVersionWritable, exports);
tslib_1.__exportStar(templateWritable, exports);
tslib_1.__exportStar(thumbnail, exports);
tslib_1.__exportStar(trackingEventCertified, exports);
tslib_1.__exportStar(trackingEventDetails, exports);
tslib_1.__exportStar(trackingEventNormal, exports);
tslib_1.__exportStar(upload, exports);
tslib_1.__exportStar(uploadCreateExport, exports);
tslib_1.__exportStar(uploadFile, exports);
tslib_1.__exportStar(uploadState, exports);
tslib_1.__exportStar(uploadUpdatable, exports);
tslib_1.__exportStar(uploadWritable, exports);
tslib_1.__exportStar(uploadsMetadata, exports);
tslib_1.__exportStar(usAutocompletions, exports);
tslib_1.__exportStar(usAutocompletionsWritable, exports);
tslib_1.__exportStar(usComponents, exports);
tslib_1.__exportStar(usVerification, exports);
tslib_1.__exportStar(usVerificationOrError, exports);
tslib_1.__exportStar(usVerifications, exports);
tslib_1.__exportStar(usVerificationsWritable, exports);
tslib_1.__exportStar(validationError, exports);
tslib_1.__exportStar(zip, exports);
tslib_1.__exportStar(zipCodeType, exports);
tslib_1.__exportStar(zipEditable, exports);
tslib_1.__exportStar(zipLookupCity, exports);

}(models));

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressesApi = exports.AddressesApiFp = exports.AddressesApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
// @ts-ignore
var models_2 = models;
// @ts-ignore
var models_3 = models;
/**
 * AddressesApi - axios parameter creator
 * @export
 */
var AddressesApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Creates a new address given information
         * @summary create
         * @param {AddressEditable} addressEditable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addressCreate: function (addressEditable, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'addressEditable' is not null or undefined
                    (0, common_1.assertParamExists)("addressCreate", "addressEditable", addressEditable);
                    localVarPath = "/addresses";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(addressEditable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Deletes the details of an existing address.
         * @summary delete
         * @param {string} adrId id of the address
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addressDelete: function (adrId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'adrId' is not null or undefined
                    (0, common_1.assertParamExists)("addressDelete", "adrId", adrId);
                    localVarPath = "/addresses/{adr_id}".replace("{".concat("adr_id", "}"), encodeURIComponent(String(adrId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "DELETE" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Retrieves the details of an existing address.
         * @summary get
         * @param {string} adrId id of the address
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addressRetrieve: function (adrId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'adrId' is not null or undefined
                    (0, common_1.assertParamExists)("addressRetrieve", "adrId", adrId);
                    localVarPath = "/addresses/{adr_id}".replace("{".concat("adr_id", "}"), encodeURIComponent(String(adrId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Returns a list of your addresses.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addressesList: function (limit, before, after, include, dateCreated, metadata, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    localVarPath = "/addresses";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (limit !== undefined) {
                        localVarQueryParameter["limit"] = limit;
                    }
                    if (before !== undefined) {
                        localVarQueryParameter["before"] = before;
                    }
                    if (after !== undefined) {
                        localVarQueryParameter["after"] = after;
                    }
                    if (include) {
                        localVarQueryParameter["include"] = (0, common_1.valueToString)(include);
                    }
                    if (dateCreated !== undefined) {
                        localVarQueryParameter["date_created"] = (0, common_1.valueToString)(dateCreated);
                    }
                    if (metadata !== undefined) {
                        localVarQueryParameter["metadata"] = (0, common_1.valueToString)(metadata);
                    }
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.AddressesApiAxiosParamCreator = AddressesApiAxiosParamCreator;
/**
 * AddressesApi - functional programming interface
 * @export
 */
var AddressesApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.AddressesApiAxiosParamCreator)(configuration);
    return {
        /**
         * Creates a new address given information
         * @summary create
         * @param {AddressEditable} addressEditable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addressCreate: function (addressEditable, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.addressCreate(addressEditable, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Deletes the details of an existing address.
         * @summary delete
         * @param {string} adrId id of the address
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addressDelete: function (adrId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.addressDelete(adrId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Retrieves the details of an existing address.
         * @summary get
         * @param {string} adrId id of the address
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addressRetrieve: function (adrId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.addressRetrieve(adrId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Returns a list of your addresses.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addressesList: function (limit, before, after, include, dateCreated, metadata, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.addressesList(limit, before, after, include, dateCreated, metadata, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.AddressesApiFp = AddressesApiFp;
/**
 * AddressesApi - object-oriented interface
 * @export
 * @class AddressesApi
 * @extends {BaseAPI}
 */
var AddressesApi = /** @class */ (function (_super) {
    tslib_1.__extends(AddressesApi, _super);
    function AddressesApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Creates a new address given information
     * @summary create
     * @param {AddressEditable} addressEditable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressesApi
     */
    AddressesApi.prototype.create = function (addressEditable, options) {
        var _this = this;
        return (0, exports.AddressesApiFp)(this.configuration)
            .addressCreate(addressEditable, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.Address(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Deletes the details of an existing address.
     * @summary delete
     * @param {string} adrId id of the address
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressesApi
     */
    AddressesApi.prototype.delete = function (adrId, options) {
        var _this = this;
        return (0, exports.AddressesApiFp)(this.configuration)
            .addressDelete(adrId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_2.AddressDeletion(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Retrieves the details of an existing address.
     * @summary get
     * @param {string} adrId id of the address
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressesApi
     */
    AddressesApi.prototype.get = function (adrId, options) {
        var _this = this;
        return (0, exports.AddressesApiFp)(this.configuration)
            .addressRetrieve(adrId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.Address(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Returns a list of your addresses.
     * @summary list
     * @param {number} [limit] How many results to return.
     * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
     * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
     * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
     * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
     * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressesApi
     */
    AddressesApi.prototype.list = function (limit, before, after, include, dateCreated, metadata, options) {
        var _this = this;
        return (0, exports.AddressesApiFp)(this.configuration)
            .addressesList(limit, before, after, include, dateCreated, metadata, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_3.AddressList(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return AddressesApi;
}(base_1.BaseAPI));
exports.AddressesApi = AddressesApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(addressesApi));

var bankAccountsApi = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BankAccountsApi = exports.BankAccountsApiFp = exports.BankAccountsApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
// @ts-ignore
var models_2 = models;
// @ts-ignore
var models_3 = models;
/**
 * BankAccountsApi - axios parameter creator
 * @export
 */
var BankAccountsApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Creates a new bank account with the provided properties. Bank accounts created in live mode will need to be verified via micro deposits before being able to send live checks. The deposits will appear in the bank account in 2-3 business days and have the description \"VERIFICATION\".
         * @summary create
         * @param {BankAccountWritable} bankAccountWritable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bankAccountCreate: function (bankAccountWritable, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'bankAccountWritable' is not null or undefined
                    (0, common_1.assertParamExists)("bankAccountCreate", "bankAccountWritable", bankAccountWritable);
                    localVarPath = "/bank_accounts";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(bankAccountWritable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Permanently deletes a bank account. It cannot be undone.
         * @summary delete
         * @param {string} bankId id of the bank account
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bankAccountDelete: function (bankId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'bankId' is not null or undefined
                    (0, common_1.assertParamExists)("bankAccountDelete", "bankId", bankId);
                    localVarPath = "/bank_accounts/{bank_id}".replace("{".concat("bank_id", "}"), encodeURIComponent(String(bankId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "DELETE" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Retrieves the details of an existing bank account. You need only supply the unique bank account identifier that was returned upon bank account creation.
         * @summary get
         * @param {string} bankId id of the bank account
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bankAccountRetrieve: function (bankId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'bankId' is not null or undefined
                    (0, common_1.assertParamExists)("bankAccountRetrieve", "bankId", bankId);
                    localVarPath = "/bank_accounts/{bank_id}".replace("{".concat("bank_id", "}"), encodeURIComponent(String(bankId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Verify a bank account in order to create a check.
         * @summary verify
         * @param {string} bankId id of the bank account to be verified
         * @param {BankAccountVerify} bankAccountVerify
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bankAccountVerify: function (bankId, bankAccountVerify, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'bankId' is not null or undefined
                    (0, common_1.assertParamExists)("bankAccountVerify", "bankId", bankId);
                    // verify required parameter 'bankAccountVerify' is not null or undefined
                    (0, common_1.assertParamExists)("bankAccountVerify", "bankAccountVerify", bankAccountVerify);
                    localVarPath = "/bank_accounts/{bank_id}/verify".replace("{".concat("bank_id", "}"), encodeURIComponent(String(bankId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(bankAccountVerify, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Returns a list of your bank accounts. The bank accounts are returned sorted by creation date, with the most recently created bank accounts appearing first.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bankAccountsList: function (limit, before, after, include, dateCreated, metadata, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    localVarPath = "/bank_accounts";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (limit !== undefined) {
                        localVarQueryParameter["limit"] = limit;
                    }
                    if (before !== undefined) {
                        localVarQueryParameter["before"] = before;
                    }
                    if (after !== undefined) {
                        localVarQueryParameter["after"] = after;
                    }
                    if (include) {
                        localVarQueryParameter["include"] = (0, common_1.valueToString)(include);
                    }
                    if (dateCreated !== undefined) {
                        localVarQueryParameter["date_created"] = (0, common_1.valueToString)(dateCreated);
                    }
                    if (metadata !== undefined) {
                        localVarQueryParameter["metadata"] = (0, common_1.valueToString)(metadata);
                    }
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.BankAccountsApiAxiosParamCreator = BankAccountsApiAxiosParamCreator;
/**
 * BankAccountsApi - functional programming interface
 * @export
 */
var BankAccountsApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.BankAccountsApiAxiosParamCreator)(configuration);
    return {
        /**
         * Creates a new bank account with the provided properties. Bank accounts created in live mode will need to be verified via micro deposits before being able to send live checks. The deposits will appear in the bank account in 2-3 business days and have the description \"VERIFICATION\".
         * @summary create
         * @param {BankAccountWritable} bankAccountWritable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bankAccountCreate: function (bankAccountWritable, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.bankAccountCreate(bankAccountWritable, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Permanently deletes a bank account. It cannot be undone.
         * @summary delete
         * @param {string} bankId id of the bank account
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bankAccountDelete: function (bankId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.bankAccountDelete(bankId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Retrieves the details of an existing bank account. You need only supply the unique bank account identifier that was returned upon bank account creation.
         * @summary get
         * @param {string} bankId id of the bank account
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bankAccountRetrieve: function (bankId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.bankAccountRetrieve(bankId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Verify a bank account in order to create a check.
         * @summary verify
         * @param {string} bankId id of the bank account to be verified
         * @param {BankAccountVerify} bankAccountVerify
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bankAccountVerify: function (bankId, bankAccountVerify, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.bankAccountVerify(bankId, bankAccountVerify, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Returns a list of your bank accounts. The bank accounts are returned sorted by creation date, with the most recently created bank accounts appearing first.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bankAccountsList: function (limit, before, after, include, dateCreated, metadata, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.bankAccountsList(limit, before, after, include, dateCreated, metadata, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.BankAccountsApiFp = BankAccountsApiFp;
/**
 * BankAccountsApi - object-oriented interface
 * @export
 * @class BankAccountsApi
 * @extends {BaseAPI}
 */
var BankAccountsApi = /** @class */ (function (_super) {
    tslib_1.__extends(BankAccountsApi, _super);
    function BankAccountsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Creates a new bank account with the provided properties. Bank accounts created in live mode will need to be verified via micro deposits before being able to send live checks. The deposits will appear in the bank account in 2-3 business days and have the description \"VERIFICATION\".
     * @summary create
     * @param {BankAccountWritable} bankAccountWritable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    BankAccountsApi.prototype.create = function (bankAccountWritable, options) {
        var _this = this;
        return (0, exports.BankAccountsApiFp)(this.configuration)
            .bankAccountCreate(bankAccountWritable, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.BankAccount(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Permanently deletes a bank account. It cannot be undone.
     * @summary delete
     * @param {string} bankId id of the bank account
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    BankAccountsApi.prototype.delete = function (bankId, options) {
        var _this = this;
        return (0, exports.BankAccountsApiFp)(this.configuration)
            .bankAccountDelete(bankId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_2.BankAccountDeletion(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Retrieves the details of an existing bank account. You need only supply the unique bank account identifier that was returned upon bank account creation.
     * @summary get
     * @param {string} bankId id of the bank account
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    BankAccountsApi.prototype.get = function (bankId, options) {
        var _this = this;
        return (0, exports.BankAccountsApiFp)(this.configuration)
            .bankAccountRetrieve(bankId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.BankAccount(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Verify a bank account in order to create a check.
     * @summary verify
     * @param {string} bankId id of the bank account to be verified
     * @param {BankAccountVerify} bankAccountVerify
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    BankAccountsApi.prototype.verify = function (bankId, bankAccountVerify, options) {
        var _this = this;
        return (0, exports.BankAccountsApiFp)(this.configuration)
            .bankAccountVerify(bankId, bankAccountVerify, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.BankAccount(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Returns a list of your bank accounts. The bank accounts are returned sorted by creation date, with the most recently created bank accounts appearing first.
     * @summary list
     * @param {number} [limit] How many results to return.
     * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
     * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
     * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
     * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
     * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    BankAccountsApi.prototype.list = function (limit, before, after, include, dateCreated, metadata, options) {
        var _this = this;
        return (0, exports.BankAccountsApiFp)(this.configuration)
            .bankAccountsList(limit, before, after, include, dateCreated, metadata, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_3.BankAccountList(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return BankAccountsApi;
}(base_1.BaseAPI));
exports.BankAccountsApi = BankAccountsApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(bankAccountsApi));

var billingGroupsApi = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BillingGroupsApi = exports.BillingGroupsApiFp = exports.BillingGroupsApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
// @ts-ignore
var models_2 = models;
/**
 * BillingGroupsApi - axios parameter creator
 * @export
 */
var BillingGroupsApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Creates a new billing_group with the provided properties.
         * @summary create
         * @param {BillingGroupEditable} billingGroupEditable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        billingGroupCreate: function (billingGroupEditable, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'billingGroupEditable' is not null or undefined
                    (0, common_1.assertParamExists)("billingGroupCreate", "billingGroupEditable", billingGroupEditable);
                    localVarPath = "/billing_groups";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(billingGroupEditable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Retrieves the details of an existing billing_group. You need only supply the unique billing_group identifier that was returned upon billing_group creation.
         * @summary get
         * @param {string} bgId id of the billing_group
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        billingGroupRetrieve: function (bgId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'bgId' is not null or undefined
                    (0, common_1.assertParamExists)("billingGroupRetrieve", "bgId", bgId);
                    localVarPath = "/billing_groups/{bg_id}".replace("{".concat("bg_id", "}"), encodeURIComponent(String(bgId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Updates all editable attributes of the billing_group with the given id.
         * @summary update
         * @param {string} bgId id of the billing_group
         * @param {BillingGroupEditable} billingGroupEditable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        billingGroupUpdate: function (bgId, billingGroupEditable, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'bgId' is not null or undefined
                    (0, common_1.assertParamExists)("billingGroupUpdate", "bgId", bgId);
                    // verify required parameter 'billingGroupEditable' is not null or undefined
                    (0, common_1.assertParamExists)("billingGroupUpdate", "billingGroupEditable", billingGroupEditable);
                    localVarPath = "/billing_groups/{bg_id}".replace("{".concat("bg_id", "}"), encodeURIComponent(String(bgId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(billingGroupEditable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Returns a list of your billing_groups. The billing_groups are returned sorted by creation date, with the most recently created billing_groups appearing first.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {number} [offset] An integer that designates the offset at which to begin returning results. Defaults to 0.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {{ [key: string]: string; }} [dateModified] Filter by date modified.
         * @param {object} [sortByDateModified] Sorts items by ascending or descending dates. Use either &#x60;date_created&#x60; or &#x60;date_modfied&#x60;, not both.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        billingGroupsList: function (limit, offset, include, dateCreated, dateModified, sortByDateModified, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    localVarPath = "/billing_groups";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (limit !== undefined) {
                        localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== undefined) {
                        localVarQueryParameter["offset"] = offset;
                    }
                    if (include) {
                        localVarQueryParameter["include"] = (0, common_1.valueToString)(include);
                    }
                    if (dateCreated !== undefined) {
                        localVarQueryParameter["date_created"] = (0, common_1.valueToString)(dateCreated);
                    }
                    if (dateModified !== undefined) {
                        localVarQueryParameter["date_modified"] = (0, common_1.valueToString)(dateModified);
                    }
                    if (sortByDateModified !== undefined) {
                        localVarQueryParameter["sort_by"] = (0, common_1.valueToString)(sortByDateModified);
                    }
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.BillingGroupsApiAxiosParamCreator = BillingGroupsApiAxiosParamCreator;
/**
 * BillingGroupsApi - functional programming interface
 * @export
 */
var BillingGroupsApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.BillingGroupsApiAxiosParamCreator)(configuration);
    return {
        /**
         * Creates a new billing_group with the provided properties.
         * @summary create
         * @param {BillingGroupEditable} billingGroupEditable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        billingGroupCreate: function (billingGroupEditable, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.billingGroupCreate(billingGroupEditable, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Retrieves the details of an existing billing_group. You need only supply the unique billing_group identifier that was returned upon billing_group creation.
         * @summary get
         * @param {string} bgId id of the billing_group
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        billingGroupRetrieve: function (bgId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.billingGroupRetrieve(bgId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Updates all editable attributes of the billing_group with the given id.
         * @summary update
         * @param {string} bgId id of the billing_group
         * @param {BillingGroupEditable} billingGroupEditable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        billingGroupUpdate: function (bgId, billingGroupEditable, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.billingGroupUpdate(bgId, billingGroupEditable, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Returns a list of your billing_groups. The billing_groups are returned sorted by creation date, with the most recently created billing_groups appearing first.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {number} [offset] An integer that designates the offset at which to begin returning results. Defaults to 0.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {{ [key: string]: string; }} [dateModified] Filter by date modified.
         * @param {object} [sortByDateModified] Sorts items by ascending or descending dates. Use either &#x60;date_created&#x60; or &#x60;date_modfied&#x60;, not both.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        billingGroupsList: function (limit, offset, include, dateCreated, dateModified, sortByDateModified, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.billingGroupsList(limit, offset, include, dateCreated, dateModified, sortByDateModified, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.BillingGroupsApiFp = BillingGroupsApiFp;
/**
 * BillingGroupsApi - object-oriented interface
 * @export
 * @class BillingGroupsApi
 * @extends {BaseAPI}
 */
var BillingGroupsApi = /** @class */ (function (_super) {
    tslib_1.__extends(BillingGroupsApi, _super);
    function BillingGroupsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Creates a new billing_group with the provided properties.
     * @summary create
     * @param {BillingGroupEditable} billingGroupEditable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BillingGroupsApi
     */
    BillingGroupsApi.prototype.create = function (billingGroupEditable, options) {
        var _this = this;
        return (0, exports.BillingGroupsApiFp)(this.configuration)
            .billingGroupCreate(billingGroupEditable, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.BillingGroup(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Retrieves the details of an existing billing_group. You need only supply the unique billing_group identifier that was returned upon billing_group creation.
     * @summary get
     * @param {string} bgId id of the billing_group
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BillingGroupsApi
     */
    BillingGroupsApi.prototype.get = function (bgId, options) {
        var _this = this;
        return (0, exports.BillingGroupsApiFp)(this.configuration)
            .billingGroupRetrieve(bgId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.BillingGroup(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Updates all editable attributes of the billing_group with the given id.
     * @summary update
     * @param {string} bgId id of the billing_group
     * @param {BillingGroupEditable} billingGroupEditable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BillingGroupsApi
     */
    BillingGroupsApi.prototype.update = function (bgId, billingGroupEditable, options) {
        var _this = this;
        return (0, exports.BillingGroupsApiFp)(this.configuration)
            .billingGroupUpdate(bgId, billingGroupEditable, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.BillingGroup(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Returns a list of your billing_groups. The billing_groups are returned sorted by creation date, with the most recently created billing_groups appearing first.
     * @summary list
     * @param {number} [limit] How many results to return.
     * @param {number} [offset] An integer that designates the offset at which to begin returning results. Defaults to 0.
     * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
     * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
     * @param {{ [key: string]: string; }} [dateModified] Filter by date modified.
     * @param {object} [sortByDateModified] Sorts items by ascending or descending dates. Use either &#x60;date_created&#x60; or &#x60;date_modfied&#x60;, not both.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BillingGroupsApi
     */
    BillingGroupsApi.prototype.list = function (limit, offset, include, dateCreated, dateModified, sortByDateModified, options) {
        var _this = this;
        return (0, exports.BillingGroupsApiFp)(this.configuration)
            .billingGroupsList(limit, offset, include, dateCreated, dateModified, sortByDateModified, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_2.BillingGroupList(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return BillingGroupsApi;
}(base_1.BaseAPI));
exports.BillingGroupsApi = BillingGroupsApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(billingGroupsApi));

var cardOrdersApi = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CardOrdersApi = exports.CardOrdersApiFp = exports.CardOrdersApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
// @ts-ignore
var models_2 = models;
/**
 * CardOrdersApi - axios parameter creator
 * @export
 */
var CardOrdersApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Creates a new card order given information
         * @summary create
         * @param {string} cardId The ID of the card to which the card orders belong.
         * @param {CardOrderEditable} cardOrderEditable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cardOrderCreate: function (cardId, cardOrderEditable, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'cardId' is not null or undefined
                    (0, common_1.assertParamExists)("cardOrderCreate", "cardId", cardId);
                    // verify required parameter 'cardOrderEditable' is not null or undefined
                    (0, common_1.assertParamExists)("cardOrderCreate", "cardOrderEditable", cardOrderEditable);
                    localVarPath = "/cards/{card_id}/orders".replace("{".concat("card_id", "}"), encodeURIComponent(String(cardId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(cardOrderEditable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Retrieves the card orders associated with the given card id.
         * @summary get
         * @param {string} cardId The ID of the card to which the card orders belong.
         * @param {number} [limit] How many results to return.
         * @param {number} [offset] An integer that designates the offset at which to begin returning results. Defaults to 0.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cardOrdersRetrieve: function (cardId, limit, offset, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'cardId' is not null or undefined
                    (0, common_1.assertParamExists)("cardOrdersRetrieve", "cardId", cardId);
                    localVarPath = "/cards/{card_id}/orders".replace("{".concat("card_id", "}"), encodeURIComponent(String(cardId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (limit !== undefined) {
                        localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== undefined) {
                        localVarQueryParameter["offset"] = offset;
                    }
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.CardOrdersApiAxiosParamCreator = CardOrdersApiAxiosParamCreator;
/**
 * CardOrdersApi - functional programming interface
 * @export
 */
var CardOrdersApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.CardOrdersApiAxiosParamCreator)(configuration);
    return {
        /**
         * Creates a new card order given information
         * @summary create
         * @param {string} cardId The ID of the card to which the card orders belong.
         * @param {CardOrderEditable} cardOrderEditable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cardOrderCreate: function (cardId, cardOrderEditable, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.cardOrderCreate(cardId, cardOrderEditable, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Retrieves the card orders associated with the given card id.
         * @summary get
         * @param {string} cardId The ID of the card to which the card orders belong.
         * @param {number} [limit] How many results to return.
         * @param {number} [offset] An integer that designates the offset at which to begin returning results. Defaults to 0.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cardOrdersRetrieve: function (cardId, limit, offset, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.cardOrdersRetrieve(cardId, limit, offset, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.CardOrdersApiFp = CardOrdersApiFp;
/**
 * CardOrdersApi - object-oriented interface
 * @export
 * @class CardOrdersApi
 * @extends {BaseAPI}
 */
var CardOrdersApi = /** @class */ (function (_super) {
    tslib_1.__extends(CardOrdersApi, _super);
    function CardOrdersApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Creates a new card order given information
     * @summary create
     * @param {string} cardId The ID of the card to which the card orders belong.
     * @param {CardOrderEditable} cardOrderEditable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardOrdersApi
     */
    CardOrdersApi.prototype.create = function (cardId, cardOrderEditable, options) {
        var _this = this;
        return (0, exports.CardOrdersApiFp)(this.configuration)
            .cardOrderCreate(cardId, cardOrderEditable, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.CardOrder(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Retrieves the card orders associated with the given card id.
     * @summary get
     * @param {string} cardId The ID of the card to which the card orders belong.
     * @param {number} [limit] How many results to return.
     * @param {number} [offset] An integer that designates the offset at which to begin returning results. Defaults to 0.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardOrdersApi
     */
    CardOrdersApi.prototype.get = function (cardId, limit, offset, options) {
        var _this = this;
        return (0, exports.CardOrdersApiFp)(this.configuration)
            .cardOrdersRetrieve(cardId, limit, offset, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_2.CardOrderList(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return CardOrdersApi;
}(base_1.BaseAPI));
exports.CardOrdersApi = CardOrdersApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(cardOrdersApi));

var cardsApi = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CardsApi = exports.CardsApiFp = exports.CardsApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
// @ts-ignore
var models_2 = models;
// @ts-ignore
var models_3 = models;
/**
 * CardsApi - axios parameter creator
 * @export
 */
var CardsApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Creates a new card given information
         * @summary create
         * @param {CardEditable} cardEditable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cardCreate: function (cardEditable, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'cardEditable' is not null or undefined
                    (0, common_1.assertParamExists)("cardCreate", "cardEditable", cardEditable);
                    localVarPath = "/cards";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(cardEditable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Delete an existing card. You need only supply the unique identifier that was returned upon card creation.
         * @summary delete
         * @param {string} cardId id of the card
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cardDelete: function (cardId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'cardId' is not null or undefined
                    (0, common_1.assertParamExists)("cardDelete", "cardId", cardId);
                    localVarPath = "/cards/{card_id}".replace("{".concat("card_id", "}"), encodeURIComponent(String(cardId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "DELETE" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Retrieves the details of an existing card. You need only supply the unique customer identifier that was returned upon card creation.
         * @summary get
         * @param {string} cardId id of the card
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cardRetrieve: function (cardId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'cardId' is not null or undefined
                    (0, common_1.assertParamExists)("cardRetrieve", "cardId", cardId);
                    localVarPath = "/cards/{card_id}".replace("{".concat("card_id", "}"), encodeURIComponent(String(cardId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Update the details of an existing card. You need only supply the unique identifier that was returned upon card creation.
         * @summary update
         * @param {string} cardId id of the card
         * @param {CardUpdatable} cardUpdatable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cardUpdate: function (cardId, cardUpdatable, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'cardId' is not null or undefined
                    (0, common_1.assertParamExists)("cardUpdate", "cardId", cardId);
                    // verify required parameter 'cardUpdatable' is not null or undefined
                    (0, common_1.assertParamExists)("cardUpdate", "cardUpdatable", cardUpdatable);
                    localVarPath = "/cards/{card_id}".replace("{".concat("card_id", "}"), encodeURIComponent(String(cardId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(cardUpdatable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Returns a list of your cards. The cards are returned sorted by creation date, with the most recently created addresses appearing first.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cardsList: function (limit, before, after, include, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    localVarPath = "/cards";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (limit !== undefined) {
                        localVarQueryParameter["limit"] = limit;
                    }
                    if (before !== undefined) {
                        localVarQueryParameter["before"] = before;
                    }
                    if (after !== undefined) {
                        localVarQueryParameter["after"] = after;
                    }
                    if (include) {
                        localVarQueryParameter["include"] = (0, common_1.valueToString)(include);
                    }
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.CardsApiAxiosParamCreator = CardsApiAxiosParamCreator;
/**
 * CardsApi - functional programming interface
 * @export
 */
var CardsApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.CardsApiAxiosParamCreator)(configuration);
    return {
        /**
         * Creates a new card given information
         * @summary create
         * @param {CardEditable} cardEditable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cardCreate: function (cardEditable, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.cardCreate(cardEditable, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Delete an existing card. You need only supply the unique identifier that was returned upon card creation.
         * @summary delete
         * @param {string} cardId id of the card
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cardDelete: function (cardId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.cardDelete(cardId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Retrieves the details of an existing card. You need only supply the unique customer identifier that was returned upon card creation.
         * @summary get
         * @param {string} cardId id of the card
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cardRetrieve: function (cardId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.cardRetrieve(cardId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Update the details of an existing card. You need only supply the unique identifier that was returned upon card creation.
         * @summary update
         * @param {string} cardId id of the card
         * @param {CardUpdatable} cardUpdatable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cardUpdate: function (cardId, cardUpdatable, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.cardUpdate(cardId, cardUpdatable, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Returns a list of your cards. The cards are returned sorted by creation date, with the most recently created addresses appearing first.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cardsList: function (limit, before, after, include, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.cardsList(limit, before, after, include, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.CardsApiFp = CardsApiFp;
/**
 * CardsApi - object-oriented interface
 * @export
 * @class CardsApi
 * @extends {BaseAPI}
 */
var CardsApi = /** @class */ (function (_super) {
    tslib_1.__extends(CardsApi, _super);
    function CardsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Creates a new card given information
     * @summary create
     * @param {CardEditable} cardEditable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardsApi
     */
    CardsApi.prototype.create = function (cardEditable, options) {
        var _this = this;
        return (0, exports.CardsApiFp)(this.configuration)
            .cardCreate(cardEditable, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.Card(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Delete an existing card. You need only supply the unique identifier that was returned upon card creation.
     * @summary delete
     * @param {string} cardId id of the card
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardsApi
     */
    CardsApi.prototype.delete = function (cardId, options) {
        var _this = this;
        return (0, exports.CardsApiFp)(this.configuration)
            .cardDelete(cardId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_2.CardDeletion(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Retrieves the details of an existing card. You need only supply the unique customer identifier that was returned upon card creation.
     * @summary get
     * @param {string} cardId id of the card
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardsApi
     */
    CardsApi.prototype.get = function (cardId, options) {
        var _this = this;
        return (0, exports.CardsApiFp)(this.configuration)
            .cardRetrieve(cardId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.Card(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Update the details of an existing card. You need only supply the unique identifier that was returned upon card creation.
     * @summary update
     * @param {string} cardId id of the card
     * @param {CardUpdatable} cardUpdatable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardsApi
     */
    CardsApi.prototype.update = function (cardId, cardUpdatable, options) {
        var _this = this;
        return (0, exports.CardsApiFp)(this.configuration)
            .cardUpdate(cardId, cardUpdatable, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.Card(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Returns a list of your cards. The cards are returned sorted by creation date, with the most recently created addresses appearing first.
     * @summary list
     * @param {number} [limit] How many results to return.
     * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
     * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
     * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardsApi
     */
    CardsApi.prototype.list = function (limit, before, after, include, options) {
        var _this = this;
        return (0, exports.CardsApiFp)(this.configuration)
            .cardsList(limit, before, after, include, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_3.CardList(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return CardsApi;
}(base_1.BaseAPI));
exports.CardsApi = CardsApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(cardsApi));

var checksApi = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChecksApi = exports.ChecksApiFp = exports.ChecksApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
// @ts-ignore
var models_2 = models;
// @ts-ignore
var models_3 = models;
/**
 * ChecksApi - axios parameter creator
 * @export
 */
var ChecksApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Completely removes a check from production. This can only be done if the check has a `send_date` and the `send_date` has not yet passed. If the check is successfully canceled, you will not be charged for it. Read more on [cancellation windows](#section/Cancellation-Windows) and [scheduling](#section/Scheduled-Mailings). Scheduling and cancellation is a premium feature. Upgrade to the appropriate [Print & Mail Edition](https://dashboard.lob.com/#/settings/editions) to gain access.
         * @summary cancel
         * @param {string} chkId id of the check
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checkCancel: function (chkId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'chkId' is not null or undefined
                    (0, common_1.assertParamExists)("checkCancel", "chkId", chkId);
                    localVarPath = "/checks/{chk_id}".replace("{".concat("chk_id", "}"), encodeURIComponent(String(chkId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "DELETE" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Creates a new check with the provided properties.
         * @summary create
         * @param {CheckEditable} checkEditable
         * @param {string} [idempotencyKey] A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our [implementation guide](https://www.lob.com/guides#idempotent_request).
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checkCreate: function (checkEditable, idempotencyKey, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'checkEditable' is not null or undefined
                    (0, common_1.assertParamExists)("checkCreate", "checkEditable", checkEditable);
                    localVarPath = "/checks";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (idempotencyKey !== undefined && idempotencyKey !== null) {
                        localVarHeaderParameter["Idempotency-Key"] = String(idempotencyKey);
                    }
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(checkEditable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Retrieves the details of an existing check. You need only supply the unique check identifier that was returned upon check creation.
         * @summary get
         * @param {string} chkId id of the check
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checkRetrieve: function (chkId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'chkId' is not null or undefined
                    (0, common_1.assertParamExists)("checkRetrieve", "chkId", chkId);
                    localVarPath = "/checks/{chk_id}".replace("{".concat("chk_id", "}"), encodeURIComponent(String(chkId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Returns a list of your checks. The checks are returned sorted by creation date, with the most recently created checks appearing first.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
         * @param {boolean} [scheduled] * &#x60;true&#x60; - only return orders (past or future) where &#x60;send_date&#x60; is greater than &#x60;date_created&#x60; * &#x60;false&#x60; - only return orders where &#x60;send_date&#x60; is equal to &#x60;date_created&#x60;
         * @param {{ [key: string]: string; }} [sendDate] Filter by date sent.
         * @param {MailType} [mailType] A string designating the mail postage type: * &#x60;usps_first_class&#x60; - (default) * &#x60;usps_standard&#x60; - a [cheaper option](https://lob.com/pricing/print-mail#compare) which is less predictable and takes longer to deliver. &#x60;usps_standard&#x60; cannot be used with &#x60;4x6&#x60; postcards or for any postcards sent outside of the United States.
         * @param {object} [sortBy] Sorts items by ascending or descending dates. Use either &#x60;date_created&#x60; or &#x60;send_date&#x60;, not both.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checksList: function (limit, before, after, include, dateCreated, metadata, scheduled, sendDate, mailType, sortBy, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    localVarPath = "/checks";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (limit !== undefined) {
                        localVarQueryParameter["limit"] = limit;
                    }
                    if (before !== undefined) {
                        localVarQueryParameter["before"] = before;
                    }
                    if (after !== undefined) {
                        localVarQueryParameter["after"] = after;
                    }
                    if (include) {
                        localVarQueryParameter["include"] = (0, common_1.valueToString)(include);
                    }
                    if (dateCreated !== undefined) {
                        localVarQueryParameter["date_created"] = (0, common_1.valueToString)(dateCreated);
                    }
                    if (metadata !== undefined) {
                        localVarQueryParameter["metadata"] = (0, common_1.valueToString)(metadata);
                    }
                    if (scheduled !== undefined) {
                        localVarQueryParameter["scheduled"] = scheduled;
                    }
                    if (sendDate !== undefined) {
                        localVarQueryParameter["send_date"] = (0, common_1.valueToString)(sendDate);
                    }
                    if (mailType !== undefined) {
                        localVarQueryParameter["mail_type"] = (0, common_1.valueToString)(mailType);
                    }
                    if (sortBy !== undefined) {
                        localVarQueryParameter["sort_by"] = (0, common_1.valueToString)(sortBy);
                    }
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.ChecksApiAxiosParamCreator = ChecksApiAxiosParamCreator;
/**
 * ChecksApi - functional programming interface
 * @export
 */
var ChecksApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.ChecksApiAxiosParamCreator)(configuration);
    return {
        /**
         * Completely removes a check from production. This can only be done if the check has a `send_date` and the `send_date` has not yet passed. If the check is successfully canceled, you will not be charged for it. Read more on [cancellation windows](#section/Cancellation-Windows) and [scheduling](#section/Scheduled-Mailings). Scheduling and cancellation is a premium feature. Upgrade to the appropriate [Print & Mail Edition](https://dashboard.lob.com/#/settings/editions) to gain access.
         * @summary cancel
         * @param {string} chkId id of the check
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checkCancel: function (chkId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.checkCancel(chkId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Creates a new check with the provided properties.
         * @summary create
         * @param {CheckEditable} checkEditable
         * @param {string} [idempotencyKey] A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our [implementation guide](https://www.lob.com/guides#idempotent_request).
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checkCreate: function (checkEditable, idempotencyKey, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.checkCreate(checkEditable, idempotencyKey, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Retrieves the details of an existing check. You need only supply the unique check identifier that was returned upon check creation.
         * @summary get
         * @param {string} chkId id of the check
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checkRetrieve: function (chkId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.checkRetrieve(chkId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Returns a list of your checks. The checks are returned sorted by creation date, with the most recently created checks appearing first.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
         * @param {boolean} [scheduled] * &#x60;true&#x60; - only return orders (past or future) where &#x60;send_date&#x60; is greater than &#x60;date_created&#x60; * &#x60;false&#x60; - only return orders where &#x60;send_date&#x60; is equal to &#x60;date_created&#x60;
         * @param {{ [key: string]: string; }} [sendDate] Filter by date sent.
         * @param {MailType} [mailType] A string designating the mail postage type: * &#x60;usps_first_class&#x60; - (default) * &#x60;usps_standard&#x60; - a [cheaper option](https://lob.com/pricing/print-mail#compare) which is less predictable and takes longer to deliver. &#x60;usps_standard&#x60; cannot be used with &#x60;4x6&#x60; postcards or for any postcards sent outside of the United States.
         * @param {object} [sortBy] Sorts items by ascending or descending dates. Use either &#x60;date_created&#x60; or &#x60;send_date&#x60;, not both.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checksList: function (limit, before, after, include, dateCreated, metadata, scheduled, sendDate, mailType, sortBy, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.checksList(limit, before, after, include, dateCreated, metadata, scheduled, sendDate, mailType, sortBy, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.ChecksApiFp = ChecksApiFp;
/**
 * ChecksApi - object-oriented interface
 * @export
 * @class ChecksApi
 * @extends {BaseAPI}
 */
var ChecksApi = /** @class */ (function (_super) {
    tslib_1.__extends(ChecksApi, _super);
    function ChecksApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Completely removes a check from production. This can only be done if the check has a `send_date` and the `send_date` has not yet passed. If the check is successfully canceled, you will not be charged for it. Read more on [cancellation windows](#section/Cancellation-Windows) and [scheduling](#section/Scheduled-Mailings). Scheduling and cancellation is a premium feature. Upgrade to the appropriate [Print & Mail Edition](https://dashboard.lob.com/#/settings/editions) to gain access.
     * @summary cancel
     * @param {string} chkId id of the check
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ChecksApi
     */
    ChecksApi.prototype.cancel = function (chkId, options) {
        var _this = this;
        return (0, exports.ChecksApiFp)(this.configuration)
            .checkCancel(chkId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_2.CheckDeletion(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Creates a new check with the provided properties.
     * @summary create
     * @param {CheckEditable} checkEditable
     * @param {string} [idempotencyKey] A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our [implementation guide](https://www.lob.com/guides#idempotent_request).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ChecksApi
     */
    ChecksApi.prototype.create = function (checkEditable, idempotencyKey, options) {
        var _this = this;
        return (0, exports.ChecksApiFp)(this.configuration)
            .checkCreate(checkEditable, idempotencyKey, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.Check(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Retrieves the details of an existing check. You need only supply the unique check identifier that was returned upon check creation.
     * @summary get
     * @param {string} chkId id of the check
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ChecksApi
     */
    ChecksApi.prototype.get = function (chkId, options) {
        var _this = this;
        return (0, exports.ChecksApiFp)(this.configuration)
            .checkRetrieve(chkId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.Check(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Returns a list of your checks. The checks are returned sorted by creation date, with the most recently created checks appearing first.
     * @summary list
     * @param {number} [limit] How many results to return.
     * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
     * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
     * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
     * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
     * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
     * @param {boolean} [scheduled] * &#x60;true&#x60; - only return orders (past or future) where &#x60;send_date&#x60; is greater than &#x60;date_created&#x60; * &#x60;false&#x60; - only return orders where &#x60;send_date&#x60; is equal to &#x60;date_created&#x60;
     * @param {{ [key: string]: string; }} [sendDate] Filter by date sent.
     * @param {MailType} [mailType] A string designating the mail postage type: * &#x60;usps_first_class&#x60; - (default) * &#x60;usps_standard&#x60; - a [cheaper option](https://lob.com/pricing/print-mail#compare) which is less predictable and takes longer to deliver. &#x60;usps_standard&#x60; cannot be used with &#x60;4x6&#x60; postcards or for any postcards sent outside of the United States.
     * @param {object} [sortBy] Sorts items by ascending or descending dates. Use either &#x60;date_created&#x60; or &#x60;send_date&#x60;, not both.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ChecksApi
     */
    ChecksApi.prototype.list = function (limit, before, after, include, dateCreated, metadata, scheduled, sendDate, mailType, sortBy, options) {
        var _this = this;
        return (0, exports.ChecksApiFp)(this.configuration)
            .checksList(limit, before, after, include, dateCreated, metadata, scheduled, sendDate, mailType, sortBy, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_3.CheckList(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return ChecksApi;
}(base_1.BaseAPI));
exports.ChecksApi = ChecksApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(checksApi));

var intlAutocompletionsApi = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntlAutocompletionsApi = exports.IntlAutocompletionsApiFp = exports.IntlAutocompletionsApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
/**
 * IntlAutocompletionsApi - axios parameter creator
 * @export
 */
var IntlAutocompletionsApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Given an address prefix consisting of a partial primary line and country, as well as optional input of city, state, and zip code, this functionality returns up to 10 full International address suggestions. Not all of them will turn out to be valid addresses; they\'ll need to be [verified](#operation/intl_verification).
         * @summary autocomplete
         * @param {IntlAutocompletionsWritable} intlAutocompletionsWritable
         * @param {'native' | 'match'} [xLangOutput] * &#x60;native&#x60; - Translate response to the native language of the country in the request * &#x60;match&#x60; - match the response to the language in the request  Default response is in English.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        intlAutocompletion: function (intlAutocompletionsWritable, xLangOutput, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'intlAutocompletionsWritable' is not null or undefined
                    (0, common_1.assertParamExists)("intlAutocompletion", "intlAutocompletionsWritable", intlAutocompletionsWritable);
                    localVarPath = "/intl_autocompletions";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (xLangOutput !== undefined && xLangOutput !== null) {
                        localVarHeaderParameter["x-lang-output"] = String(xLangOutput);
                    }
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(intlAutocompletionsWritable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.IntlAutocompletionsApiAxiosParamCreator = IntlAutocompletionsApiAxiosParamCreator;
/**
 * IntlAutocompletionsApi - functional programming interface
 * @export
 */
var IntlAutocompletionsApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.IntlAutocompletionsApiAxiosParamCreator)(configuration);
    return {
        /**
         * Given an address prefix consisting of a partial primary line and country, as well as optional input of city, state, and zip code, this functionality returns up to 10 full International address suggestions. Not all of them will turn out to be valid addresses; they\'ll need to be [verified](#operation/intl_verification).
         * @summary autocomplete
         * @param {IntlAutocompletionsWritable} intlAutocompletionsWritable
         * @param {'native' | 'match'} [xLangOutput] * &#x60;native&#x60; - Translate response to the native language of the country in the request * &#x60;match&#x60; - match the response to the language in the request  Default response is in English.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        intlAutocompletion: function (intlAutocompletionsWritable, xLangOutput, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.intlAutocompletion(intlAutocompletionsWritable, xLangOutput, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.IntlAutocompletionsApiFp = IntlAutocompletionsApiFp;
/**
 * IntlAutocompletionsApi - object-oriented interface
 * @export
 * @class IntlAutocompletionsApi
 * @extends {BaseAPI}
 */
var IntlAutocompletionsApi = /** @class */ (function (_super) {
    tslib_1.__extends(IntlAutocompletionsApi, _super);
    function IntlAutocompletionsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Given an address prefix consisting of a partial primary line and country, as well as optional input of city, state, and zip code, this functionality returns up to 10 full International address suggestions. Not all of them will turn out to be valid addresses; they\'ll need to be [verified](#operation/intl_verification).
     * @summary autocomplete
     * @param {IntlAutocompletionsWritable} intlAutocompletionsWritable
     * @param {'native' | 'match'} [xLangOutput] * &#x60;native&#x60; - Translate response to the native language of the country in the request * &#x60;match&#x60; - match the response to the language in the request  Default response is in English.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntlAutocompletionsApi
     */
    IntlAutocompletionsApi.prototype.autocomplete = function (intlAutocompletionsWritable, xLangOutput, options) {
        var _this = this;
        return (0, exports.IntlAutocompletionsApiFp)(this.configuration)
            .intlAutocompletion(intlAutocompletionsWritable, xLangOutput, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.IntlAutocompletions(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return IntlAutocompletionsApi;
}(base_1.BaseAPI));
exports.IntlAutocompletionsApi = IntlAutocompletionsApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(intlAutocompletionsApi));

var intlVerificationsApi = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntlVerificationsApi = exports.IntlVerificationsApiFp = exports.IntlVerificationsApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
// @ts-ignore
var models_2 = models;
/**
 * IntlVerificationsApi - axios parameter creator
 * @export
 */
var IntlVerificationsApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Verify a list of international (except US or US territories) address with a live API key.
         * @summary verifyBulk
         * @param {IntlVerificationsPayload} intlVerificationsPayload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bulkIntlVerifications: function (intlVerificationsPayload, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'intlVerificationsPayload' is not null or undefined
                    (0, common_1.assertParamExists)("bulkIntlVerifications", "intlVerificationsPayload", intlVerificationsPayload);
                    localVarPath = "/bulk/intl_verifications";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(intlVerificationsPayload, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Verify an international (except US or US territories) address with a live API key.
         * @summary verifySingle
         * @param {IntlVerificationWritable} intlVerificationWritable
         * @param {'native' | 'match'} [xLangOutput] * &#x60;native&#x60; - Translate response to the native language of the country in the request * &#x60;match&#x60; - match the response to the language in the request  Default response is in English.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        intlVerification: function (intlVerificationWritable, xLangOutput, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'intlVerificationWritable' is not null or undefined
                    (0, common_1.assertParamExists)("intlVerification", "intlVerificationWritable", intlVerificationWritable);
                    localVarPath = "/intl_verifications";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (xLangOutput !== undefined && xLangOutput !== null) {
                        localVarHeaderParameter["x-lang-output"] = String(xLangOutput);
                    }
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(intlVerificationWritable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.IntlVerificationsApiAxiosParamCreator = IntlVerificationsApiAxiosParamCreator;
/**
 * IntlVerificationsApi - functional programming interface
 * @export
 */
var IntlVerificationsApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.IntlVerificationsApiAxiosParamCreator)(configuration);
    return {
        /**
         * Verify a list of international (except US or US territories) address with a live API key.
         * @summary verifyBulk
         * @param {IntlVerificationsPayload} intlVerificationsPayload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bulkIntlVerifications: function (intlVerificationsPayload, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.bulkIntlVerifications(intlVerificationsPayload, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Verify an international (except US or US territories) address with a live API key.
         * @summary verifySingle
         * @param {IntlVerificationWritable} intlVerificationWritable
         * @param {'native' | 'match'} [xLangOutput] * &#x60;native&#x60; - Translate response to the native language of the country in the request * &#x60;match&#x60; - match the response to the language in the request  Default response is in English.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        intlVerification: function (intlVerificationWritable, xLangOutput, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.intlVerification(intlVerificationWritable, xLangOutput, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.IntlVerificationsApiFp = IntlVerificationsApiFp;
/**
 * IntlVerificationsApi - object-oriented interface
 * @export
 * @class IntlVerificationsApi
 * @extends {BaseAPI}
 */
var IntlVerificationsApi = /** @class */ (function (_super) {
    tslib_1.__extends(IntlVerificationsApi, _super);
    function IntlVerificationsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Verify a list of international (except US or US territories) address with a live API key.
     * @summary verifyBulk
     * @param {IntlVerificationsPayload} intlVerificationsPayload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntlVerificationsApi
     */
    IntlVerificationsApi.prototype.verifyBulk = function (intlVerificationsPayload, options) {
        var _this = this;
        return (0, exports.IntlVerificationsApiFp)(this.configuration)
            .bulkIntlVerifications(intlVerificationsPayload, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_2.IntlVerifications(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Verify an international (except US or US territories) address with a live API key.
     * @summary verifySingle
     * @param {IntlVerificationWritable} intlVerificationWritable
     * @param {'native' | 'match'} [xLangOutput] * &#x60;native&#x60; - Translate response to the native language of the country in the request * &#x60;match&#x60; - match the response to the language in the request  Default response is in English.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntlVerificationsApi
     */
    IntlVerificationsApi.prototype.verifySingle = function (intlVerificationWritable, xLangOutput, options) {
        var _this = this;
        return (0, exports.IntlVerificationsApiFp)(this.configuration)
            .intlVerification(intlVerificationWritable, xLangOutput, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.IntlVerification(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return IntlVerificationsApi;
}(base_1.BaseAPI));
exports.IntlVerificationsApi = IntlVerificationsApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(intlVerificationsApi));

var lettersApi = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LettersApi = exports.LettersApiFp = exports.LettersApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
// @ts-ignore
var models_2 = models;
// @ts-ignore
var models_3 = models;
/**
 * LettersApi - axios parameter creator
 * @export
 */
var LettersApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Completely removes a letter from production. This can only be done if the letter has a `send_date` and the `send_date` has not yet passed. If the letter is successfully canceled, you will not be charged for it. Read more on [cancellation windows](#section/Cancellation-Windows) and [scheduling](#section/Scheduled-Mailings). Scheduling and cancellation is a premium feature. Upgrade to the appropriate [Print & Mail Edition](https://dashboard.lob.com/#/settings/editions) to gain access.
         * @summary cancel
         * @param {string} ltrId id of the letter
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        letterCancel: function (ltrId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'ltrId' is not null or undefined
                    (0, common_1.assertParamExists)("letterCancel", "ltrId", ltrId);
                    localVarPath = "/letters/{ltr_id}".replace("{".concat("ltr_id", "}"), encodeURIComponent(String(ltrId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "DELETE" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Creates a new letter given information
         * @summary create
         * @param {LetterEditable} letterEditable
         * @param {string} [idempotencyKey] A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our [implementation guide](https://www.lob.com/guides#idempotent_request).
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        letterCreate: function (letterEditable, idempotencyKey, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'letterEditable' is not null or undefined
                    (0, common_1.assertParamExists)("letterCreate", "letterEditable", letterEditable);
                    localVarPath = "/letters";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (idempotencyKey !== undefined && idempotencyKey !== null) {
                        localVarHeaderParameter["Idempotency-Key"] = String(idempotencyKey);
                    }
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(letterEditable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Retrieves the details of an existing letter. You need only supply the unique letter identifier that was returned upon letter creation.
         * @summary get
         * @param {string} ltrId id of the letter
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        letterRetrieve: function (ltrId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'ltrId' is not null or undefined
                    (0, common_1.assertParamExists)("letterRetrieve", "ltrId", ltrId);
                    localVarPath = "/letters/{ltr_id}".replace("{".concat("ltr_id", "}"), encodeURIComponent(String(ltrId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Returns a list of your letters. The letters are returned sorted by creation date, with the most recently created letters appearing first.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
         * @param {boolean} [color] Set to &#x60;true&#x60; to return only color letters. Set to &#x60;false&#x60; to return only black &amp; white letters.
         * @param {boolean} [scheduled] * &#x60;true&#x60; - only return orders (past or future) where &#x60;send_date&#x60; is greater than &#x60;date_created&#x60; * &#x60;false&#x60; - only return orders where &#x60;send_date&#x60; is equal to &#x60;date_created&#x60;
         * @param {{ [key: string]: string; }} [sendDate] Filter by date sent.
         * @param {MailType} [mailType] A string designating the mail postage type: * &#x60;usps_first_class&#x60; - (default) * &#x60;usps_standard&#x60; - a [cheaper option](https://lob.com/pricing/print-mail#compare) which is less predictable and takes longer to deliver. &#x60;usps_standard&#x60; cannot be used with &#x60;4x6&#x60; postcards or for any postcards sent outside of the United States.
         * @param {object} [sortBy] Sorts items by ascending or descending dates. Use either &#x60;date_created&#x60; or &#x60;send_date&#x60;, not both.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        lettersList: function (limit, before, after, include, dateCreated, metadata, color, scheduled, sendDate, mailType, sortBy, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    localVarPath = "/letters";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (limit !== undefined) {
                        localVarQueryParameter["limit"] = limit;
                    }
                    if (before !== undefined) {
                        localVarQueryParameter["before"] = before;
                    }
                    if (after !== undefined) {
                        localVarQueryParameter["after"] = after;
                    }
                    if (include) {
                        localVarQueryParameter["include"] = (0, common_1.valueToString)(include);
                    }
                    if (dateCreated !== undefined) {
                        localVarQueryParameter["date_created"] = (0, common_1.valueToString)(dateCreated);
                    }
                    if (metadata !== undefined) {
                        localVarQueryParameter["metadata"] = (0, common_1.valueToString)(metadata);
                    }
                    if (color !== undefined) {
                        localVarQueryParameter["color"] = color;
                    }
                    if (scheduled !== undefined) {
                        localVarQueryParameter["scheduled"] = scheduled;
                    }
                    if (sendDate !== undefined) {
                        localVarQueryParameter["send_date"] = (0, common_1.valueToString)(sendDate);
                    }
                    if (mailType !== undefined) {
                        localVarQueryParameter["mail_type"] = (0, common_1.valueToString)(mailType);
                    }
                    if (sortBy !== undefined) {
                        localVarQueryParameter["sort_by"] = (0, common_1.valueToString)(sortBy);
                    }
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.LettersApiAxiosParamCreator = LettersApiAxiosParamCreator;
/**
 * LettersApi - functional programming interface
 * @export
 */
var LettersApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.LettersApiAxiosParamCreator)(configuration);
    return {
        /**
         * Completely removes a letter from production. This can only be done if the letter has a `send_date` and the `send_date` has not yet passed. If the letter is successfully canceled, you will not be charged for it. Read more on [cancellation windows](#section/Cancellation-Windows) and [scheduling](#section/Scheduled-Mailings). Scheduling and cancellation is a premium feature. Upgrade to the appropriate [Print & Mail Edition](https://dashboard.lob.com/#/settings/editions) to gain access.
         * @summary cancel
         * @param {string} ltrId id of the letter
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        letterCancel: function (ltrId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.letterCancel(ltrId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Creates a new letter given information
         * @summary create
         * @param {LetterEditable} letterEditable
         * @param {string} [idempotencyKey] A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our [implementation guide](https://www.lob.com/guides#idempotent_request).
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        letterCreate: function (letterEditable, idempotencyKey, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.letterCreate(letterEditable, idempotencyKey, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Retrieves the details of an existing letter. You need only supply the unique letter identifier that was returned upon letter creation.
         * @summary get
         * @param {string} ltrId id of the letter
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        letterRetrieve: function (ltrId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.letterRetrieve(ltrId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Returns a list of your letters. The letters are returned sorted by creation date, with the most recently created letters appearing first.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
         * @param {boolean} [color] Set to &#x60;true&#x60; to return only color letters. Set to &#x60;false&#x60; to return only black &amp; white letters.
         * @param {boolean} [scheduled] * &#x60;true&#x60; - only return orders (past or future) where &#x60;send_date&#x60; is greater than &#x60;date_created&#x60; * &#x60;false&#x60; - only return orders where &#x60;send_date&#x60; is equal to &#x60;date_created&#x60;
         * @param {{ [key: string]: string; }} [sendDate] Filter by date sent.
         * @param {MailType} [mailType] A string designating the mail postage type: * &#x60;usps_first_class&#x60; - (default) * &#x60;usps_standard&#x60; - a [cheaper option](https://lob.com/pricing/print-mail#compare) which is less predictable and takes longer to deliver. &#x60;usps_standard&#x60; cannot be used with &#x60;4x6&#x60; postcards or for any postcards sent outside of the United States.
         * @param {object} [sortBy] Sorts items by ascending or descending dates. Use either &#x60;date_created&#x60; or &#x60;send_date&#x60;, not both.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        lettersList: function (limit, before, after, include, dateCreated, metadata, color, scheduled, sendDate, mailType, sortBy, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.lettersList(limit, before, after, include, dateCreated, metadata, color, scheduled, sendDate, mailType, sortBy, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.LettersApiFp = LettersApiFp;
/**
 * LettersApi - object-oriented interface
 * @export
 * @class LettersApi
 * @extends {BaseAPI}
 */
var LettersApi = /** @class */ (function (_super) {
    tslib_1.__extends(LettersApi, _super);
    function LettersApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Completely removes a letter from production. This can only be done if the letter has a `send_date` and the `send_date` has not yet passed. If the letter is successfully canceled, you will not be charged for it. Read more on [cancellation windows](#section/Cancellation-Windows) and [scheduling](#section/Scheduled-Mailings). Scheduling and cancellation is a premium feature. Upgrade to the appropriate [Print & Mail Edition](https://dashboard.lob.com/#/settings/editions) to gain access.
     * @summary cancel
     * @param {string} ltrId id of the letter
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LettersApi
     */
    LettersApi.prototype.cancel = function (ltrId, options) {
        var _this = this;
        return (0, exports.LettersApiFp)(this.configuration)
            .letterCancel(ltrId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_2.LetterDeletion(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Creates a new letter given information
     * @summary create
     * @param {LetterEditable} letterEditable
     * @param {string} [idempotencyKey] A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our [implementation guide](https://www.lob.com/guides#idempotent_request).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LettersApi
     */
    LettersApi.prototype.create = function (letterEditable, idempotencyKey, options) {
        var _this = this;
        return (0, exports.LettersApiFp)(this.configuration)
            .letterCreate(letterEditable, idempotencyKey, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.Letter(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Retrieves the details of an existing letter. You need only supply the unique letter identifier that was returned upon letter creation.
     * @summary get
     * @param {string} ltrId id of the letter
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LettersApi
     */
    LettersApi.prototype.get = function (ltrId, options) {
        var _this = this;
        return (0, exports.LettersApiFp)(this.configuration)
            .letterRetrieve(ltrId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.Letter(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Returns a list of your letters. The letters are returned sorted by creation date, with the most recently created letters appearing first.
     * @summary list
     * @param {number} [limit] How many results to return.
     * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
     * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
     * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
     * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
     * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
     * @param {boolean} [color] Set to &#x60;true&#x60; to return only color letters. Set to &#x60;false&#x60; to return only black &amp; white letters.
     * @param {boolean} [scheduled] * &#x60;true&#x60; - only return orders (past or future) where &#x60;send_date&#x60; is greater than &#x60;date_created&#x60; * &#x60;false&#x60; - only return orders where &#x60;send_date&#x60; is equal to &#x60;date_created&#x60;
     * @param {{ [key: string]: string; }} [sendDate] Filter by date sent.
     * @param {MailType} [mailType] A string designating the mail postage type: * &#x60;usps_first_class&#x60; - (default) * &#x60;usps_standard&#x60; - a [cheaper option](https://lob.com/pricing/print-mail#compare) which is less predictable and takes longer to deliver. &#x60;usps_standard&#x60; cannot be used with &#x60;4x6&#x60; postcards or for any postcards sent outside of the United States.
     * @param {object} [sortBy] Sorts items by ascending or descending dates. Use either &#x60;date_created&#x60; or &#x60;send_date&#x60;, not both.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LettersApi
     */
    LettersApi.prototype.list = function (limit, before, after, include, dateCreated, metadata, color, scheduled, sendDate, mailType, sortBy, options) {
        var _this = this;
        return (0, exports.LettersApiFp)(this.configuration)
            .lettersList(limit, before, after, include, dateCreated, metadata, color, scheduled, sendDate, mailType, sortBy, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_3.LetterList(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return LettersApi;
}(base_1.BaseAPI));
exports.LettersApi = LettersApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(lettersApi));

var postcardsApi = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostcardsApi = exports.PostcardsApiFp = exports.PostcardsApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
// @ts-ignore
var models_2 = models;
// @ts-ignore
var models_3 = models;
/**
 * PostcardsApi - axios parameter creator
 * @export
 */
var PostcardsApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Creates a new postcard given information
         * @summary create
         * @param {PostcardEditable} postcardEditable
         * @param {string} [idempotencyKey] A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our [implementation guide](https://www.lob.com/guides#idempotent_request).
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postcardCreate: function (postcardEditable, idempotencyKey, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'postcardEditable' is not null or undefined
                    (0, common_1.assertParamExists)("postcardCreate", "postcardEditable", postcardEditable);
                    localVarPath = "/postcards";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (idempotencyKey !== undefined && idempotencyKey !== null) {
                        localVarHeaderParameter["Idempotency-Key"] = String(idempotencyKey);
                    }
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(postcardEditable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Completely removes a postcard from production. This can only be done if the postcard has a `send_date` and the `send_date` has not yet passed. If the postcard is successfully canceled, you will not be charged for it. Read more on [cancellation windows](#section/Cancellation-Windows) and [scheduling](#section/Scheduled-Mailings). Scheduling and cancellation is a premium feature. Upgrade to the appropriate [Print & Mail Edition](https://dashboard.lob.com/#/settings/editions) to gain access.
         * @summary cancel
         * @param {string} pscId id of the postcard
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postcardDelete: function (pscId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'pscId' is not null or undefined
                    (0, common_1.assertParamExists)("postcardDelete", "pscId", pscId);
                    localVarPath = "/postcards/{psc_id}".replace("{".concat("psc_id", "}"), encodeURIComponent(String(pscId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "DELETE" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Retrieves the details of an existing postcard. You need only supply the unique customer identifier that was returned upon postcard creation.
         * @summary get
         * @param {string} pscId id of the postcard
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postcardRetrieve: function (pscId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'pscId' is not null or undefined
                    (0, common_1.assertParamExists)("postcardRetrieve", "pscId", pscId);
                    localVarPath = "/postcards/{psc_id}".replace("{".concat("psc_id", "}"), encodeURIComponent(String(pscId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Returns a list of your postcards. The addresses are returned sorted by creation date, with the most recently created addresses appearing first.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
         * @param {Array<PostcardSize>} [size] Specifies the size of the postcard. Only &#x60;4x6&#x60; postcards can be sent to international destinations.
         * @param {boolean} [scheduled] * &#x60;true&#x60; - only return orders (past or future) where &#x60;send_date&#x60; is greater than &#x60;date_created&#x60; * &#x60;false&#x60; - only return orders where &#x60;send_date&#x60; is equal to &#x60;date_created&#x60;
         * @param {{ [key: string]: string; }} [sendDate] Filter by date sent.
         * @param {MailType} [mailType] A string designating the mail postage type: * &#x60;usps_first_class&#x60; - (default) * &#x60;usps_standard&#x60; - a [cheaper option](https://lob.com/pricing/print-mail#compare) which is less predictable and takes longer to deliver. &#x60;usps_standard&#x60; cannot be used with &#x60;4x6&#x60; postcards or for any postcards sent outside of the United States.
         * @param {object} [sortBy] Sorts items by ascending or descending dates. Use either &#x60;date_created&#x60; or &#x60;send_date&#x60;, not both.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postcardsList: function (limit, before, after, include, dateCreated, metadata, size, scheduled, sendDate, mailType, sortBy, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    localVarPath = "/postcards";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (limit !== undefined) {
                        localVarQueryParameter["limit"] = limit;
                    }
                    if (before !== undefined) {
                        localVarQueryParameter["before"] = before;
                    }
                    if (after !== undefined) {
                        localVarQueryParameter["after"] = after;
                    }
                    if (include) {
                        localVarQueryParameter["include"] = (0, common_1.valueToString)(include);
                    }
                    if (dateCreated !== undefined) {
                        localVarQueryParameter["date_created"] = (0, common_1.valueToString)(dateCreated);
                    }
                    if (metadata !== undefined) {
                        localVarQueryParameter["metadata"] = (0, common_1.valueToString)(metadata);
                    }
                    if (size) {
                        localVarQueryParameter["size"] = (0, common_1.valueToString)(size);
                    }
                    if (scheduled !== undefined) {
                        localVarQueryParameter["scheduled"] = scheduled;
                    }
                    if (sendDate !== undefined) {
                        localVarQueryParameter["send_date"] = (0, common_1.valueToString)(sendDate);
                    }
                    if (mailType !== undefined) {
                        localVarQueryParameter["mail_type"] = (0, common_1.valueToString)(mailType);
                    }
                    if (sortBy !== undefined) {
                        localVarQueryParameter["sort_by"] = (0, common_1.valueToString)(sortBy);
                    }
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.PostcardsApiAxiosParamCreator = PostcardsApiAxiosParamCreator;
/**
 * PostcardsApi - functional programming interface
 * @export
 */
var PostcardsApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.PostcardsApiAxiosParamCreator)(configuration);
    return {
        /**
         * Creates a new postcard given information
         * @summary create
         * @param {PostcardEditable} postcardEditable
         * @param {string} [idempotencyKey] A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our [implementation guide](https://www.lob.com/guides#idempotent_request).
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postcardCreate: function (postcardEditable, idempotencyKey, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.postcardCreate(postcardEditable, idempotencyKey, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Completely removes a postcard from production. This can only be done if the postcard has a `send_date` and the `send_date` has not yet passed. If the postcard is successfully canceled, you will not be charged for it. Read more on [cancellation windows](#section/Cancellation-Windows) and [scheduling](#section/Scheduled-Mailings). Scheduling and cancellation is a premium feature. Upgrade to the appropriate [Print & Mail Edition](https://dashboard.lob.com/#/settings/editions) to gain access.
         * @summary cancel
         * @param {string} pscId id of the postcard
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postcardDelete: function (pscId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.postcardDelete(pscId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Retrieves the details of an existing postcard. You need only supply the unique customer identifier that was returned upon postcard creation.
         * @summary get
         * @param {string} pscId id of the postcard
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postcardRetrieve: function (pscId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.postcardRetrieve(pscId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Returns a list of your postcards. The addresses are returned sorted by creation date, with the most recently created addresses appearing first.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
         * @param {Array<PostcardSize>} [size] Specifies the size of the postcard. Only &#x60;4x6&#x60; postcards can be sent to international destinations.
         * @param {boolean} [scheduled] * &#x60;true&#x60; - only return orders (past or future) where &#x60;send_date&#x60; is greater than &#x60;date_created&#x60; * &#x60;false&#x60; - only return orders where &#x60;send_date&#x60; is equal to &#x60;date_created&#x60;
         * @param {{ [key: string]: string; }} [sendDate] Filter by date sent.
         * @param {MailType} [mailType] A string designating the mail postage type: * &#x60;usps_first_class&#x60; - (default) * &#x60;usps_standard&#x60; - a [cheaper option](https://lob.com/pricing/print-mail#compare) which is less predictable and takes longer to deliver. &#x60;usps_standard&#x60; cannot be used with &#x60;4x6&#x60; postcards or for any postcards sent outside of the United States.
         * @param {object} [sortBy] Sorts items by ascending or descending dates. Use either &#x60;date_created&#x60; or &#x60;send_date&#x60;, not both.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postcardsList: function (limit, before, after, include, dateCreated, metadata, size, scheduled, sendDate, mailType, sortBy, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.postcardsList(limit, before, after, include, dateCreated, metadata, size, scheduled, sendDate, mailType, sortBy, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.PostcardsApiFp = PostcardsApiFp;
/**
 * PostcardsApi - object-oriented interface
 * @export
 * @class PostcardsApi
 * @extends {BaseAPI}
 */
var PostcardsApi = /** @class */ (function (_super) {
    tslib_1.__extends(PostcardsApi, _super);
    function PostcardsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Creates a new postcard given information
     * @summary create
     * @param {PostcardEditable} postcardEditable
     * @param {string} [idempotencyKey] A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our [implementation guide](https://www.lob.com/guides#idempotent_request).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PostcardsApi
     */
    PostcardsApi.prototype.create = function (postcardEditable, idempotencyKey, options) {
        var _this = this;
        return (0, exports.PostcardsApiFp)(this.configuration)
            .postcardCreate(postcardEditable, idempotencyKey, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.Postcard(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Completely removes a postcard from production. This can only be done if the postcard has a `send_date` and the `send_date` has not yet passed. If the postcard is successfully canceled, you will not be charged for it. Read more on [cancellation windows](#section/Cancellation-Windows) and [scheduling](#section/Scheduled-Mailings). Scheduling and cancellation is a premium feature. Upgrade to the appropriate [Print & Mail Edition](https://dashboard.lob.com/#/settings/editions) to gain access.
     * @summary cancel
     * @param {string} pscId id of the postcard
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PostcardsApi
     */
    PostcardsApi.prototype.cancel = function (pscId, options) {
        var _this = this;
        return (0, exports.PostcardsApiFp)(this.configuration)
            .postcardDelete(pscId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_2.PostcardDeletion(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Retrieves the details of an existing postcard. You need only supply the unique customer identifier that was returned upon postcard creation.
     * @summary get
     * @param {string} pscId id of the postcard
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PostcardsApi
     */
    PostcardsApi.prototype.get = function (pscId, options) {
        var _this = this;
        return (0, exports.PostcardsApiFp)(this.configuration)
            .postcardRetrieve(pscId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.Postcard(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Returns a list of your postcards. The addresses are returned sorted by creation date, with the most recently created addresses appearing first.
     * @summary list
     * @param {number} [limit] How many results to return.
     * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
     * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
     * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
     * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
     * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
     * @param {Array<PostcardSize>} [size] Specifies the size of the postcard. Only &#x60;4x6&#x60; postcards can be sent to international destinations.
     * @param {boolean} [scheduled] * &#x60;true&#x60; - only return orders (past or future) where &#x60;send_date&#x60; is greater than &#x60;date_created&#x60; * &#x60;false&#x60; - only return orders where &#x60;send_date&#x60; is equal to &#x60;date_created&#x60;
     * @param {{ [key: string]: string; }} [sendDate] Filter by date sent.
     * @param {MailType} [mailType] A string designating the mail postage type: * &#x60;usps_first_class&#x60; - (default) * &#x60;usps_standard&#x60; - a [cheaper option](https://lob.com/pricing/print-mail#compare) which is less predictable and takes longer to deliver. &#x60;usps_standard&#x60; cannot be used with &#x60;4x6&#x60; postcards or for any postcards sent outside of the United States.
     * @param {object} [sortBy] Sorts items by ascending or descending dates. Use either &#x60;date_created&#x60; or &#x60;send_date&#x60;, not both.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PostcardsApi
     */
    PostcardsApi.prototype.list = function (limit, before, after, include, dateCreated, metadata, size, scheduled, sendDate, mailType, sortBy, options) {
        var _this = this;
        return (0, exports.PostcardsApiFp)(this.configuration)
            .postcardsList(limit, before, after, include, dateCreated, metadata, size, scheduled, sendDate, mailType, sortBy, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_3.PostcardList(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return PostcardsApi;
}(base_1.BaseAPI));
exports.PostcardsApi = PostcardsApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(postcardsApi));

var reverseGeocodeLookupsApi = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReverseGeocodeLookupsApi = exports.ReverseGeocodeLookupsApiFp = exports.ReverseGeocodeLookupsApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
/**
 * ReverseGeocodeLookupsApi - axios parameter creator
 * @export
 */
var ReverseGeocodeLookupsApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Reverse geocode a valid US location with a live API key.
         * @summary lookup
         * @param {Location} location
         * @param {number} [size] Determines the number of locations returned. Possible values are between 1 and 50 and any number higher will be rounded down to 50. Default size is a list of 5 reverse geocoded locations.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        reverseGeocodeLookup: function (location, size, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'location' is not null or undefined
                    (0, common_1.assertParamExists)("reverseGeocodeLookup", "location", location);
                    localVarPath = "/us_reverse_geocode_lookups";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (size !== undefined) {
                        localVarQueryParameter["size"] = size;
                    }
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(location, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.ReverseGeocodeLookupsApiAxiosParamCreator = ReverseGeocodeLookupsApiAxiosParamCreator;
/**
 * ReverseGeocodeLookupsApi - functional programming interface
 * @export
 */
var ReverseGeocodeLookupsApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.ReverseGeocodeLookupsApiAxiosParamCreator)(configuration);
    return {
        /**
         * Reverse geocode a valid US location with a live API key.
         * @summary lookup
         * @param {Location} location
         * @param {number} [size] Determines the number of locations returned. Possible values are between 1 and 50 and any number higher will be rounded down to 50. Default size is a list of 5 reverse geocoded locations.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        reverseGeocodeLookup: function (location, size, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.reverseGeocodeLookup(location, size, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.ReverseGeocodeLookupsApiFp = ReverseGeocodeLookupsApiFp;
/**
 * ReverseGeocodeLookupsApi - object-oriented interface
 * @export
 * @class ReverseGeocodeLookupsApi
 * @extends {BaseAPI}
 */
var ReverseGeocodeLookupsApi = /** @class */ (function (_super) {
    tslib_1.__extends(ReverseGeocodeLookupsApi, _super);
    function ReverseGeocodeLookupsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Reverse geocode a valid US location with a live API key.
     * @summary lookup
     * @param {Location} location
     * @param {number} [size] Determines the number of locations returned. Possible values are between 1 and 50 and any number higher will be rounded down to 50. Default size is a list of 5 reverse geocoded locations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReverseGeocodeLookupsApi
     */
    ReverseGeocodeLookupsApi.prototype.lookup = function (location, size, options) {
        var _this = this;
        return (0, exports.ReverseGeocodeLookupsApiFp)(this.configuration)
            .reverseGeocodeLookup(location, size, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.ReverseGeocode(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return ReverseGeocodeLookupsApi;
}(base_1.BaseAPI));
exports.ReverseGeocodeLookupsApi = ReverseGeocodeLookupsApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(reverseGeocodeLookupsApi));

var selfMailersApi = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SelfMailersApi = exports.SelfMailersApiFp = exports.SelfMailersApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
// @ts-ignore
var models_2 = models;
// @ts-ignore
var models_3 = models;
/**
 * SelfMailersApi - axios parameter creator
 * @export
 */
var SelfMailersApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Creates a new self_mailer given information
         * @summary create
         * @param {SelfMailerEditable} selfMailerEditable
         * @param {string} [idempotencyKey] A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our [implementation guide](https://www.lob.com/guides#idempotent_request).
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        selfMailerCreate: function (selfMailerEditable, idempotencyKey, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'selfMailerEditable' is not null or undefined
                    (0, common_1.assertParamExists)("selfMailerCreate", "selfMailerEditable", selfMailerEditable);
                    localVarPath = "/self_mailers";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (idempotencyKey !== undefined && idempotencyKey !== null) {
                        localVarHeaderParameter["Idempotency-Key"] = String(idempotencyKey);
                    }
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(selfMailerEditable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Completely removes a self mailer from production. This can only be done if the self mailer\'s `send_date` has not yet passed.
         * @summary delete
         * @param {string} sfmId id of the self_mailer
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        selfMailerDelete: function (sfmId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'sfmId' is not null or undefined
                    (0, common_1.assertParamExists)("selfMailerDelete", "sfmId", sfmId);
                    localVarPath = "/self_mailers/{sfm_id}".replace("{".concat("sfm_id", "}"), encodeURIComponent(String(sfmId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "DELETE" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Retrieves the details of an existing self_mailer. You need only supply the unique self_mailer identifier that was returned upon self_mailer creation.
         * @summary get
         * @param {string} sfmId id of the self_mailer
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        selfMailerRetrieve: function (sfmId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'sfmId' is not null or undefined
                    (0, common_1.assertParamExists)("selfMailerRetrieve", "sfmId", sfmId);
                    localVarPath = "/self_mailers/{sfm_id}".replace("{".concat("sfm_id", "}"), encodeURIComponent(String(sfmId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Returns a list of your self_mailers. The self_mailers are returned sorted by creation date, with the most recently created self_mailers appearing first.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
         * @param {Array<SelfMailerSize>} [size] The self mailer sizes to be returned.
         * @param {boolean} [scheduled] * &#x60;true&#x60; - only return orders (past or future) where &#x60;send_date&#x60; is greater than &#x60;date_created&#x60; * &#x60;false&#x60; - only return orders where &#x60;send_date&#x60; is equal to &#x60;date_created&#x60;
         * @param {{ [key: string]: string; }} [sendDate] Filter by date sent.
         * @param {MailType} [mailType] A string designating the mail postage type: * &#x60;usps_first_class&#x60; - (default) * &#x60;usps_standard&#x60; - a [cheaper option](https://lob.com/pricing/print-mail#compare) which is less predictable and takes longer to deliver. &#x60;usps_standard&#x60; cannot be used with &#x60;4x6&#x60; postcards or for any postcards sent outside of the United States.
         * @param {object} [sortBy] Sorts items by ascending or descending dates. Use either &#x60;date_created&#x60; or &#x60;send_date&#x60;, not both.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        selfMailersList: function (limit, before, after, include, dateCreated, metadata, size, scheduled, sendDate, mailType, sortBy, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    localVarPath = "/self_mailers";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (limit !== undefined) {
                        localVarQueryParameter["limit"] = limit;
                    }
                    if (before !== undefined) {
                        localVarQueryParameter["before"] = before;
                    }
                    if (after !== undefined) {
                        localVarQueryParameter["after"] = after;
                    }
                    if (include) {
                        localVarQueryParameter["include"] = (0, common_1.valueToString)(include);
                    }
                    if (dateCreated !== undefined) {
                        localVarQueryParameter["date_created"] = (0, common_1.valueToString)(dateCreated);
                    }
                    if (metadata !== undefined) {
                        localVarQueryParameter["metadata"] = (0, common_1.valueToString)(metadata);
                    }
                    if (size) {
                        localVarQueryParameter["size"] = (0, common_1.valueToString)(size);
                    }
                    if (scheduled !== undefined) {
                        localVarQueryParameter["scheduled"] = scheduled;
                    }
                    if (sendDate !== undefined) {
                        localVarQueryParameter["send_date"] = (0, common_1.valueToString)(sendDate);
                    }
                    if (mailType !== undefined) {
                        localVarQueryParameter["mail_type"] = (0, common_1.valueToString)(mailType);
                    }
                    if (sortBy !== undefined) {
                        localVarQueryParameter["sort_by"] = (0, common_1.valueToString)(sortBy);
                    }
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.SelfMailersApiAxiosParamCreator = SelfMailersApiAxiosParamCreator;
/**
 * SelfMailersApi - functional programming interface
 * @export
 */
var SelfMailersApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.SelfMailersApiAxiosParamCreator)(configuration);
    return {
        /**
         * Creates a new self_mailer given information
         * @summary create
         * @param {SelfMailerEditable} selfMailerEditable
         * @param {string} [idempotencyKey] A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our [implementation guide](https://www.lob.com/guides#idempotent_request).
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        selfMailerCreate: function (selfMailerEditable, idempotencyKey, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.selfMailerCreate(selfMailerEditable, idempotencyKey, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Completely removes a self mailer from production. This can only be done if the self mailer\'s `send_date` has not yet passed.
         * @summary delete
         * @param {string} sfmId id of the self_mailer
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        selfMailerDelete: function (sfmId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.selfMailerDelete(sfmId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Retrieves the details of an existing self_mailer. You need only supply the unique self_mailer identifier that was returned upon self_mailer creation.
         * @summary get
         * @param {string} sfmId id of the self_mailer
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        selfMailerRetrieve: function (sfmId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.selfMailerRetrieve(sfmId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Returns a list of your self_mailers. The self_mailers are returned sorted by creation date, with the most recently created self_mailers appearing first.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
         * @param {Array<SelfMailerSize>} [size] The self mailer sizes to be returned.
         * @param {boolean} [scheduled] * &#x60;true&#x60; - only return orders (past or future) where &#x60;send_date&#x60; is greater than &#x60;date_created&#x60; * &#x60;false&#x60; - only return orders where &#x60;send_date&#x60; is equal to &#x60;date_created&#x60;
         * @param {{ [key: string]: string; }} [sendDate] Filter by date sent.
         * @param {MailType} [mailType] A string designating the mail postage type: * &#x60;usps_first_class&#x60; - (default) * &#x60;usps_standard&#x60; - a [cheaper option](https://lob.com/pricing/print-mail#compare) which is less predictable and takes longer to deliver. &#x60;usps_standard&#x60; cannot be used with &#x60;4x6&#x60; postcards or for any postcards sent outside of the United States.
         * @param {object} [sortBy] Sorts items by ascending or descending dates. Use either &#x60;date_created&#x60; or &#x60;send_date&#x60;, not both.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        selfMailersList: function (limit, before, after, include, dateCreated, metadata, size, scheduled, sendDate, mailType, sortBy, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.selfMailersList(limit, before, after, include, dateCreated, metadata, size, scheduled, sendDate, mailType, sortBy, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.SelfMailersApiFp = SelfMailersApiFp;
/**
 * SelfMailersApi - object-oriented interface
 * @export
 * @class SelfMailersApi
 * @extends {BaseAPI}
 */
var SelfMailersApi = /** @class */ (function (_super) {
    tslib_1.__extends(SelfMailersApi, _super);
    function SelfMailersApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Creates a new self_mailer given information
     * @summary create
     * @param {SelfMailerEditable} selfMailerEditable
     * @param {string} [idempotencyKey] A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our [implementation guide](https://www.lob.com/guides#idempotent_request).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SelfMailersApi
     */
    SelfMailersApi.prototype.create = function (selfMailerEditable, idempotencyKey, options) {
        var _this = this;
        return (0, exports.SelfMailersApiFp)(this.configuration)
            .selfMailerCreate(selfMailerEditable, idempotencyKey, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.SelfMailer(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Completely removes a self mailer from production. This can only be done if the self mailer\'s `send_date` has not yet passed.
     * @summary delete
     * @param {string} sfmId id of the self_mailer
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SelfMailersApi
     */
    SelfMailersApi.prototype.delete = function (sfmId, options) {
        var _this = this;
        return (0, exports.SelfMailersApiFp)(this.configuration)
            .selfMailerDelete(sfmId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_2.SelfMailerDeletion(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Retrieves the details of an existing self_mailer. You need only supply the unique self_mailer identifier that was returned upon self_mailer creation.
     * @summary get
     * @param {string} sfmId id of the self_mailer
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SelfMailersApi
     */
    SelfMailersApi.prototype.get = function (sfmId, options) {
        var _this = this;
        return (0, exports.SelfMailersApiFp)(this.configuration)
            .selfMailerRetrieve(sfmId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.SelfMailer(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Returns a list of your self_mailers. The self_mailers are returned sorted by creation date, with the most recently created self_mailers appearing first.
     * @summary list
     * @param {number} [limit] How many results to return.
     * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
     * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
     * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
     * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
     * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
     * @param {Array<SelfMailerSize>} [size] The self mailer sizes to be returned.
     * @param {boolean} [scheduled] * &#x60;true&#x60; - only return orders (past or future) where &#x60;send_date&#x60; is greater than &#x60;date_created&#x60; * &#x60;false&#x60; - only return orders where &#x60;send_date&#x60; is equal to &#x60;date_created&#x60;
     * @param {{ [key: string]: string; }} [sendDate] Filter by date sent.
     * @param {MailType} [mailType] A string designating the mail postage type: * &#x60;usps_first_class&#x60; - (default) * &#x60;usps_standard&#x60; - a [cheaper option](https://lob.com/pricing/print-mail#compare) which is less predictable and takes longer to deliver. &#x60;usps_standard&#x60; cannot be used with &#x60;4x6&#x60; postcards or for any postcards sent outside of the United States.
     * @param {object} [sortBy] Sorts items by ascending or descending dates. Use either &#x60;date_created&#x60; or &#x60;send_date&#x60;, not both.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SelfMailersApi
     */
    SelfMailersApi.prototype.list = function (limit, before, after, include, dateCreated, metadata, size, scheduled, sendDate, mailType, sortBy, options) {
        var _this = this;
        return (0, exports.SelfMailersApiFp)(this.configuration)
            .selfMailersList(limit, before, after, include, dateCreated, metadata, size, scheduled, sendDate, mailType, sortBy, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_3.SelfMailerList(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return SelfMailersApi;
}(base_1.BaseAPI));
exports.SelfMailersApi = SelfMailersApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(selfMailersApi));

var templateVersionsApi = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TemplateVersionsApi = exports.TemplateVersionsApiFp = exports.TemplateVersionsApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
// @ts-ignore
var models_2 = models;
// @ts-ignore
var models_3 = models;
/**
 * TemplateVersionsApi - axios parameter creator
 * @export
 */
var TemplateVersionsApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Creates a new template version attached to the specified template.
         * @summary create
         * @param {string} tmplId The ID of the template the new version will be attached to
         * @param {TemplateVersionWritable} templateVersionWritable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createTemplateVersion: function (tmplId, templateVersionWritable, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'tmplId' is not null or undefined
                    (0, common_1.assertParamExists)("createTemplateVersion", "tmplId", tmplId);
                    // verify required parameter 'templateVersionWritable' is not null or undefined
                    (0, common_1.assertParamExists)("createTemplateVersion", "templateVersionWritable", templateVersionWritable);
                    localVarPath = "/templates/{tmpl_id}/versions".replace("{".concat("tmpl_id", "}"), encodeURIComponent(String(tmplId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(templateVersionWritable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Permanently deletes a template version. A template\'s `published_version` can not be deleted.
         * @summary delete
         * @param {string} tmplId The ID of the template to which the version belongs.
         * @param {string} vrsnId id of the template_version
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        templateVersionDelete: function (tmplId, vrsnId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'tmplId' is not null or undefined
                    (0, common_1.assertParamExists)("templateVersionDelete", "tmplId", tmplId);
                    // verify required parameter 'vrsnId' is not null or undefined
                    (0, common_1.assertParamExists)("templateVersionDelete", "vrsnId", vrsnId);
                    localVarPath = "/templates/{tmpl_id}/versions/{vrsn_id}"
                        .replace("{".concat("tmpl_id", "}"), encodeURIComponent(String(tmplId)))
                        .replace("{".concat("vrsn_id", "}"), encodeURIComponent(String(vrsnId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "DELETE" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Retrieves the template version with the given template and version ids.
         * @summary get
         * @param {string} tmplId The ID of the template to which the version belongs.
         * @param {string} vrsnId id of the template_version
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        templateVersionRetrieve: function (tmplId, vrsnId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'tmplId' is not null or undefined
                    (0, common_1.assertParamExists)("templateVersionRetrieve", "tmplId", tmplId);
                    // verify required parameter 'vrsnId' is not null or undefined
                    (0, common_1.assertParamExists)("templateVersionRetrieve", "vrsnId", vrsnId);
                    localVarPath = "/templates/{tmpl_id}/versions/{vrsn_id}"
                        .replace("{".concat("tmpl_id", "}"), encodeURIComponent(String(tmplId)))
                        .replace("{".concat("vrsn_id", "}"), encodeURIComponent(String(vrsnId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Updates the template version with the given template and version ids.
         * @summary update
         * @param {string} tmplId The ID of the template to which the version belongs.
         * @param {string} vrsnId id of the template_version
         * @param {TemplateVersionUpdatable} templateVersionUpdatable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        templateVersionUpdate: function (tmplId, vrsnId, templateVersionUpdatable, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'tmplId' is not null or undefined
                    (0, common_1.assertParamExists)("templateVersionUpdate", "tmplId", tmplId);
                    // verify required parameter 'vrsnId' is not null or undefined
                    (0, common_1.assertParamExists)("templateVersionUpdate", "vrsnId", vrsnId);
                    // verify required parameter 'templateVersionUpdatable' is not null or undefined
                    (0, common_1.assertParamExists)("templateVersionUpdate", "templateVersionUpdatable", templateVersionUpdatable);
                    localVarPath = "/templates/{tmpl_id}/versions/{vrsn_id}"
                        .replace("{".concat("tmpl_id", "}"), encodeURIComponent(String(tmplId)))
                        .replace("{".concat("vrsn_id", "}"), encodeURIComponent(String(vrsnId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(templateVersionUpdatable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Returns a list of template versions for the given template ID. The template versions are sorted by creation date, with the most recently created appearing first.
         * @summary list
         * @param {string} tmplId The ID of the template associated with the retrieved versions
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        templateVersionsList: function (tmplId, limit, before, after, include, dateCreated, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'tmplId' is not null or undefined
                    (0, common_1.assertParamExists)("templateVersionsList", "tmplId", tmplId);
                    localVarPath = "/templates/{tmpl_id}/versions".replace("{".concat("tmpl_id", "}"), encodeURIComponent(String(tmplId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (limit !== undefined) {
                        localVarQueryParameter["limit"] = limit;
                    }
                    if (before !== undefined) {
                        localVarQueryParameter["before"] = before;
                    }
                    if (after !== undefined) {
                        localVarQueryParameter["after"] = after;
                    }
                    if (include) {
                        localVarQueryParameter["include"] = (0, common_1.valueToString)(include);
                    }
                    if (dateCreated !== undefined) {
                        localVarQueryParameter["date_created"] = (0, common_1.valueToString)(dateCreated);
                    }
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.TemplateVersionsApiAxiosParamCreator = TemplateVersionsApiAxiosParamCreator;
/**
 * TemplateVersionsApi - functional programming interface
 * @export
 */
var TemplateVersionsApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.TemplateVersionsApiAxiosParamCreator)(configuration);
    return {
        /**
         * Creates a new template version attached to the specified template.
         * @summary create
         * @param {string} tmplId The ID of the template the new version will be attached to
         * @param {TemplateVersionWritable} templateVersionWritable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createTemplateVersion: function (tmplId, templateVersionWritable, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.createTemplateVersion(tmplId, templateVersionWritable, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Permanently deletes a template version. A template\'s `published_version` can not be deleted.
         * @summary delete
         * @param {string} tmplId The ID of the template to which the version belongs.
         * @param {string} vrsnId id of the template_version
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        templateVersionDelete: function (tmplId, vrsnId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.templateVersionDelete(tmplId, vrsnId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Retrieves the template version with the given template and version ids.
         * @summary get
         * @param {string} tmplId The ID of the template to which the version belongs.
         * @param {string} vrsnId id of the template_version
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        templateVersionRetrieve: function (tmplId, vrsnId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.templateVersionRetrieve(tmplId, vrsnId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Updates the template version with the given template and version ids.
         * @summary update
         * @param {string} tmplId The ID of the template to which the version belongs.
         * @param {string} vrsnId id of the template_version
         * @param {TemplateVersionUpdatable} templateVersionUpdatable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        templateVersionUpdate: function (tmplId, vrsnId, templateVersionUpdatable, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.templateVersionUpdate(tmplId, vrsnId, templateVersionUpdatable, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Returns a list of template versions for the given template ID. The template versions are sorted by creation date, with the most recently created appearing first.
         * @summary list
         * @param {string} tmplId The ID of the template associated with the retrieved versions
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        templateVersionsList: function (tmplId, limit, before, after, include, dateCreated, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.templateVersionsList(tmplId, limit, before, after, include, dateCreated, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.TemplateVersionsApiFp = TemplateVersionsApiFp;
/**
 * TemplateVersionsApi - object-oriented interface
 * @export
 * @class TemplateVersionsApi
 * @extends {BaseAPI}
 */
var TemplateVersionsApi = /** @class */ (function (_super) {
    tslib_1.__extends(TemplateVersionsApi, _super);
    function TemplateVersionsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Creates a new template version attached to the specified template.
     * @summary create
     * @param {string} tmplId The ID of the template the new version will be attached to
     * @param {TemplateVersionWritable} templateVersionWritable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplateVersionsApi
     */
    TemplateVersionsApi.prototype.create = function (tmplId, templateVersionWritable, options) {
        var _this = this;
        return (0, exports.TemplateVersionsApiFp)(this.configuration)
            .createTemplateVersion(tmplId, templateVersionWritable, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.TemplateVersion(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Permanently deletes a template version. A template\'s `published_version` can not be deleted.
     * @summary delete
     * @param {string} tmplId The ID of the template to which the version belongs.
     * @param {string} vrsnId id of the template_version
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplateVersionsApi
     */
    TemplateVersionsApi.prototype.delete = function (tmplId, vrsnId, options) {
        var _this = this;
        return (0, exports.TemplateVersionsApiFp)(this.configuration)
            .templateVersionDelete(tmplId, vrsnId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_2.TemplateVersionDeletion(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Retrieves the template version with the given template and version ids.
     * @summary get
     * @param {string} tmplId The ID of the template to which the version belongs.
     * @param {string} vrsnId id of the template_version
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplateVersionsApi
     */
    TemplateVersionsApi.prototype.get = function (tmplId, vrsnId, options) {
        var _this = this;
        return (0, exports.TemplateVersionsApiFp)(this.configuration)
            .templateVersionRetrieve(tmplId, vrsnId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.TemplateVersion(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Updates the template version with the given template and version ids.
     * @summary update
     * @param {string} tmplId The ID of the template to which the version belongs.
     * @param {string} vrsnId id of the template_version
     * @param {TemplateVersionUpdatable} templateVersionUpdatable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplateVersionsApi
     */
    TemplateVersionsApi.prototype.update = function (tmplId, vrsnId, templateVersionUpdatable, options) {
        var _this = this;
        return (0, exports.TemplateVersionsApiFp)(this.configuration)
            .templateVersionUpdate(tmplId, vrsnId, templateVersionUpdatable, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.TemplateVersion(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Returns a list of template versions for the given template ID. The template versions are sorted by creation date, with the most recently created appearing first.
     * @summary list
     * @param {string} tmplId The ID of the template associated with the retrieved versions
     * @param {number} [limit] How many results to return.
     * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
     * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
     * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
     * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplateVersionsApi
     */
    TemplateVersionsApi.prototype.list = function (tmplId, limit, before, after, include, dateCreated, options) {
        var _this = this;
        return (0, exports.TemplateVersionsApiFp)(this.configuration)
            .templateVersionsList(tmplId, limit, before, after, include, dateCreated, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_3.TemplateVersionList(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return TemplateVersionsApi;
}(base_1.BaseAPI));
exports.TemplateVersionsApi = TemplateVersionsApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(templateVersionsApi));

var templatesApi = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TemplatesApi = exports.TemplatesApiFp = exports.TemplatesApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
// @ts-ignore
var models_2 = models;
// @ts-ignore
var models_3 = models;
/**
 * TemplatesApi - axios parameter creator
 * @export
 */
var TemplatesApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Creates a new template for use with the Print & Mail API. In Live mode, you can only have as many non-deleted templates as allotted in your current [Print & Mail Edition](https://dashboard.lob.com/#/settings/editions). If you attempt to create a template past your limit, you will receive a `403` error. There is no limit in Test mode.
         * @summary create
         * @param {TemplateWritable} templateWritable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createTemplate: function (templateWritable, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'templateWritable' is not null or undefined
                    (0, common_1.assertParamExists)("createTemplate", "templateWritable", templateWritable);
                    localVarPath = "/templates";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(templateWritable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Permanently deletes a template.
         * @summary delete
         * @param {string} tmplId id of the template
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        templateDelete: function (tmplId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'tmplId' is not null or undefined
                    (0, common_1.assertParamExists)("templateDelete", "tmplId", tmplId);
                    localVarPath = "/templates/{tmpl_id}".replace("{".concat("tmpl_id", "}"), encodeURIComponent(String(tmplId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "DELETE" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Retrieves the details of an existing template.
         * @summary get
         * @param {string} tmplId id of the template
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        templateRetrieve: function (tmplId, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'tmplId' is not null or undefined
                    (0, common_1.assertParamExists)("templateRetrieve", "tmplId", tmplId);
                    localVarPath = "/templates/{tmpl_id}".replace("{".concat("tmpl_id", "}"), encodeURIComponent(String(tmplId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Updates the description and/or published version of the template with the given id.
         * @summary update
         * @param {string} tmplId id of the template
         * @param {TemplateUpdate} templateUpdate
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        templateUpdate: function (tmplId, templateUpdate, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'tmplId' is not null or undefined
                    (0, common_1.assertParamExists)("templateUpdate", "tmplId", tmplId);
                    // verify required parameter 'templateUpdate' is not null or undefined
                    (0, common_1.assertParamExists)("templateUpdate", "templateUpdate", templateUpdate);
                    localVarPath = "/templates/{tmpl_id}".replace("{".concat("tmpl_id", "}"), encodeURIComponent(String(tmplId)));
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(templateUpdate, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Returns a list of your templates. The templates are returned sorted by creation date, with the most recently created templates appearing first.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        templatesList: function (limit, before, after, include, dateCreated, metadata, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    localVarPath = "/templates";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "GET" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (limit !== undefined) {
                        localVarQueryParameter["limit"] = limit;
                    }
                    if (before !== undefined) {
                        localVarQueryParameter["before"] = before;
                    }
                    if (after !== undefined) {
                        localVarQueryParameter["after"] = after;
                    }
                    if (include) {
                        localVarQueryParameter["include"] = (0, common_1.valueToString)(include);
                    }
                    if (dateCreated !== undefined) {
                        localVarQueryParameter["date_created"] = (0, common_1.valueToString)(dateCreated);
                    }
                    if (metadata !== undefined) {
                        localVarQueryParameter["metadata"] = (0, common_1.valueToString)(metadata);
                    }
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.TemplatesApiAxiosParamCreator = TemplatesApiAxiosParamCreator;
/**
 * TemplatesApi - functional programming interface
 * @export
 */
var TemplatesApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.TemplatesApiAxiosParamCreator)(configuration);
    return {
        /**
         * Creates a new template for use with the Print & Mail API. In Live mode, you can only have as many non-deleted templates as allotted in your current [Print & Mail Edition](https://dashboard.lob.com/#/settings/editions). If you attempt to create a template past your limit, you will receive a `403` error. There is no limit in Test mode.
         * @summary create
         * @param {TemplateWritable} templateWritable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createTemplate: function (templateWritable, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.createTemplate(templateWritable, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Permanently deletes a template.
         * @summary delete
         * @param {string} tmplId id of the template
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        templateDelete: function (tmplId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.templateDelete(tmplId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Retrieves the details of an existing template.
         * @summary get
         * @param {string} tmplId id of the template
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        templateRetrieve: function (tmplId, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.templateRetrieve(tmplId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Updates the description and/or published version of the template with the given id.
         * @summary update
         * @param {string} tmplId id of the template
         * @param {TemplateUpdate} templateUpdate
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        templateUpdate: function (tmplId, templateUpdate, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.templateUpdate(tmplId, templateUpdate, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Returns a list of your templates. The templates are returned sorted by creation date, with the most recently created templates appearing first.
         * @summary list
         * @param {number} [limit] How many results to return.
         * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
         * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
         * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
         * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
         * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        templatesList: function (limit, before, after, include, dateCreated, metadata, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.templatesList(limit, before, after, include, dateCreated, metadata, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.TemplatesApiFp = TemplatesApiFp;
/**
 * TemplatesApi - object-oriented interface
 * @export
 * @class TemplatesApi
 * @extends {BaseAPI}
 */
var TemplatesApi = /** @class */ (function (_super) {
    tslib_1.__extends(TemplatesApi, _super);
    function TemplatesApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Creates a new template for use with the Print & Mail API. In Live mode, you can only have as many non-deleted templates as allotted in your current [Print & Mail Edition](https://dashboard.lob.com/#/settings/editions). If you attempt to create a template past your limit, you will receive a `403` error. There is no limit in Test mode.
     * @summary create
     * @param {TemplateWritable} templateWritable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplatesApi
     */
    TemplatesApi.prototype.create = function (templateWritable, options) {
        var _this = this;
        return (0, exports.TemplatesApiFp)(this.configuration)
            .createTemplate(templateWritable, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.Template(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Permanently deletes a template.
     * @summary delete
     * @param {string} tmplId id of the template
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplatesApi
     */
    TemplatesApi.prototype.delete = function (tmplId, options) {
        var _this = this;
        return (0, exports.TemplatesApiFp)(this.configuration)
            .templateDelete(tmplId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_2.TemplateDeletion(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Retrieves the details of an existing template.
     * @summary get
     * @param {string} tmplId id of the template
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplatesApi
     */
    TemplatesApi.prototype.get = function (tmplId, options) {
        var _this = this;
        return (0, exports.TemplatesApiFp)(this.configuration)
            .templateRetrieve(tmplId, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.Template(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Updates the description and/or published version of the template with the given id.
     * @summary update
     * @param {string} tmplId id of the template
     * @param {TemplateUpdate} templateUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplatesApi
     */
    TemplatesApi.prototype.update = function (tmplId, templateUpdate, options) {
        var _this = this;
        return (0, exports.TemplatesApiFp)(this.configuration)
            .templateUpdate(tmplId, templateUpdate, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.Template(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Returns a list of your templates. The templates are returned sorted by creation date, with the most recently created templates appearing first.
     * @summary list
     * @param {number} [limit] How many results to return.
     * @param {string} [before] A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response.
     * @param {string} [after] A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response.
     * @param {Array<string>} [include] Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;.
     * @param {{ [key: string]: string; }} [dateCreated] Filter by date created.
     * @param {{ [key: string]: string; }} [metadata] Filter by metadata key-value pair&#x60;.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplatesApi
     */
    TemplatesApi.prototype.list = function (limit, before, after, include, dateCreated, metadata, options) {
        var _this = this;
        return (0, exports.TemplatesApiFp)(this.configuration)
            .templatesList(limit, before, after, include, dateCreated, metadata, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_3.TemplateList(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return TemplatesApi;
}(base_1.BaseAPI));
exports.TemplatesApi = TemplatesApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(templatesApi));

var usAutocompletionsApi = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UsAutocompletionsApi = exports.UsAutocompletionsApiFp = exports.UsAutocompletionsApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
/**
 * UsAutocompletionsApi - axios parameter creator
 * @export
 */
var UsAutocompletionsApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Given an address prefix consisting of a partial primary line, as well as optional input of city, state, and zip code, this functionality returns up to 10 full US address suggestions. Not all of them will turn out to be valid addresses; they\'ll need to be [verified](#operation/verification_us).
         * @summary autocomplete
         * @param {UsAutocompletionsWritable} usAutocompletionsWritable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        usAutocompletion: function (usAutocompletionsWritable, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'usAutocompletionsWritable' is not null or undefined
                    (0, common_1.assertParamExists)("usAutocompletion", "usAutocompletionsWritable", usAutocompletionsWritable);
                    localVarPath = "/us_autocompletions";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(usAutocompletionsWritable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.UsAutocompletionsApiAxiosParamCreator = UsAutocompletionsApiAxiosParamCreator;
/**
 * UsAutocompletionsApi - functional programming interface
 * @export
 */
var UsAutocompletionsApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.UsAutocompletionsApiAxiosParamCreator)(configuration);
    return {
        /**
         * Given an address prefix consisting of a partial primary line, as well as optional input of city, state, and zip code, this functionality returns up to 10 full US address suggestions. Not all of them will turn out to be valid addresses; they\'ll need to be [verified](#operation/verification_us).
         * @summary autocomplete
         * @param {UsAutocompletionsWritable} usAutocompletionsWritable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        usAutocompletion: function (usAutocompletionsWritable, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.usAutocompletion(usAutocompletionsWritable, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.UsAutocompletionsApiFp = UsAutocompletionsApiFp;
/**
 * UsAutocompletionsApi - object-oriented interface
 * @export
 * @class UsAutocompletionsApi
 * @extends {BaseAPI}
 */
var UsAutocompletionsApi = /** @class */ (function (_super) {
    tslib_1.__extends(UsAutocompletionsApi, _super);
    function UsAutocompletionsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Given an address prefix consisting of a partial primary line, as well as optional input of city, state, and zip code, this functionality returns up to 10 full US address suggestions. Not all of them will turn out to be valid addresses; they\'ll need to be [verified](#operation/verification_us).
     * @summary autocomplete
     * @param {UsAutocompletionsWritable} usAutocompletionsWritable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsAutocompletionsApi
     */
    UsAutocompletionsApi.prototype.autocomplete = function (usAutocompletionsWritable, options) {
        var _this = this;
        return (0, exports.UsAutocompletionsApiFp)(this.configuration)
            .usAutocompletion(usAutocompletionsWritable, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.UsAutocompletions(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return UsAutocompletionsApi;
}(base_1.BaseAPI));
exports.UsAutocompletionsApi = UsAutocompletionsApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(usAutocompletionsApi));

var usVerificationsApi = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UsVerificationsApi = exports.UsVerificationsApiFp = exports.UsVerificationsApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
// @ts-ignore
var models_2 = models;
/**
 * UsVerificationsApi - axios parameter creator
 * @export
 */
var UsVerificationsApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Verify a list of US or US territory addresses with a live API key.
         * @summary verifyBulk
         * @param {MultipleComponentsList} multipleComponentsList
         * @param {'upper' | 'proper'} [_case] Casing of the verified address. Possible values are &#x60;upper&#x60; and &#x60;proper&#x60; for uppercased (e.g. \&quot;PO BOX\&quot;) and proper-cased (e.g. \&quot;PO Box\&quot;), respectively.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bulkUsVerifications: function (multipleComponentsList, _case, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'multipleComponentsList' is not null or undefined
                    (0, common_1.assertParamExists)("bulkUsVerifications", "multipleComponentsList", multipleComponentsList);
                    localVarPath = "/bulk/us_verifications";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (_case !== undefined) {
                        localVarQueryParameter["case"] = _case;
                    }
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(multipleComponentsList, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
        /**
         * Verify a US or US territory address with a live API key.
         * @summary verifySingle
         * @param {UsVerificationsWritable} usVerificationsWritable
         * @param {'upper' | 'proper'} [_case] Casing of the verified address. Possible values are &#x60;upper&#x60; and &#x60;proper&#x60; for uppercased (e.g. \&quot;PO BOX\&quot;) and proper-cased (e.g. \&quot;PO Box\&quot;), respectively.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        usVerification: function (usVerificationsWritable, _case, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'usVerificationsWritable' is not null or undefined
                    (0, common_1.assertParamExists)("usVerification", "usVerificationsWritable", usVerificationsWritable);
                    localVarPath = "/us_verifications";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    if (_case !== undefined) {
                        localVarQueryParameter["case"] = _case;
                    }
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(usVerificationsWritable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.UsVerificationsApiAxiosParamCreator = UsVerificationsApiAxiosParamCreator;
/**
 * UsVerificationsApi - functional programming interface
 * @export
 */
var UsVerificationsApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.UsVerificationsApiAxiosParamCreator)(configuration);
    return {
        /**
         * Verify a list of US or US territory addresses with a live API key.
         * @summary verifyBulk
         * @param {MultipleComponentsList} multipleComponentsList
         * @param {'upper' | 'proper'} [_case] Casing of the verified address. Possible values are &#x60;upper&#x60; and &#x60;proper&#x60; for uppercased (e.g. \&quot;PO BOX\&quot;) and proper-cased (e.g. \&quot;PO Box\&quot;), respectively.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bulkUsVerifications: function (multipleComponentsList, _case, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.bulkUsVerifications(multipleComponentsList, _case, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
        /**
         * Verify a US or US territory address with a live API key.
         * @summary verifySingle
         * @param {UsVerificationsWritable} usVerificationsWritable
         * @param {'upper' | 'proper'} [_case] Casing of the verified address. Possible values are &#x60;upper&#x60; and &#x60;proper&#x60; for uppercased (e.g. \&quot;PO BOX\&quot;) and proper-cased (e.g. \&quot;PO Box\&quot;), respectively.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        usVerification: function (usVerificationsWritable, _case, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.usVerification(usVerificationsWritable, _case, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.UsVerificationsApiFp = UsVerificationsApiFp;
/**
 * UsVerificationsApi - object-oriented interface
 * @export
 * @class UsVerificationsApi
 * @extends {BaseAPI}
 */
var UsVerificationsApi = /** @class */ (function (_super) {
    tslib_1.__extends(UsVerificationsApi, _super);
    function UsVerificationsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Verify a list of US or US territory addresses with a live API key.
     * @summary verifyBulk
     * @param {MultipleComponentsList} multipleComponentsList
     * @param {'upper' | 'proper'} [_case] Casing of the verified address. Possible values are &#x60;upper&#x60; and &#x60;proper&#x60; for uppercased (e.g. \&quot;PO BOX\&quot;) and proper-cased (e.g. \&quot;PO Box\&quot;), respectively.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsVerificationsApi
     */
    UsVerificationsApi.prototype.verifyBulk = function (multipleComponentsList, _case, options) {
        var _this = this;
        return (0, exports.UsVerificationsApiFp)(this.configuration)
            .bulkUsVerifications(multipleComponentsList, _case, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_2.UsVerifications(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    /**
     * Verify a US or US territory address with a live API key.
     * @summary verifySingle
     * @param {UsVerificationsWritable} usVerificationsWritable
     * @param {'upper' | 'proper'} [_case] Casing of the verified address. Possible values are &#x60;upper&#x60; and &#x60;proper&#x60; for uppercased (e.g. \&quot;PO BOX\&quot;) and proper-cased (e.g. \&quot;PO Box\&quot;), respectively.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsVerificationsApi
     */
    UsVerificationsApi.prototype.verifySingle = function (usVerificationsWritable, _case, options) {
        var _this = this;
        return (0, exports.UsVerificationsApiFp)(this.configuration)
            .usVerification(usVerificationsWritable, _case, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.UsVerification(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return UsVerificationsApi;
}(base_1.BaseAPI));
exports.UsVerificationsApi = UsVerificationsApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(usVerificationsApi));

var zipLookupsApi = {};

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZipLookupsApi = exports.ZipLookupsApiFp = exports.ZipLookupsApiAxiosParamCreator = void 0;
var tslib_1 = require$$0__default["default"];
var axios_1 = tslib_1.__importDefault(require$$1__default["default"]);
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = common;
// @ts-ignore
var base_1 = base;
// @ts-ignore
var models_1 = models;
/**
 * ZipLookupsApi - axios parameter creator
 * @export
 */
var ZipLookupsApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         * Returns information about a ZIP code
         * @summary lookup
         * @param {ZipEditable} zipEditable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        zipLookup: function (zipEditable, options) {
            if (options === void 0) { options = {}; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return tslib_1.__generator(this, function (_a) {
                    // verify required parameter 'zipEditable' is not null or undefined
                    (0, common_1.assertParamExists)("zipLookup", "zipEditable", zipEditable);
                    localVarPath = "/us_zip_lookups";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = tslib_1.__assign(tslib_1.__assign({ method: "POST" }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basicAuth required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(zipEditable, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.ZipLookupsApiAxiosParamCreator = ZipLookupsApiAxiosParamCreator;
/**
 * ZipLookupsApi - functional programming interface
 * @export
 */
var ZipLookupsApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.ZipLookupsApiAxiosParamCreator)(configuration);
    return {
        /**
         * Returns information about a ZIP code
         * @summary lookup
         * @param {ZipEditable} zipEditable
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        zipLookup: function (zipEditable, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.zipLookup(zipEditable, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.ZipLookupsApiFp = ZipLookupsApiFp;
/**
 * ZipLookupsApi - object-oriented interface
 * @export
 * @class ZipLookupsApi
 * @extends {BaseAPI}
 */
var ZipLookupsApi = /** @class */ (function (_super) {
    tslib_1.__extends(ZipLookupsApi, _super);
    function ZipLookupsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Returns information about a ZIP code
     * @summary lookup
     * @param {ZipEditable} zipEditable
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ZipLookupsApi
     */
    ZipLookupsApi.prototype.lookup = function (zipEditable, options) {
        var _this = this;
        return (0, exports.ZipLookupsApiFp)(this.configuration)
            .zipLookup(zipEditable, options)
            .then(function (request) { return request(_this.axios, _this.basePath); })
            .then(function (response) {
            return new models_1.Zip(response.data);
        })
            .catch(function (error) {
            var _a, _b, _c;
            if ((_c = (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.message) {
                error.message = error.response.data.error.message;
            }
            throw error;
        });
    };
    return ZipLookupsApi;
}(base_1.BaseAPI));
exports.ZipLookupsApi = ZipLookupsApi;
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(zipLookupsApi));

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require$$0__default["default"];
tslib_1.__exportStar(addressesApi, exports);
tslib_1.__exportStar(bankAccountsApi, exports);
tslib_1.__exportStar(billingGroupsApi, exports);
tslib_1.__exportStar(cardOrdersApi, exports);
tslib_1.__exportStar(cardsApi, exports);
tslib_1.__exportStar(checksApi, exports);
tslib_1.__exportStar(intlAutocompletionsApi, exports);
tslib_1.__exportStar(intlVerificationsApi, exports);
tslib_1.__exportStar(lettersApi, exports);
tslib_1.__exportStar(postcardsApi, exports);
tslib_1.__exportStar(reverseGeocodeLookupsApi, exports);
tslib_1.__exportStar(selfMailersApi, exports);
tslib_1.__exportStar(templateVersionsApi, exports);
tslib_1.__exportStar(templatesApi, exports);
tslib_1.__exportStar(usAutocompletionsApi, exports);
tslib_1.__exportStar(usVerificationsApi, exports);
tslib_1.__exportStar(zipLookupsApi, exports);
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(api));

var configuration = {};

/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(configuration, "__esModule", { value: true });
configuration.Configuration = void 0;
var Configuration = /** @class */ (function () {
    function Configuration(param) {
        if (param === void 0) { param = {}; }
        this.apiKey = param.apiKey;
        this.username = param.username;
        this.password = param.password;
        this.accessToken = param.accessToken;
        this.basePath = param.basePath;
        this.baseOptions = param.baseOptions;
        this.formDataCtor = param.formDataCtor;
    }
    /**
     * Check if the given MIME is a JSON MIME.
     * JSON MIME examples:
     *   application/json
     *   application/json; charset=UTF8
     *   APPLICATION/JSON
     *   application/vnd.company+json
     * @param mime - MIME (Multipurpose Internet Mail Extensions)
     * @return True if the given MIME is JSON, false otherwise.
     */
    Configuration.prototype.isJsonMime = function (mime) {
        var jsonMime = new RegExp("^(application/json|[^;/ \t]+/[^;/ \t]+[+]json)[ \t]*(;.*)?$", "i");
        return (mime !== null &&
            (jsonMime.test(mime) ||
                mime.toLowerCase() === "application/json-patch+json"));
    };
    return Configuration;
}());
configuration.Configuration = Configuration;

(function (exports) {
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require$$0__default["default"];
tslib_1.__exportStar(api, exports);
tslib_1.__exportStar(configuration, exports);
tslib_1.__exportStar(models, exports);
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

}(lobTypescriptSdk));

var index = /*@__PURE__*/getDefaultExportFromCjs(lobTypescriptSdk);

module.exports = index;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
